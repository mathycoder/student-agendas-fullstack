{"ast":null,"code":"import _objectWithoutProperties from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n});\nexport default studentReducer;\n\nfunction studentsById(state = {}, action) {\n  switch (action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENTS':\n      const students = JSON.parse(action.students);\n      const normalizedObject = {};\n      students.forEach(student => {\n        debugger;\n        normalizedObject[\"student\".concat(student.id)] = {\n          firstName: student.firstName,\n          id: student.id,\n          klass_id: student.klass_id,\n          lastName: student.lastName,\n          progressions: student.student_progressions.map(stProg => \"studentProgression\".concat(stProg.id))\n        };\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = \"student\".concat(action.student.id);\n      return _objectSpread({}, state, {\n        [newStudentId]: action.student\n      });\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const deleteStudentId = \"student\".concat(action.student.id);\n\n      const value = state[deleteStudentId],\n            newState = _objectWithoutProperties(state, [deleteStudentId].map(_toPropertyKey));\n\n      return _objectSpread({}, newState);\n\n    default:\n      return state;\n  }\n}\n\nfunction allStudents(state = [], action) {\n  switch (action.type) {\n    case 'ADD_STUDENTS':\n      return [...sortedStudents(JSON.parse(action.students)).map(student => \"student\".concat(student.id))];\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = \"student\".concat(action.student.id);\n      return [...state, studentId];\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const studentIdToDelete = \"student\".concat(action.student.id);\n      return state.filter(stId => stId !== studentIdToDelete);\n\n    default:\n      return state;\n  }\n}\n\nfunction sortedStudents(students) {\n  return students.sort((stA, stB) => {\n    const studentA = stA.firstName.toLowerCase();\n    const studentB = stB.firstName.toLowerCase();\n\n    if (studentA > studentB) {\n      return 1;\n    } else if (studentA < studentB) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/studentReducer.js"],"names":["combineReducers","studentReducer","byId","studentsById","allIds","allStudents","state","action","type","students","JSON","parse","normalizedObject","forEach","student","id","firstName","klass_id","lastName","progressions","student_progressions","map","stProg","newStudentId","deleteStudentId","value","newState","sortedStudents","studentId","studentIdToDelete","filter","stId","sort","stA","stB","studentA","toLowerCase","studentB"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n})\n\nexport default studentReducer\n\nfunction studentsById(state = {}, action) {\n  switch(action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENTS':\n      const students = JSON.parse(action.students)\n      const normalizedObject = {}\n      students.forEach(student => {\n        debugger\n        normalizedObject[`student${student.id}`] = {\n          firstName: student.firstName,\n          id: student.id,\n          klass_id: student.klass_id,\n          lastName: student.lastName,\n          progressions: student.student_progressions.map(stProg => `studentProgression${stProg.id}`)\n        }\n      })\n\n      return {\n        ...normalizedObject\n      }\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = `student${action.student.id}`\n\n      return {\n        ...state,\n        [newStudentId]: action.student\n      }\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const deleteStudentId = `student${action.student.id}`\n      const { [deleteStudentId]: value, ...newState  } = state\n\n      return {\n        ...newState\n      }\n\n    default:\n      return state\n  }\n}\n\n\nfunction allStudents(state = [], action) {\n\n  switch(action.type) {\n    case 'ADD_STUDENTS':\n      return [\n        ...sortedStudents(JSON.parse(action.students)).map(student => `student${student.id}`)\n      ]\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = `student${action.student.id}`\n      return [...state, studentId]\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const studentIdToDelete = `student${action.student.id}`\n      return state.filter(stId => stId !== studentIdToDelete)\n\n    default:\n      return state\n  }\n}\n\nfunction sortedStudents(students){\n  return students.sort((stA, stB) => {\n    const studentA = stA.firstName.toLowerCase()\n    const studentB = stB.firstName.toLowerCase()\n    if (studentA > studentB) { return 1 }\n    else if (studentA < studentB ) {return -1 }\n    else {return 0}\n  })\n}\n"]},"metadata":{},"sourceType":"module"}