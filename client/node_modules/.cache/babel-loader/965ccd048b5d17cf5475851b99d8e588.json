{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/navbar/NavBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './navbar.css';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      klassDropdown: false,\n      progressionDropdown: false\n    };\n\n    this.handleClick = e => {// if (this.state.klassDropdown){\n      //   if (this.myRef.current.contains(e.target) || this.klassDropdownRef.current.contains(e.target)) { return }\n      //   this.handleKlassDropdownClick()\n      // }\n      // if (this.state.progressionDropdown){\n      //   if (this.myRef.current.contains(e.target) || this.progressionDropdownRef.current.contains(e.target)) { return }\n      //   this.handleProgressionDropdownClick()\n      // }\n    };\n\n    this.handleKlassDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        klassDropdown: !this.state.klassDropdown\n      }));\n    };\n\n    this.handleProgressionDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        progressionDropdown: !this.state.progressionDropdown\n      }));\n    };\n\n    this.renderKlassDropdown = () => {\n      const _this$props = this.props,\n            klasses = _this$props.klasses,\n            klassDropdown = _this$props.klassDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu klass-dropdown \".concat(klassDropdown ? 'opened' : 'closed'),\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, klasses.allIds.map((klassId, index) => {\n        const klass = klasses.byId[klassId];\n        return React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          onClick: this.handleKlassDropdownClick,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Class \", klass.name);\n      }), React.createElement(NavLink, {\n        to: \"/classes/new\",\n        onClick: this.handleKlassDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Create New\"));\n    };\n\n    this.renderProgressionDropdown = () => {\n      const progressions = this.props.progressions;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu progression-dropdown\",\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/progressions/new\",\n        onClick: this.handleProgressionDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Create New\"), React.createElement(NavLink, {\n        to: \"/progressions\",\n        onClick: this.handleProgressionDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"All Progressions\"));\n    };\n\n    this.myRef = React.createRef();\n    this.klassDropdownRef = React.createRef();\n    this.progressionDropdownRef = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"div\", {\n      className: \"klass-dropdown\",\n      ref: this.klassDropdownRef,\n      onClick: this.handleKlassDropdownClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Classes\"), React.createElement(\"div\", {\n      className: \"klass-dropdown\",\n      ref: this.progressionDropdownRef,\n      onClick: this.handleProgressionDropdownClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Progressions\")), React.createElement(\"div\", {\n      className: \"navbar-dropdowns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.renderKlassDropdown(), this.state.progressionDropdown ? this.renderProgressionDropdown() : ''));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/navbar/NavBar.js"],"names":["React","Component","NavLink","NavBar","constructor","props","state","klassDropdown","progressionDropdown","handleClick","e","handleKlassDropdownClick","setState","handleProgressionDropdownClick","renderKlassDropdown","klasses","myRef","allIds","map","klassId","index","klass","byId","id","name","renderProgressionDropdown","progressions","createRef","klassDropdownRef","progressionDropdownRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './navbar.css'\n\nclass NavBar extends Component{\n  constructor(props){\n    super(props)\n    this.myRef = React.createRef()\n    this.klassDropdownRef = React.createRef()\n    this.progressionDropdownRef = React.createRef()\n  }\n\n  state = {\n    klassDropdown: false,\n    progressionDropdown: false\n  }\n\n  componentDidMount(){\n    document.addEventListener('mousedown', this.handleClick)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClick)\n  }\n\n  handleClick = (e) => {\n    // if (this.state.klassDropdown){\n    //   if (this.myRef.current.contains(e.target) || this.klassDropdownRef.current.contains(e.target)) { return }\n    //   this.handleKlassDropdownClick()\n    // }\n    // if (this.state.progressionDropdown){\n    //   if (this.myRef.current.contains(e.target) || this.progressionDropdownRef.current.contains(e.target)) { return }\n    //   this.handleProgressionDropdownClick()\n    // }\n  }\n\n  handleKlassDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      klassDropdown: !this.state.klassDropdown\n    })\n  }\n\n  handleProgressionDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      progressionDropdown: !this.state.progressionDropdown\n    })\n  }\n\n  renderKlassDropdown = () => {\n    const { klasses, klassDropdown } = this.props\n    return (\n      <div className={`dropdown-menu klass-dropdown ${klassDropdown ? 'opened': 'closed'}`} ref={this.myRef}>\n        {klasses.allIds.map((klassId, index) => {\n          const klass = klasses.byId[klassId]\n          return (\n            <NavLink\n              to={`/classes/${klass.id}`}\n              onClick={this.handleKlassDropdownClick}\n              key={index}\n              >\n              Class {klass.name}\n            </NavLink>\n            )\n        })}\n        <NavLink\n          to={`/classes/new`}\n          onClick={this.handleKlassDropdownClick}\n          >\n          Create New\n        </NavLink>\n      </div>\n    )\n  }\n\n  renderProgressionDropdown = () => {\n    const { progressions } = this.props\n    return (\n      <div className=\"dropdown-menu progression-dropdown\" ref={this.myRef}>\n        <NavLink\n          to={`/progressions/new`}\n          onClick={this.handleProgressionDropdownClick}\n          >\n          Create New\n        </NavLink>\n        <NavLink\n          to={`/progressions`}\n          onClick={this.handleProgressionDropdownClick}\n          >\n          All Progressions\n        </NavLink>\n      </div>\n    )\n  }\n\n  render(){\n    return (\n      <div>\n        <div className=\"navbar\">\n          <NavLink to=\"/\">Home</NavLink>\n          <div className=\"klass-dropdown\" ref={this.klassDropdownRef} onClick={this.handleKlassDropdownClick}>\n            Classes\n          </div>\n          <div className=\"klass-dropdown\" ref={this.progressionDropdownRef} onClick={this.handleProgressionDropdownClick}>\n            Progressions\n          </div>\n        </div>\n        <div className=\"navbar-dropdowns\">\n          {this.renderKlassDropdown()}\n          {this.state.progressionDropdown ? this.renderProgressionDropdown() : ''}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}