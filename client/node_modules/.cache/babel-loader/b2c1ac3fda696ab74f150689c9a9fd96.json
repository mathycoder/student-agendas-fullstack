{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer';\nimport NewKlassForm from './NewKlassForm';\nimport { connect } from 'react-redux';\nimport { fetchKlasses } from '../actions/fetchKlasses';\nimport { addKlass, removeKlass } from '../actions/klassActions';\n\nclass KlassesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeStudentFromKlass = student => {\n      fetch(\"/klasses/\".concat(student.klass_id, \"/students/\").concat(student.id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(json => {\n        const newKlasses = [...this.state.klasses];\n        const klassIndex = newKlasses.findIndex(klass => klass.id === json.klass_id);\n        const studentIndex = newKlasses[klassIndex].students.findIndex(st => st.id === json.id);\n        newKlasses[klassIndex].students.splice(studentIndex, 1);\n        this.setState(_objectSpread({}, this.state, {\n          klasses: [...newKlasses]\n        }));\n      });\n    };\n\n    this.klassSelectDropdown = () => {\n      return React.createElement(\"div\", {\n        className: \"progression-menu-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.klasses.map((klass, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/classes/\".concat(klass.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, klass.name))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/classes/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"New Class\"))));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchKlasses();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.klassSelectDropdown(), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/new\"),\n      render: () => React.createElement(NewKlassForm, Object.assign({}, this.props, {\n        addKlass: this.props.addKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      render: routerProps => React.createElement(ShowKlassContainer, Object.assign({}, routerProps, {\n        addStudentToKlass: this.addStudentToKlass,\n        removeStudentFromKlass: this.removeStudentFromKlass,\n        removeKlass: this.props.removeKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })),\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    addKlass: klass => dispatch(addKlass(klass)),\n    removeKlass: klass => dispatch(removeKlass(klass))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js"],"names":["React","Component","Route","NavLink","Switch","ShowKlassContainer","NewKlassForm","connect","fetchKlasses","addKlass","removeKlass","KlassesContainer","removeStudentFromKlass","student","fetch","klass_id","id","method","headers","then","resp","json","newKlasses","state","klasses","klassIndex","findIndex","klass","studentIndex","students","st","splice","setState","klassSelectDropdown","props","map","index","name","componentDidMount","render","match","url","routerProps","addStudentToKlass","Math","random","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer'\nimport NewKlassForm from './NewKlassForm'\nimport { connect } from 'react-redux'\nimport { fetchKlasses } from '../actions/fetchKlasses'\nimport { addKlass, removeKlass } from '../actions/klassActions'\n\nclass KlassesContainer extends Component {\n  componentDidMount(){\n    this.props.fetchKlasses()\n  }\n\n  removeStudentFromKlass = (student) => {\n    fetch(`/klasses/${student.klass_id}/students/${student.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        const newKlasses = [...this.state.klasses]\n        const klassIndex = newKlasses.findIndex(klass => klass.id === json.klass_id)\n        const studentIndex = newKlasses[klassIndex].students.findIndex(st => st.id === json.id)\n        newKlasses[klassIndex].students.splice(studentIndex, 1)\n\n        this.setState({\n          ...this.state,\n          klasses: [\n            ...newKlasses,\n          ]\n        })\n      })\n  }\n\n  klassSelectDropdown = () => {\n    return (\n      <div className=\"progression-menu-bar\">\n        <ul>\n          {this.props.klasses.map((klass, index) => (\n            <li key={index}>\n              {<NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>}\n            </li>\n          ))}\n            <li>{<NavLink to={`/classes/new`}>New Class</NavLink>}</li>\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {this.klassSelectDropdown()}\n        <Switch>\n          <Route exact path={`${this.props.match.url}/new`} render={() => <NewKlassForm {...this.props} addKlass={this.props.addKlass} />} />\n          <Route exact path={`${this.props.match.url}/:id`} render={(routerProps) => <ShowKlassContainer {...routerProps} addStudentToKlass={this.addStudentToKlass} removeStudentFromKlass={this.removeStudentFromKlass} removeKlass={this.props.removeKlass} />} key={Math.random()} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    addKlass: (klass) => dispatch(addKlass(klass)),\n    removeKlass: (klass) => dispatch(removeKlass(klass))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {klasses: state.klasses}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer)\n"]},"metadata":{},"sourceType":"module"}