{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions';\nimport AssignedProgressions from './AssignedProgressions';\nimport SubmittedProgressions from './SubmittedProgressions';\nimport '../css/student-show.css';\n\nclass StudentShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: undefined,\n      myProgressions: undefined,\n      assignedProgressions: undefined,\n      submittedProgressions: undefined\n    };\n\n    this.setProgressions = () => {\n      const _this$props = this.props,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions;\n      const _this$state = this.state,\n            student = _this$state.student,\n            incompleteProgressions = _this$state.incompleteProgressions,\n            completeProgressions = _this$state.completeProgressions,\n            myProgressions = _this$state.myProgressions;\n\n      if (!myProgressions && progressions.allIds.length > 0 && student) {\n        const tempProgressions = getStudentProgressions(student, studentProgressions, progressions);\n        this.setState({\n          myProgressions: [...tempProgressions],\n          assignedProgressions: [...tempProgressions.filter(prog => !prog.submitted)],\n          submittedProgressions: [...tempProgressions.filter(prog => prog.submitted)]\n        });\n      }\n    };\n\n    this.setStudent = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            handleSetStudent = _this$props2.handleSetStudent;\n      const studentId = this.props.match.params.id;\n      const student = students.byId[\"student\".concat(studentId)];\n\n      if (student && !this.state.student) {\n        handleSetStudent(student);\n        this.setState(_objectSpread({}, this.state, {\n          student: student\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleStudentShowPage();\n  }\n\n  componentDidUpdate() {\n    this.setStudent();\n    this.setProgressions();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          student = _this$state2.student,\n          assignedProgressions = _this$state2.assignedProgressions,\n          submittedProgressions = _this$state2.submittedProgressions;\n    const _this$props3 = this.props,\n          progressions = _this$props3.progressions,\n          studentProgressions = _this$props3.studentProgressions,\n          reflections = _this$props3.reflections,\n          videos = _this$props3.videos;\n\n    if (student && assignedProgressions && submittedProgressions) {\n      return React.createElement(\"div\", {\n        className: \"student-show-wrapper index-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"assigned-progressions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(AssignedProgressions, {\n        reflections: reflections,\n        videos: videos,\n        progressions: assignedProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitted-progressions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(SubmittedProgressions, {\n        videos: videos,\n        reflections: reflections,\n        progressions: submittedProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js"],"names":["React","Component","connect","getStudentProgressions","AssignedProgressions","SubmittedProgressions","StudentShowContainer","state","student","undefined","myProgressions","assignedProgressions","submittedProgressions","setProgressions","props","progressions","studentProgressions","incompleteProgressions","completeProgressions","allIds","length","tempProgressions","setState","filter","prog","submitted","setStudent","students","handleSetStudent","studentId","match","params","id","byId","componentDidMount","handleStudentShowPage","componentDidUpdate","render","reflections","videos","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions'\nimport AssignedProgressions from './AssignedProgressions'\nimport SubmittedProgressions from './SubmittedProgressions'\nimport '../css/student-show.css'\n\nclass StudentShowContainer extends Component {\n  state = {\n    student: undefined,\n    myProgressions: undefined,\n    assignedProgressions: undefined,\n    submittedProgressions: undefined\n  }\n\n  componentDidMount(){\n    this.props.handleStudentShowPage()\n  }\n\n  componentDidUpdate(){\n    this.setStudent()\n    this.setProgressions()\n  }\n\n  setProgressions = () => {\n    const { progressions, studentProgressions } = this.props\n    const { student, incompleteProgressions, completeProgressions, myProgressions } = this.state\n    if (!myProgressions && progressions.allIds.length > 0 && student){\n      const tempProgressions = getStudentProgressions(student, studentProgressions, progressions)\n      this.setState({\n        myProgressions: [...tempProgressions],\n        assignedProgressions: [...tempProgressions.filter(prog => !prog.submitted)],\n        submittedProgressions: [...tempProgressions.filter(prog => prog.submitted)]\n      })\n    }\n  }\n\n  setStudent = () => {\n    const { students, handleSetStudent } = this.props\n    const studentId = this.props.match.params.id\n    const student = students.byId[`student${studentId}`]\n    if (student && !this.state.student){\n      handleSetStudent(student)\n      this.setState({\n        ...this.state,\n        student: student\n      })\n    }\n  }\n\n  render(){\n    const { student, assignedProgressions, submittedProgressions } = this.state\n    const { progressions, studentProgressions, reflections, videos } = this.props\n    if (student && assignedProgressions && submittedProgressions) {\n      return (\n        <div className=\"student-show-wrapper index-page\">\n          <div className=\"assigned-progressions\">\n            <AssignedProgressions\n              reflections={reflections}\n              videos={videos}\n              progressions={assignedProgressions}/>\n          </div>\n          <div className=\"submitted-progressions\">\n            <SubmittedProgressions\n              videos={videos}\n              reflections={reflections}\n              progressions={submittedProgressions}/>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer)\n"]},"metadata":{},"sourceType":"module"}