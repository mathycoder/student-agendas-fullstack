{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/Student.js\";\nimport React, { Component } from 'react';\nimport StudentAgenda from './StudentAgenda';\nimport './student.css';\nimport { connect } from 'react-redux';\nimport { deleteStudentProgression, switchStudentProgression } from '../../actions/studentProgressionActions';\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd';\n\nclass Student extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteProgClick = progression => {\n      const _this$props = this.props,\n            deleteStudentProgression = _this$props.deleteStudentProgression,\n            student = _this$props.student;\n      deleteStudentProgression(student, progression);\n    };\n\n    this.handleDNDDragStart = attributes => {// const {draggableId} = attributes\n      // document.querySelector(`#item-${draggableId}`).classList.add(\"item-dragging\")\n    };\n\n    this.handleDNDDragEnd = result => {\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n\n      if (!destination || !source) {\n        return;\n      }\n\n      if (destination.index !== source.index) {\n        this.props.switchStudentProgression(draggableId, destination.index);\n      }\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          student = _this$props2.student,\n          progressions = _this$props2.progressions,\n          handleDragOver = _this$props2.handleDragOver,\n          handleDragLeave = _this$props2.handleDragLeave,\n          handleDragDrop = _this$props2.handleDragDrop;\n    return React.createElement(\"div\", {\n      className: \"student-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"student-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, student.firstName, \" \", student.lastName)), React.createElement(DragDropContext, {\n      onDragEnd: this.handleDNDDragEnd,\n      onDragStart: this.handleDNDDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable-\".concat(student.id),\n      direction: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, provided => React.createElement(StudentAgenda, Object.assign({}, provided.droppableProps, {\n      placeholder: provided.placeholder,\n      innerRef: provided.innerRef,\n      student: student,\n      progressions: progressions,\n      handleDragOver: handleDragOver,\n      handleDragLeave: handleDragLeave,\n      handleDragDrop: handleDragDrop,\n      handleDeleteProgClick: this.handleDeleteProgClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteStudentProgression: (student, progression) => dispatch(deleteStudentProgression(student, progression)),\n    switchStudentProgression: (draggableId, newIndex) => dispatch(switchStudentProgression(draggableId, newIndex))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Student);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/Student.js"],"names":["React","Component","StudentAgenda","connect","deleteStudentProgression","switchStudentProgression","Droppable","DragDropContext","Student","handleDeleteProgClick","progression","props","student","handleDNDDragStart","attributes","handleDNDDragEnd","result","destination","source","draggableId","index","render","progressions","handleDragOver","handleDragLeave","handleDragDrop","firstName","lastName","id","provided","droppableProps","placeholder","innerRef","mapDispatchToProps","dispatch","newIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentAgenda from './StudentAgenda'\nimport './student.css'\nimport { connect } from 'react-redux'\nimport { deleteStudentProgression, switchStudentProgression } from '../../actions/studentProgressionActions'\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd'\n\nclass Student extends Component {\n\n  handleDeleteProgClick = (progression) => {\n    const { deleteStudentProgression, student } = this.props\n    deleteStudentProgression(student, progression)\n  }\n\n  handleDNDDragStart = attributes => {\n    // const {draggableId} = attributes\n    // document.querySelector(`#item-${draggableId}`).classList.add(\"item-dragging\")\n  }\n\n  handleDNDDragEnd = result => {\n    const { destination, source, draggableId } = result\n    if (!destination || !source) { return }\n\n    if (destination.index !== source.index) {\n      this.props.switchStudentProgression(draggableId, destination.index)\n    }\n  }\n\n  render(){\n    const { student, progressions, handleDragOver, handleDragLeave, handleDragDrop } = this.props\n    return (\n      <div className={`student-row`}>\n        <div className=\"student-name\">\n          <h2>{student.firstName} {student.lastName}</h2>\n        </div>\n        <DragDropContext\n          onDragEnd={this.handleDNDDragEnd}\n          onDragStart={this.handleDNDDragStart}\n          >\n          <Droppable droppableId={`droppable-${student.id}`} direction=\"horizontal\">\n            {(provided) => (\n              <StudentAgenda\n                {...provided.droppableProps}\n                placeholder={provided.placeholder}\n                innerRef={provided.innerRef}\n                student={student}\n                progressions={progressions}\n                handleDragOver={handleDragOver}\n                handleDragLeave={handleDragLeave}\n                handleDragDrop={handleDragDrop}\n                handleDeleteProgClick={this.handleDeleteProgClick}\n                />\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    deleteStudentProgression: (student, progression) => dispatch(deleteStudentProgression(student, progression)),\n    switchStudentProgression: (draggableId, newIndex) => dispatch(switchStudentProgression(draggableId, newIndex))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Student)\n"]},"metadata":{},"sourceType":"module"}