{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/StudentsContainer.js\";\nimport React, { Component } from 'react';\nimport Student from './Student';\nimport './student.css';\n\nclass StudentContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortedStudentIds = students => {\n      return students.allIds.sort((idA, idB) => {\n        const studentA = students.byId[idA].firstName.toLowerCase();\n        const studentB = students.byId[idB].firstName.toLowerCase();\n\n        if (studentA > studentB) {\n          return 1;\n        } else if (studentA < studentB) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    };\n\n    this.getStudentProgressions = stId => {\n      const student = students.byId[stId];\n      const myProgressionIds = studentProgressions.allIds.filter(spId => {\n        const studentProgression = studentProgressions.byId[spId];\n        return studentProgression.studentId === \"student\".concat(student.id);\n      });\n      const myProgressions = myProgressionIds.map(stPrId => {\n        const studentProg = studentProgressions.byId[stPrId];\n        return progressions.byId[studentProg.progressionId];\n      });\n      return myProgressions;\n    };\n\n    this.displayStudents = () => {\n      const _this$props = this.props,\n            students = _this$props.students,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions,\n            removeStudentFromKlass = _this$props.removeStudentFromKlass,\n            handleDragOver = _this$props.handleDragOver,\n            handleDragLeave = _this$props.handleDragLeave,\n            handleDragDrop = _this$props.handleDragDrop;\n      const student = students.byId[stId];\n      return this.sortedStudentIds(students).map((stId, index) => {\n        return React.createElement(Student, {\n          key: index,\n          student: student,\n          progressions: this.getStudentProgressions(student),\n          handleDragOver: handleDragOver,\n          handleDragLeave: handleDragLeave,\n          handleDragDrop: handleDragDrop,\n          removeStudentFromKlass: removeStudentFromKlass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"student-agendas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.students ? this.displayStudents() : '');\n  }\n\n}\n\nexport default StudentContainer;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/StudentsContainer.js"],"names":["React","Component","Student","StudentContainer","sortedStudentIds","students","allIds","sort","idA","idB","studentA","byId","firstName","toLowerCase","studentB","getStudentProgressions","stId","student","myProgressionIds","studentProgressions","filter","spId","studentProgression","studentId","id","myProgressions","map","stPrId","studentProg","progressions","progressionId","displayStudents","props","removeStudentFromKlass","handleDragOver","handleDragLeave","handleDragDrop","index","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Student from './Student'\nimport './student.css'\n\nclass StudentContainer extends Component {\n\n  sortedStudentIds = (students) => {\n    return students.allIds.sort((idA, idB) => {\n      const studentA = students.byId[idA].firstName.toLowerCase()\n      const studentB = students.byId[idB].firstName.toLowerCase()\n      if (studentA > studentB) { return 1 }\n      else if (studentA < studentB ) {return -1 }\n      else {return 0}\n    })\n  }\n\n  getStudentProgressions = (stId) => {\n    const student = students.byId[stId]\n    const myProgressionIds = studentProgressions.allIds.filter(spId => {\n      const studentProgression = studentProgressions.byId[spId]\n      return studentProgression.studentId === `student${student.id}`\n    })\n    const myProgressions = myProgressionIds.map(stPrId => {\n      const studentProg = studentProgressions.byId[stPrId]\n      return progressions.byId[studentProg.progressionId]\n    })\n    return myProgressions\n  }\n\n  displayStudents = () => {\n    const { students, progressions, studentProgressions, removeStudentFromKlass, handleDragOver, handleDragLeave, handleDragDrop } = this.props\n    const student = students.byId[stId]\n    return this.sortedStudentIds(students).map((stId, index) => {\n      return (\n        <Student\n          key={index}\n          student={student}\n          progressions={this.getStudentProgressions(student)}\n          handleDragOver={handleDragOver}\n          handleDragLeave={handleDragLeave}\n          handleDragDrop={handleDragDrop}\n          removeStudentFromKlass={removeStudentFromKlass}/>\n    )})\n  }\n\n  render(){\n    return (\n      <div className=\"student-agendas\">\n        {this.props.students ? this.displayStudents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default StudentContainer\n"]},"metadata":{},"sourceType":"module"}