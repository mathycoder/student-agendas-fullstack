{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js\";\nimport React, { Component } from 'react';\nimport IndexProgression from './IndexProgression';\nimport { connect } from 'react-redux';\nimport { fetchProgressions, deleteProgression } from '../actions/progressionActions';\n\nclass IndexProgressionsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progressions: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProgressions();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.progressions);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"progressions-index-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.progressions.allIds.map((progressionId, index) => {\n      const progression = this.props.progressions.byId[progressionId];\n      return React.createElement(IndexProgression, {\n        key: index,\n        progression: progression,\n        history: this.props.history,\n        deleteProgression: this.props.deleteProgression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    deleteProgression: progression => dispatch(deleteProgression(progression))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js"],"names":["React","Component","IndexProgression","connect","fetchProgressions","deleteProgression","IndexProgressionsContainer","state","progressions","componentDidMount","props","componentDidUpdate","console","log","render","allIds","map","progressionId","index","progression","byId","history","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,+BAArD;;AAEA,MAAMC,0BAAN,SAAyCL,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AACNC,MAAAA,YAAY,EAAE;AADR,KADyC;AAAA;;AAKjDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWN,iBAAX;AACD;;AAEDO,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWF,YAAvB;AACD;;AAEDM,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWF,YAAX,CAAwBO,MAAxB,CAA+BC,GAA/B,CAAmC,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC5D,YAAMC,WAAW,GAAG,KAAKT,KAAL,CAAWF,YAAX,CAAwBY,IAAxB,CAA6BH,aAA7B,CAApB;AACA,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEC,KAAvB;AAA8B,QAAA,WAAW,EAAEC,WAA3C;AAAwD,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWW,OAA5E;AAAqF,QAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWL,iBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHA,CADH,CADF;AAQD;;AAtBgD;;AAyBnD,SAASiB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLnB,IAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAACnB,iBAAiB,EAAlB,CAD5B;AAELC,IAAAA,iBAAiB,EAAGc,WAAD,IAAiBI,QAAQ,CAAClB,iBAAiB,CAACc,WAAD,CAAlB;AAFvC,GAAP;AAID;;AAED,SAASK,eAAT,CAAyBjB,KAAzB,EAA+B;AAC7B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAArB,GAAP;AACD;;AAED,eAAeL,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ChB,0BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport IndexProgression from './IndexProgression'\nimport { connect } from 'react-redux'\nimport { fetchProgressions, deleteProgression } from '../actions/progressionActions'\n\nclass IndexProgressionsContainer extends Component {\n  state = {\n    progressions: []\n  }\n\n  componentDidMount(){\n    this.props.fetchProgressions()\n  }\n\n  componentDidUpdate(){\n    console.log(this.props.progressions)\n  }\n\n  render(){\n    return (\n      <div className=\"progressions-index-container\">\n        {this.props.progressions.allIds.map((progressionId, index) => {\n          const progression = this.props.progressions.byId[progressionId]\n          return <IndexProgression key={index} progression={progression} history={this.props.history} deleteProgression={this.props.deleteProgression}/>\n        })}\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    deleteProgression: (progression) => dispatch(deleteProgression(progression))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {progressions: state.progressions}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer)\n"]},"metadata":{},"sourceType":"module"}