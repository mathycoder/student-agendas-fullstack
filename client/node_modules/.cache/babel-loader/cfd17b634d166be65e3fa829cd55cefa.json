{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { addStudents } from '../../actions/studentActions';\nimport ShowKlassContainer from './ShowKlassContainer';\nimport StudentShowContainer from '../students/StudentShowContainer';\nimport { connect } from 'react-redux';\nimport { Route, Switch, NavLink } from \"react-router-dom\";\n\nclass ShowKlassRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingStudents: false,\n      showProgressions: true,\n      studentShowPage: false,\n      studentDropdown: false,\n      student: undefined\n    };\n\n    this.handleClick = e => {\n      if (this.state.studentDropdown) {\n        if (this.myRefStudentButton.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleStudentDropdownClick();\n      }\n    };\n\n    this.handleStudentShowPage = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentShowPage: !this.state.studentShowPage\n      }));\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleShowProgressions = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showProgressions: !this.state.showProgressions\n      }));\n    };\n\n    this.handleStudentDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentDropdown: !this.state.studentDropdown\n      }));\n    };\n\n    this.handleSetStudent = student => {\n      this.setState(_objectSpread({}, this.state, {\n        student: student\n      }));\n    };\n\n    this.renderStudentDropdown = klass => {\n      const students = this.props.students;\n      const studentDropdown = this.state.studentDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu student-dropdown \".concat(studentDropdown ? 'opened' : 'closed'),\n        ref: this.myRefStudentButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, students.allIds.map((studentId, index) => {\n        const student = students.byId[studentId];\n        return React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id, \"/students/\").concat(student.id),\n          onClick: this.handleStudentDropdownClick,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, student.firstName, \" \", student.lastName);\n      }));\n    };\n\n    this.renderStudentDropdownContainer = () => {\n      const student = this.state.student;\n      return React.createElement(\"div\", {\n        className: \"student-dropdown-button\",\n        ref: this.myRefStudentButton,\n        onClick: this.handleStudentDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, student ? \"\".concat(student.firstName, \" \").concat(student.lastName) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Students &#9660\"));\n    };\n\n    this.renderShowKlassMenuBar = klass => {\n      const _this$state = this.state,\n            editingStudents = _this$state.editingStudents,\n            studentShowPage = _this$state.studentShowPage;\n\n      if (!studentShowPage) {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, klass.name), this.renderStudentDropdownContainer(), React.createElement(\"button\", {\n          onClick: this.handleEditingStudents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, editingStudents ? 'Return to Class' : 'Edit Students'), editingStudents ? '' : this.progressionsButton());\n      } else {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, klass.name), this.renderStudentDropdownContainer(), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Return to Class\")));\n      }\n    };\n\n    this.progressionsButton = () => React.createElement(\"button\", {\n      onClick: this.handleShowProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions');\n\n    this.myRefStudentButton = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n    const _this$props = this.props,\n          match = _this$props.match,\n          fetchStudents = _this$props.fetchStudents;\n    const klassId = match.params.id;\n    fetchStudents(klassId);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          klasses = _this$props2.klasses,\n          match = _this$props2.match;\n    const _this$state2 = this.state,\n          editingStudents = _this$state2.editingStudents,\n          showProgressions = _this$state2.showProgressions;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.renderShowKlassMenuBar(klass), this.renderStudentDropdown(klass), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url),\n      render: renderProps => React.createElement(ShowKlassContainer, {\n        klass: klass,\n        showProgressions: showProgressions,\n        editingStudents: editingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/students/:id\"),\n      render: renderProps => {\n        return React.createElement(StudentShowContainer, Object.assign({\n          handleSetStudent: this.handleSetStudent,\n          handleStudentShowPage: this.handleStudentShowPage\n        }, renderProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js"],"names":["React","Component","addStudents","ShowKlassContainer","StudentShowContainer","connect","Route","Switch","NavLink","ShowKlassRouter","constructor","props","state","editingStudents","showProgressions","studentShowPage","studentDropdown","student","undefined","handleClick","e","myRefStudentButton","current","contains","target","handleStudentDropdownClick","handleStudentShowPage","setState","handleEditingStudents","handleShowProgressions","handleSetStudent","renderStudentDropdown","klass","students","allIds","map","studentId","index","byId","id","firstName","lastName","renderStudentDropdownContainer","renderShowKlassMenuBar","name","progressionsButton","createRef","componentDidMount","document","addEventListener","match","fetchStudents","klassId","params","componentWillUnmount","removeEventListener","render","klasses","find","url","renderProps","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,kBAAvC;;AAGA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAKlBC,KALkB,GAKV;AACNC,MAAAA,eAAe,EAAE,KADX;AAENC,MAAAA,gBAAgB,EAAE,IAFZ;AAGNC,MAAAA,eAAe,EAAE,KAHX;AAINC,MAAAA,eAAe,EAAE,KAJX;AAKNC,MAAAA,OAAO,EAAEC;AALH,KALU;;AAAA,SAwBlBC,WAxBkB,GAwBHC,CAAD,IAAO;AACnB,UAAI,KAAKR,KAAL,CAAWI,eAAf,EAA+B;AAC7B,YAAI,KAAKK,kBAAL,CAAwBC,OAAxB,CAAgCC,QAAhC,CAAyCH,CAAC,CAACI,MAA3C,CAAJ,EAAwD;AAAE;AAAQ;;AAClE,aAAKC,0BAAL;AACD;AACF,KA7BiB;;AAAA,SA+BlBC,qBA/BkB,GA+BM,MAAM;AAC5B,WAAKC,QAAL,mBACK,KAAKf,KADV;AAEEG,QAAAA,eAAe,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAF/B;AAID,KApCiB;;AAAA,SAsClBa,qBAtCkB,GAsCM,MAAM;AAC5B,WAAKD,QAAL,mBAAkB,KAAKf,KAAvB;AAA8BC,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3D;AACD,KAxCiB;;AAAA,SA0ClBgB,sBA1CkB,GA0CO,MAAM;AAC7B,WAAKF,QAAL,mBACK,KAAKf,KADV;AAEEE,QAAAA,gBAAgB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAFhC;AAID,KA/CiB;;AAAA,SAiDlBW,0BAjDkB,GAiDW,MAAM;AACjC,WAAKE,QAAL,mBACK,KAAKf,KADV;AAEEI,QAAAA,eAAe,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAF/B;AAID,KAtDiB;;AAAA,SAwDlBc,gBAxDkB,GAwDEb,OAAD,IAAa;AAC9B,WAAKU,QAAL,mBACK,KAAKf,KADV;AAEEK,QAAAA,OAAO,EAAEA;AAFX;AAID,KA7DiB;;AAAA,SA+DlBc,qBA/DkB,GA+DOC,KAAD,IAAW;AAAA,YACzBC,QADyB,GACZ,KAAKtB,KADO,CACzBsB,QADyB;AAAA,YAEzBjB,eAFyB,GAEL,KAAKJ,KAFA,CAEzBI,eAFyB;AAGjC,aACE;AAAK,QAAA,SAAS,2CAAoCA,eAAe,GAAG,QAAH,GAAa,QAAhE,CAAd;AAA0F,QAAA,GAAG,EAAE,KAAKK,kBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACzC,cAAMpB,OAAO,GAAGgB,QAAQ,CAACK,IAAT,CAAcF,SAAd,CAAhB;AACA,eACE,oBAAC,OAAD;AACE,UAAA,EAAE,qBAAcJ,KAAK,CAACO,EAApB,uBAAmCtB,OAAO,CAACsB,EAA3C,CADJ;AAEE,UAAA,OAAO,EAAE,KAAKd,0BAFhB;AAGE,UAAA,GAAG,EAAEY,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGpB,OAAO,CAACuB,SALX,OAKuBvB,OAAO,CAACwB,QAL/B,CADF;AASD,OAXA,CADH,CADF;AAgBD,KAlFiB;;AAAA,SAoFlBC,8BApFkB,GAoFe,MAAM;AAAA,YAC7BzB,OAD6B,GACjB,KAAKL,KADY,CAC7BK,OAD6B;AAErC,aACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,GAAG,EAAE,KAAKI,kBAAnD;AAAuE,QAAA,OAAO,EAAE,KAAKI,0BAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,OAAO,aAAMA,OAAO,CAACuB,SAAd,cAA2BvB,OAAO,CAACwB,QAAnC,IAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAD1D,CADF;AAKD,KA3FiB;;AAAA,SA6FlBE,sBA7FkB,GA6FQX,KAAD,IAAW;AAAA,0BACW,KAAKpB,KADhB;AAAA,YAC1BC,eAD0B,eAC1BA,eAD0B;AAAA,YACTE,eADS,eACTA,eADS;;AAElC,UAAI,CAACA,eAAL,EAAqB;AACnB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKiB,KAAK,CAACY,IAAX,CADF,EAEG,KAAKF,8BAAL,EAFH,EAGE;AAAQ,UAAA,OAAO,EAAE,KAAKd,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIf,eAAe,GAAG,iBAAH,GAAsB,eADzC,CAHF,EAMMA,eAAe,GAAG,EAAH,GAAQ,KAAKgC,kBAAL,EAN7B,CADF;AAUD,OAXD,MAWO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKb,KAAK,CAACY,IAAX,CADF,EAEG,KAAKF,8BAAL,EAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ,oBAAC,OAAD;AAAS,UAAA,EAAE,qBAAcV,KAAK,CAACO,EAApB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR,CAHF,CADF;AAOD;AACF,KAnHiB;;AAAA,SAqHlBM,kBArHkB,GAqHG,MAAO;AAAQ,MAAA,OAAO,EAAE,KAAKhB,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWE,gBAAX,GAA8B,mBAA9B,GAAoD,mBADvD,CArHV;;AAEhB,SAAKO,kBAAL,GAA0BrB,KAAK,CAAC8C,SAAN,EAA1B;AACD;;AAUDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAK9B,WAA5C;AADiB,wBAEgB,KAAKR,KAFrB;AAAA,UAETuC,KAFS,eAETA,KAFS;AAAA,UAEFC,aAFE,eAEFA,aAFE;AAGjB,UAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAad,EAA7B;AACAY,IAAAA,aAAa,CAACC,OAAD,CAAb;AACD;;AAEDE,EAAAA,oBAAoB,GAAE;AACpBN,IAAAA,QAAQ,CAACO,mBAAT,CAA6B,WAA7B,EAA0C,KAAKpC,WAA/C;AACD;;AAmGDqC,EAAAA,MAAM,GAAE;AAAA,yBACqB,KAAK7C,KAD1B;AAAA,UACE8C,OADF,gBACEA,OADF;AAAA,UACWP,KADX,gBACWA,KADX;AAAA,yBAEwC,KAAKtC,KAF7C;AAAA,UAEEC,eAFF,gBAEEA,eAFF;AAAA,UAEmBC,gBAFnB,gBAEmBA,gBAFnB;AAGN,UAAMsC,OAAO,GAAGK,OAAO,CAACvB,MAAR,CAAewB,IAAf,CAAoBN,OAAO,IAAIA,OAAO,oBAAaF,KAAK,CAACG,MAAN,CAAad,EAA1B,CAAtC,KAAyE,EAAzF;AACA,UAAMP,KAAK,GAAGyB,OAAO,CAACnB,IAAR,CAAac,OAAb,CAAd;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,sBAAL,CAA4BX,KAA5B,CADH,EAEG,KAAKD,qBAAL,CAA2BC,KAA3B,CAFH,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKkB,KAAK,CAACS,GAAX,CAAjB;AAAmC,MAAA,MAAM,EAAEC,WAAW,IAAI,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAE5B,KAA3B;AAAkC,QAAA,gBAAgB,EAAElB,gBAApD;AAAsE,QAAA,eAAe,EAAED,eAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKqC,KAAK,CAACS,GAAX,kBAAjB;AAAgD,MAAA,MAAM,EAAEC,WAAW,IAAI;AACnE,eAAO,oBAAC,oBAAD;AACC,UAAA,gBAAgB,EAAE,KAAK9B,gBADxB;AAEC,UAAA,qBAAqB,EAAE,KAAKJ;AAF7B,WAGKkC,WAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAG4B,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,CADF;AAeD;;AA9IqC;;AAiJxC,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLX,IAAAA,aAAa,EAAGC,OAAD,IAAaU,QAAQ,CAAC5D,WAAW,CAACkD,OAAD,CAAZ;AAD/B,GAAP;AAGD;;AAED,SAASW,eAAT,CAAyBnD,KAAzB,EAA+B;AAC7B,SAAO;AACL6C,IAAAA,OAAO,EAAE7C,KAAK,CAAC6C,OADV;AAELxB,IAAAA,QAAQ,EAAErB,KAAK,CAACqB;AAFX,GAAP;AAID;;AAED,eAAe5B,OAAO,CAAC0D,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CpD,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { addStudents } from '../../actions/studentActions'\nimport ShowKlassContainer from './ShowKlassContainer'\nimport StudentShowContainer from '../students/StudentShowContainer'\nimport { connect } from 'react-redux'\nimport { Route, Switch, NavLink } from \"react-router-dom\"\n\n\nclass ShowKlassRouter extends Component {\n  constructor(props){\n    super(props)\n    this.myRefStudentButton = React.createRef()\n  }\n\n  state = {\n    editingStudents: false,\n    showProgressions: true,\n    studentShowPage: false,\n    studentDropdown: false,\n    student: undefined\n  }\n\n  componentDidMount(){\n    document.addEventListener('mousedown', this.handleClick)\n    const { match, fetchStudents } = this.props\n    const klassId = match.params.id\n    fetchStudents(klassId)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClick)\n  }\n\n  handleClick = (e) => {\n    if (this.state.studentDropdown){\n      if (this.myRefStudentButton.current.contains(e.target)) { return }\n      this.handleStudentDropdownClick()\n    }\n  }\n\n  handleStudentShowPage = () => {\n    this.setState({\n      ...this.state,\n      studentShowPage: !this.state.studentShowPage\n    })\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleShowProgressions = () => {\n    this.setState({\n      ...this.state,\n      showProgressions: !this.state.showProgressions\n    })\n  }\n\n  handleStudentDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      studentDropdown: !this.state.studentDropdown\n    })\n  }\n\n  handleSetStudent = (student) => {\n    this.setState({\n      ...this.state,\n      student: student\n    })\n  }\n\n  renderStudentDropdown = (klass) => {\n    const { students } = this.props\n    const { studentDropdown } = this.state\n    return (\n      <div className={`dropdown-menu student-dropdown ${studentDropdown ? 'opened': 'closed'}`} ref={this.myRefStudentButton}>\n        {students.allIds.map((studentId, index) => {\n          const student = students.byId[studentId]\n          return (\n            <NavLink\n              to={`/classes/${klass.id}/students/${student.id}`}\n              onClick={this.handleStudentDropdownClick}\n              key={index}\n              >\n              {student.firstName} {student.lastName}\n            </NavLink>\n            )\n        })}\n      </div>\n    )\n  }\n\n  renderStudentDropdownContainer = () => {\n    const { student } = this.state\n    return (\n      <div className=\"student-dropdown-button\" ref={this.myRefStudentButton} onClick={this.handleStudentDropdownClick}>\n        {student ? `${student.firstName} ${student.lastName}` : <span>Students &#9660</span>}\n      </div>\n    )\n  }\n\n  renderShowKlassMenuBar = (klass) => {\n    const { editingStudents, studentShowPage } = this.state\n    if (!studentShowPage){\n      return (\n        <div className=\"klass-show-title\">\n          <h1>{klass.name}</h1>\n          {this.renderStudentDropdownContainer()}\n          <button onClick={this.handleEditingStudents}>\n            { editingStudents ? 'Return to Class': 'Edit Students' }\n          </button>\n            { editingStudents ? '' : this.progressionsButton()}\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"klass-show-title\">\n          <h1>{klass.name}</h1>\n          {this.renderStudentDropdownContainer()}\n          <button><NavLink to={`/classes/${klass.id}`}>Return to Class</NavLink></button>\n        </div>\n      )\n    }\n  }\n\n  progressionsButton = () =>  <button onClick={this.handleShowProgressions}>\n                                {this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions'}\n                              </button>\n\n  render(){\n    const { klasses, match } = this.props\n    const { editingStudents, showProgressions } = this.state\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    return (\n      <div>\n        {this.renderShowKlassMenuBar(klass)}\n        {this.renderStudentDropdown(klass)}\n        <Switch>\n          <Route exact path={`${match.url}`} render={renderProps => <ShowKlassContainer klass={klass} showProgressions={showProgressions} editingStudents={editingStudents}/>}/>\n          <Route exact path={`${match.url}/students/:id`} render={renderProps => {\n              return <StudentShowContainer\n                      handleSetStudent={this.handleSetStudent}\n                      handleStudentShowPage={this.handleStudentShowPage}\n                      {...renderProps} />}\n            }/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter)\n"]},"metadata":{},"sourceType":"module"}