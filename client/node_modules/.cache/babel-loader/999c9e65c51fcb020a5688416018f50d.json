{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/IndexProgressionsContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StudentProgression from '../students/StudentProgression';\nimport IndexProgression from './IndexProgression';\nimport { deleteProgression } from '../../actions/progressionActions';\nimport { connect } from 'react-redux';\n\nclass IndexProgressionsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: \"\",\n      color: \"\",\n      recent: undefined,\n      searchedProgressions: [],\n      initialLoad: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        searchTerm: event.target.value,\n        color: \"\",\n        recent: undefined,\n        searchedProgressions: this.filterer(event.target.value)\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState(_objectSpread({}, this.state, {\n        color: color,\n        recent: undefined,\n        searchedProgressions: this.colorFilterer(color)\n      }));\n    };\n\n    this.handleRecentClick = () => {\n      const progressions = this.props.progressions;\n      const progressionCopy = [...progressions.allIds];\n      const sortedProgressions = progressionCopy.sort((a, b) => {\n        const progA = progressions.byId[a];\n        const progB = progressions.byId[b];\n\n        if (progA.updated_at > progB.updated_at) {\n          return -1;\n        } else if (progA.updated_at < progB.updated_at) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      this.setState(_objectSpread({}, this.state, {\n        color: '',\n        recent: true,\n        searchedProgressions: sortedProgressions\n      }));\n    };\n\n    this.filterer = query => {\n      const progressions = this.props.progressions;\n      return this.alphabeticalProgressions().filter(progId => {\n        const prog = progressions.byId[progId];\n        return prog.name.toLowerCase().includes(query.toLowerCase());\n      });\n    };\n\n    this.colorFilterer = color => {\n      const progressions = this.props.progressions;\n      return this.alphabeticalProgressions().filter(progId => {\n        const prog = progressions.byId[progId];\n        return prog.color === color;\n      });\n    };\n\n    this.alphabeticalProgressions = () => {\n      const progressions = this.props.progressions;\n      const allIdsCopy = [...progressions.allIds];\n      return allIdsCopy.sort((a, b) => {\n        const progA = progressions.byId[a];\n        const progB = progressions.byId[b];\n\n        if (progA.name > progB.name) {\n          return 1;\n        } else if (progA.name < progB.name) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.displayColors = () => {\n      return [\"red\", \"orange\", \"green\", \"blue\", \"purple\"].map((color, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"select-color \".concat(color, \"-title \").concat(color === this.state.color ? 'selected-color' : ''),\n          onClick: event => this.handleColorClick(color),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  componentDidMount() {// this.setState({\n    //   ...this.state,\n    //   searchedProgressions: this.alphabeticalProgressions()\n    // })\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialLoad && this.props.progressions.byId) {\n      this.setState(_objectSpread({}, this.state, {\n        initialLoad: true,\n        searchedProgressions: this.alphabeticalProgressions()\n      }));\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          progressions = _this$props.progressions,\n          videos = _this$props.videos,\n          reflections = _this$props.reflections,\n          handleDragStart = _this$props.handleDragStart,\n          indexPage = _this$props.indexPage,\n          deleteProgression = _this$props.deleteProgression,\n          history = _this$props.history;\n    return React.createElement(\"div\", {\n      className: \"student-show-progressions-container \".concat(indexPage ? 'index-page' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"student-show-progressions-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Progressions\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mag-glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchTerm,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"search-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"student-show-progressions-color-choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.displayColors()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleRecentClick,\n      className: this.state.recent ? 'recent' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Most Recent\"))), React.createElement(\"div\", {\n      className: \"student-show-progressions-index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.searchedProgressions.map((progressionId, index) => {\n      const progression = progressions.byId[progressionId];\n\n      if (!indexPage) {\n        return React.createElement(StudentProgression, {\n          key: index,\n          handleDragStart: handleDragStart,\n          progression: progression,\n          reflections: reflections,\n          videos: videos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(IndexProgression, {\n          key: index,\n          progression: progression,\n          deleteProgression: deleteProgression,\n          history: history,\n          reflections: reflections,\n          videos: videos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        });\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteProgression: progression => dispatch(deleteProgression(progression))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions,\n    videos: state.videos,\n    reflections: state.reflections\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/IndexProgressionsContainer.js"],"names":["React","Component","StudentProgression","IndexProgression","deleteProgression","connect","IndexProgressionsContainer","state","searchTerm","color","recent","undefined","searchedProgressions","initialLoad","handleChange","event","setState","target","value","filterer","handleColorClick","colorFilterer","handleRecentClick","progressions","props","progressionCopy","allIds","sortedProgressions","sort","a","b","progA","byId","progB","updated_at","query","alphabeticalProgressions","filter","progId","prog","name","toLowerCase","includes","allIdsCopy","handleSubmit","preventDefault","displayColors","map","index","componentDidMount","componentDidUpdate","render","videos","reflections","handleDragStart","indexPage","history","progressionId","progression","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentProgression from '../students/StudentProgression'\nimport IndexProgression from './IndexProgression'\nimport { deleteProgression } from '../../actions/progressionActions'\nimport { connect } from 'react-redux'\n\nclass IndexProgressionsContainer extends Component {\n  state = {\n    searchTerm: \"\",\n    color: \"\",\n    recent: undefined,\n    searchedProgressions: [],\n    initialLoad: false\n  }\n\n  componentDidMount(){\n    // this.setState({\n    //   ...this.state,\n    //   searchedProgressions: this.alphabeticalProgressions()\n    // })\n  }\n\n  componentDidUpdate(){\n    if (!this.state.initialLoad && this.props.progressions.byId){\n      this.setState({\n        ...this.state,\n        initialLoad: true,\n        searchedProgressions: this.alphabeticalProgressions()\n      })\n    }\n\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      searchTerm: event.target.value,\n      color: \"\",\n      recent: undefined,\n      searchedProgressions: this.filterer(event.target.value)\n    })\n  }\n\n  handleColorClick = (color) => {\n    this.setState({\n      ...this.state,\n      color: color,\n      recent: undefined,\n      searchedProgressions: this.colorFilterer(color)\n    })\n  }\n\n  handleRecentClick = () => {\n    const { progressions } = this.props\n    const progressionCopy = [...progressions.allIds]\n    const sortedProgressions =  progressionCopy.sort((a,b) => {\n      const progA = progressions.byId[a]\n      const progB = progressions.byId[b]\n      if (progA.updated_at > progB.updated_at) { return -1 }\n      else if (progA.updated_at < progB.updated_at) { return 1 }\n      else {return 0 }\n    })\n    this.setState({\n      ...this.state,\n      color: '',\n      recent: true,\n      searchedProgressions: sortedProgressions\n    })\n  }\n\n  filterer = (query) => {\n    const { progressions } = this.props\n    return this.alphabeticalProgressions().filter(progId => {\n      const prog = progressions.byId[progId]\n      return prog.name.toLowerCase().includes(query.toLowerCase())\n    })\n  }\n\n  colorFilterer = (color) => {\n    const { progressions } = this.props\n    return this.alphabeticalProgressions().filter(progId => {\n      const prog = progressions.byId[progId]\n      return prog.color === color\n    })\n  }\n\n  alphabeticalProgressions = () => {\n    const { progressions } = this.props\n    const allIdsCopy = [...progressions.allIds]\n    return allIdsCopy.sort((a,b) => {\n      const progA = progressions.byId[a]\n      const progB = progressions.byId[b]\n      if (progA.name > progB.name) { return 1 }\n      else if (progA.name < progB.name) { return -1 }\n      else {return 0 }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n  }\n\n  displayColors = () => {\n    return [\"red\", \"orange\", \"green\", \"blue\", \"purple\"].map((color, index) => {\n      return (\n        <div\n          key={index}\n          className={`select-color ${color}-title ${color === this.state.color ? 'selected-color' : ''}`}\n          onClick={event => this.handleColorClick(color)}>\n        </div>\n      )\n    })\n  }\n\n  render(){\n    const { progressions, videos, reflections, handleDragStart, indexPage, deleteProgression, history } = this.props\n\n    return (\n      <div className={`student-show-progressions-container ${indexPage ? 'index-page' : ''}`}>\n        <div className=\"student-show-progressions-header\">\n          <div>Progressions</div>\n          <div>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"search-bar\">\n                <div className=\"mag-glass\"></div>\n                <input\n                  type=\"text\"\n                  value={this.state.searchTerm}\n                  onChange={this.handleChange}\n                  />\n                <input type=\"submit\" value=\"Search\"/>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"search-filters\">\n          <div className=\"student-show-progressions-color-choice\">\n            {this.displayColors()}\n          </div>\n          <div>\n            <button\n              onClick={this.handleRecentClick}\n              className={this.state.recent ? 'recent': ''}\n              >Most Recent</button>\n          </div>\n        </div>\n        <div className=\"student-show-progressions-index\">\n          {this.state.searchedProgressions.map((progressionId, index) => {\n            const progression = progressions.byId[progressionId]\n            if (!indexPage) {\n              return <StudentProgression\n                        key={index}\n                        handleDragStart={handleDragStart}\n                        progression={progression}\n                        reflections={reflections}\n                        videos={videos}/>\n            } else {\n              return <IndexProgression\n                        key={index}\n                        progression={progression}\n                        deleteProgression={deleteProgression}\n                        history={history}\n                        reflections={reflections}\n                        videos={videos}/>\n            }\n\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    deleteProgression: (progression) => dispatch(deleteProgression(progression))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    progressions: state.progressions,\n    videos: state.videos,\n    reflections: state.reflections\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer)\n"]},"metadata":{},"sourceType":"module"}