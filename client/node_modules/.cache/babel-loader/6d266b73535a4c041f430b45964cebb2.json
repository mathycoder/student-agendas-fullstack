{"ast":null,"code":"import _objectWithoutProperties from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst studentProgressionReducer = combineReducers({\n  byId: studentProgressionsById,\n  allIds: allStudentProgressions\n});\nexport default studentProgressionReducer;\n\nfunction studentProgressionsById(state = {}, action) {\n  switch (action.type) {\n    case 'ADD_STUDENTS':\n      const normalizedObject = {};\n      action.studentProgressions.forEach(stProg => {\n        normalizedObject[\"studentProgression\".concat(stProg.id)] = {\n          id: stProg.id,\n          agendaIndex: stProg.agenda_index,\n          studentId: \"student\".concat(stProg.student_id),\n          progressionId: \"progression\".concat(stProg.progression_id)\n        };\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'START_ADDING_STUDENT_PROGRESSION_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENT_PROGRESSION':\n      const _action$studentProgre = action.studentProgression,\n            id = _action$studentProgre.id,\n            agenda_index = _action$studentProgre.agenda_index,\n            student_id = _action$studentProgre.student_id,\n            progression_id = _action$studentProgre.progression_id;\n      return _objectSpread({}, state, {\n        [\"studentProgression\".concat(id)]: {\n          id: id,\n          agendaIndex: agenda_index,\n          studentId: \"student\".concat(student_id),\n          progressionId: \"progression\".concat(progression_id)\n        }\n      });\n\n    case 'START_SWITCH_PROGRESSION_REQUEST':\n      const allSps = _objectSpread({}, state);\n\n      let currProgression;\n      const myStudentProgressions = [];\n      const studId = \"student\".concat(action.draggableId.split(\"-\")[1]);\n      const progId = \"progression\".concat(action.draggableId.split(\"-\")[3]);\n\n      for (const sp in allSps) {\n        if (allSps[sp].studentId === studId) {\n          myStudentProgressions.push({\n            [sp]: allSps[sp]\n          });\n        }\n\n        if (allSps[sp].studentId === studId && allSps[sp].progressionId === progId) {\n          currProgression = allSps[sp];\n        }\n      }\n\n      debugger;\n      return _objectSpread({}, state);\n\n    case 'SWITCH_PROGRESSION':\n      const normalizedObj = {};\n      action.studentProgressions.forEach(sp => {\n        normalizedObj[\"studentProgression\".concat(sp.id)] = {\n          id: sp.id,\n          agendaIndex: sp.agenda_index,\n          studentId: \"student\".concat(sp.student_id),\n          progressionId: \"progression\".concat(sp.progression_id)\n        };\n      });\n      return _objectSpread({}, state, {}, normalizedObj);\n\n    case 'START_REMOVE_PROGRESSION_FROM_STUDENT_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'REMOVE_STUDENT_FROM_PROGRESSION':\n      const studentProgId = \"studentProgression\".concat(action.studentProgression.id);\n\n      const value = state[studentProgId],\n            newState = _objectWithoutProperties(state, [studentProgId].map(_toPropertyKey));\n\n      return _objectSpread({}, newState);\n\n    default:\n      return state;\n  }\n}\n\nfunction allStudentProgressions(state = [], action) {\n  switch (action.type) {\n    case 'ADD_STUDENTS':\n      return [...action.studentProgressions.map(stPr => \"studentProgression\".concat(stPr.id))];\n\n    case 'ADD_STUDENT_PROGRESSION':\n      return [...state, \"studentProgression\".concat(action.studentProgression.id)];\n\n    case 'REMOVE_STUDENT_FROM_PROGRESSION':\n      const stProgIdToDelete = \"studentProgression\".concat(action.studentProgression.id);\n      return state.filter(pId => pId !== stProgIdToDelete);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/studentProgressionReducer.js"],"names":["combineReducers","studentProgressionReducer","byId","studentProgressionsById","allIds","allStudentProgressions","state","action","type","normalizedObject","studentProgressions","forEach","stProg","id","agendaIndex","agenda_index","studentId","student_id","progressionId","progression_id","studentProgression","allSps","currProgression","myStudentProgressions","studId","draggableId","split","progId","sp","push","normalizedObj","studentProgId","value","newState","map","stPr","stProgIdToDelete","filter","pId"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst studentProgressionReducer = combineReducers({\n  byId: studentProgressionsById,\n  allIds: allStudentProgressions\n})\n\nexport default studentProgressionReducer\n\nfunction studentProgressionsById(state = {}, action) {\n  switch(action.type) {\n    case 'ADD_STUDENTS':\n    const normalizedObject = {}\n    action.studentProgressions.forEach(stProg => {\n      normalizedObject[`studentProgression${stProg.id}`] = {\n        id: stProg.id,\n        agendaIndex: stProg.agenda_index,\n        studentId: `student${stProg.student_id}`,\n        progressionId: `progression${stProg.progression_id}`\n      }\n    })\n    return {\n      ...normalizedObject\n    }\n\n    case 'START_ADDING_STUDENT_PROGRESSION_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENT_PROGRESSION':\n      const { id, agenda_index, student_id, progression_id } = action.studentProgression\n      return {\n        ...state,\n        [`studentProgression${id}`]: {\n          id: id,\n          agendaIndex: agenda_index,\n          studentId: `student${student_id}`,\n          progressionId: `progression${progression_id}`\n        }\n      }\n\n    case 'START_SWITCH_PROGRESSION_REQUEST':\n      const allSps = {...state}\n      let currProgression\n      const myStudentProgressions = []\n      const studId = `student${action.draggableId.split(\"-\")[1]}`\n      const progId = `progression${action.draggableId.split(\"-\")[3]}`\n      for(const sp in allSps){\n        if (allSps[sp].studentId === studId) {\n          myStudentProgressions.push({[sp]: allSps[sp]})\n        }\n        if (allSps[sp].studentId === studId && allSps[sp].progressionId === progId){\n          currProgression = allSps[sp]\n        }\n      }\n      debugger\n\n      return {...state}\n\n    case 'SWITCH_PROGRESSION':\n      const normalizedObj = {}\n      action.studentProgressions.forEach(sp => {\n        normalizedObj[`studentProgression${sp.id}`] = {\n          id: sp.id,\n          agendaIndex: sp.agenda_index,\n          studentId: `student${sp.student_id}`,\n          progressionId: `progression${sp.progression_id}`\n        }\n      })\n\n      return {...state, ...normalizedObj}\n\n    case 'START_REMOVE_PROGRESSION_FROM_STUDENT_REQUEST':\n      return {...state}\n\n    case 'REMOVE_STUDENT_FROM_PROGRESSION':\n      const studentProgId = `studentProgression${action.studentProgression.id}`\n      const { [studentProgId]: value, ...newState  } = state\n\n      return {\n        ...newState\n      }\n\n    default:\n      return state\n  }\n}\n\nfunction allStudentProgressions(state = [], action) {\n\n  switch(action.type) {\n\n    case 'ADD_STUDENTS':\n    return [\n      ...action.studentProgressions.map(stPr => `studentProgression${stPr.id}`)\n    ]\n\n    case 'ADD_STUDENT_PROGRESSION':\n    return [\n      ...state, `studentProgression${action.studentProgression.id}`\n    ]\n\n    case 'REMOVE_STUDENT_FROM_PROGRESSION':\n      const stProgIdToDelete = `studentProgression${action.studentProgression.id}`\n      return state.filter(pId => pId !== stProgIdToDelete)\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}