{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/routes/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  path,\n  currentUser\n}) => React.createElement(Route, Object.assign({}, path, {\n  render: props => currentUser !== \"none\" ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps, null)(PrivateRoute);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/routes/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","path","currentUser","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA;AAA9B,CAAD,KACnB,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,EAAA,MAAM,EAAGE,KAAD,IACrBD,WAAW,KAAK,MAAhB,GACA,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,GAEA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAQA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAO;AACLH,IAAAA,WAAW,EAAEG,KAAK,CAACH;AADd,GAAP;AAGD;;AAED,eAAeL,OAAO,CAACO,eAAD,EAAkB,IAAlB,CAAP,CAA+BN,YAA/B,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, path, currentUser}) => (\n  <Route {...path} render={(props) => (\n      currentUser !== \"none\" ?\n      <Component {...props} />\n    : <Redirect to=\"/login\"/>\n  )} />\n)\n\nfunction mapStateToProps(state){\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nexport default connect(mapStateToProps, null)(PrivateRoute)\n"]},"metadata":{},"sourceType":"module"}