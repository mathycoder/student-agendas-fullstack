{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StudentsContainer from '../students/StudentsContainer';\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer';\nimport EditStudents from '../students/EditStudents';\nimport { connect } from 'react-redux';\nimport { addStudents } from '../../actions/studentActions';\nimport { addStudentProgression } from '../../actions/studentProgressionActions';\nimport { addFlashMessage } from '../../actions/flashActions';\nimport '../students/student.css';\n\nclass ShowKlassContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editingStudents: false,\n      showProgressions: true\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleShowProgressions = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showProgressions: !this.state.showProgressions\n      }));\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"#FFFF00\";\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n    };\n\n    this.handleDragStart = (event, progression) => {\n      let data = JSON.stringify(progression);\n      event.dataTransfer.setData(\"progression\", data);\n    };\n\n    this.handleDragDrop = event => {\n      const _this$props = this.props,\n            studentProgressions = _this$props.studentProgressions,\n            students = _this$props.students,\n            addStudentProgression = _this$props.addStudentProgression,\n            addFlashMessage = _this$props.addFlashMessage;\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n      let progression = event.dataTransfer.getData(\"progression\");\n      progression = JSON.parse(progression);\n      const student = students.byId[\"student\".concat(event.currentTarget.dataset.studentId)];\n      const any = studentProgressions.allIds.filter(spId => {\n        const sp = studentProgressions.byId[spId];\n        return sp.studentId === \"student\".concat(student.id) && sp.progressionId === \"progression\".concat(progression.id);\n      });\n\n      if (any.length === 0) {\n        addStudentProgression(student, progression);\n      } else {\n        addFlashMessage(\"This student agenda already has this progression\");\n      }\n    };\n\n    this.renderStudents = () => React.createElement(StudentsContainer, {\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDragDrop: this.handleDragDrop,\n      showProgressions: this.state.showProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n\n    this.renderProgressions = () => React.createElement(IndexProgressionsContainer, {\n      handleDragStart: this.handleDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n\n    this.progressionsButton = () => React.createElement(\"button\", {\n      onClick: this.handleShowProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions');\n  }\n\n  componentDidMount() {\n    const _this$props2 = this.props,\n          match = _this$props2.match,\n          fetchStudents = _this$props2.fetchStudents;\n    const klassId = match.params.id;\n    fetchStudents(klassId);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          klasses = _this$props3.klasses,\n          match = _this$props3.match;\n    const _this$state = this.state,\n          editingStudents = _this$state.editingStudents,\n          showProgressions = _this$state.showProgressions;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n\n    if (klass) {\n      return React.createElement(\"div\", {\n        className: \"klass-show-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"klass-show-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, klass.name), React.createElement(\"button\", {\n        onClick: this.handleEditingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, editingStudents ? 'Return to Class' : 'Edit Students'), editingStudents ? '' : this.progressionsButton()), editingStudents ? React.createElement(EditStudents, {\n        klass: klass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : this.renderStudents(), !editingStudents && showProgressions ? this.renderProgressions() : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression)),\n    addFlashMessage: message => dispatch(addFlashMessage(message))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js"],"names":["React","Component","StudentsContainer","IndexProgressionsContainer","EditStudents","connect","addStudents","addStudentProgression","addFlashMessage","ShowKlassContainer","state","editingStudents","showProgressions","handleEditingStudents","setState","handleShowProgressions","handleDragOver","event","preventDefault","agenda","currentTarget","closest","style","backgroundColor","handleDragLeave","handleDragStart","progression","data","JSON","stringify","dataTransfer","setData","handleDragDrop","props","studentProgressions","students","getData","parse","student","byId","dataset","studentId","any","allIds","filter","spId","sp","id","progressionId","length","renderStudents","renderProgressions","progressionsButton","componentDidMount","match","fetchStudents","klassId","params","render","klasses","find","klass","name","mapDispatchToProps","dispatch","message","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentsContainer from '../students/StudentsContainer'\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer'\nimport EditStudents from '../students/EditStudents'\nimport { connect } from 'react-redux'\nimport { addStudents } from '../../actions/studentActions'\nimport { addStudentProgression } from '../../actions/studentProgressionActions'\nimport { addFlashMessage } from '../../actions/flashActions'\nimport '../students/student.css'\n\nclass ShowKlassContainer extends Component {\n  state = {\n    editingStudents: false,\n    showProgressions: true\n  }\n\n  componentDidMount(){\n    const { match, fetchStudents } = this.props\n    const klassId = match.params.id\n    fetchStudents(klassId)\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleShowProgressions = () => {\n    this.setState({\n      ...this.state,\n      showProgressions: !this.state.showProgressions\n    })\n  }\n\n  handleDragOver = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"#FFFF00\"\n  }\n\n  handleDragLeave = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n  }\n\n  handleDragStart = (event, progression) => {\n    let data = JSON.stringify(progression)\n    event.dataTransfer.setData(\"progression\", data)\n  }\n\n  handleDragDrop = (event) => {\n    const { studentProgressions, students, addStudentProgression, addFlashMessage } = this.props\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n    let progression = event.dataTransfer.getData(\"progression\")\n    progression = JSON.parse(progression)\n    const student = students.byId[`student${event.currentTarget.dataset.studentId}`]\n    const any = studentProgressions.allIds.filter(spId => {\n      const sp = studentProgressions.byId[spId]\n      return sp.studentId === `student${student.id}` && sp.progressionId === `progression${progression.id}`\n    })\n    if (any.length === 0){\n      addStudentProgression(student, progression)\n    } else {\n      addFlashMessage(\"This student agenda already has this progression\")\n    }\n  }\n\n  renderStudents = () => <StudentsContainer\n                          handleDragOver={this.handleDragOver}\n                          handleDragLeave={this.handleDragLeave}\n                          handleDragDrop={this.handleDragDrop}\n                          showProgressions={this.state.showProgressions} />\n\n\n  renderProgressions = () => <IndexProgressionsContainer handleDragStart={this.handleDragStart}/>\n\n\n  progressionsButton = () =>  <button onClick={this.handleShowProgressions}>\n                                {this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions'}\n                              </button>\n\n\n  render(){\n    const { klasses, match } = this.props\n    const { editingStudents, showProgressions } = this.state\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    if (klass) {\n      return (\n        <div className=\"klass-show-container\">\n          <div className=\"klass-show-title\">\n            <h1>{klass.name}</h1>\n            <button onClick={this.handleEditingStudents}>\n              { editingStudents ? 'Return to Class': 'Edit Students' }\n            </button>\n            { editingStudents ? '' : this.progressionsButton()}\n          </div>\n          { editingStudents ? <EditStudents klass={klass} /> : this.renderStudents() }\n          { !editingStudents && showProgressions ? this.renderProgressions() : <div></div> }\n\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression)),\n    addFlashMessage: (message) => dispatch(addFlashMessage(message))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer)\n"]},"metadata":{},"sourceType":"module"}