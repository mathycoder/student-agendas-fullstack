{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { addStudents } from '../../actions/studentActions';\nimport ShowKlassContainer from './ShowKlassContainer';\nimport StudentShowContainer from '../students/show/StudentShowContainer';\nimport { connect } from 'react-redux';\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport '../agendas/toggle.scss';\n\nclass ShowKlassRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingStudents: false,\n      showProgressions: true,\n      studentShowPage: false,\n      studentDropdown: false,\n      student: undefined,\n      summaryPage: false\n    };\n\n    this.handleClick = e => {\n      if (this.state.studentDropdown) {\n        if (this.myRefStudentButton.current.contains(e.target) || this.myRefStudentDropdown.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleStudentDropdownClick();\n      }\n    };\n\n    this.handleStudentShowPage = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentShowPage: !this.state.studentShowPage\n      }));\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleShowProgressions = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showProgressions: !this.state.showProgressions\n      }));\n    };\n\n    this.handleStudentDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentDropdown: !this.state.studentDropdown\n      }));\n    };\n\n    this.handleSetStudent = student => {\n      this.setState(_objectSpread({}, this.state, {\n        student: student\n      }));\n    };\n\n    this.renderStudentDropdown = klass => {\n      const students = this.props.students;\n      const studentDropdown = this.state.studentDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu student-dropdown \".concat(studentDropdown ? 'opened' : 'closed'),\n        ref: this.myRefStudentDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, students.allIds.map((studentId, index) => {\n        const student = students.byId[studentId];\n        return React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id, \"/students/\").concat(student.id),\n          onClick: this.handleStudentDropdownClick,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, student.firstName, \" \", student.lastName);\n      }));\n    };\n\n    this.renderStudentDropdownContainer = () => {\n      const _this$state = this.state,\n            student = _this$state.student,\n            studentDropdown = _this$state.studentDropdown;\n      return React.createElement(\"div\", {\n        className: \"student-dropdown-button\",\n        ref: this.myRefStudentButton,\n        onClick: this.handleStudentDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, student ? \"\".concat(student.firstName, \" \").concat(student.lastName) : 'Students', \" \"), React.createElement(\"div\", {\n        className: \"triangle \".concat(studentDropdown ? 'up' : 'down'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u25BC\"));\n    };\n\n    this.renderShowKlassMenuBar = klass => {\n      const _this$state2 = this.state,\n            editingStudents = _this$state2.editingStudents,\n            studentShowPage = _this$state2.studentShowPage,\n            summaryPage = _this$state2.summaryPage;\n\n      if (!studentShowPage) {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, klass.name)), this.renderStudentDropdownContainer(), React.createElement(\"button\", {\n          onClick: this.handleEditingStudents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, editingStudents ? 'Return to Class' : 'Edit Students'), editingStudents ? '' : this.progressionsButton());\n      } else {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, klass.name), this.renderStudentDropdownContainer(), this.renderNavBar());\n      }\n    };\n\n    this.renderNavBar = () => {\n      const summaryPage = this.state.summaryPage;\n      return React.createElement(\"div\", {\n        className: \"myagenda-navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"toggle-on\",\n        className: \"toggle toggle-left\",\n        name: \"toggle\",\n        value: \"false\",\n        type: \"radio\",\n        checked: !summaryPage,\n        onChange: this.handleToggleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"toggle-on\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Current Agenda\"), React.createElement(\"input\", {\n        id: \"toggle-off\",\n        className: \"toggle toggle-right\",\n        name: \"toggle\",\n        value: \"true\",\n        type: \"radio\",\n        checked: summaryPage,\n        onChange: this.handleToggleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"toggle-off\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"All Progressions\"));\n    };\n\n    this.handleToggleChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        summaryPage: !this.state.summaryPage\n      }));\n    };\n\n    this.progressionsButton = () => React.createElement(\"button\", {\n      onClick: this.handleShowProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions');\n\n    this.myRefStudentButton = React.createRef();\n    this.myRefStudentDropdown = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n    const _this$props = this.props,\n          match = _this$props.match,\n          fetchStudents = _this$props.fetchStudents;\n    const klassId = match.params.id;\n    fetchStudents(klassId);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          klasses = _this$props2.klasses,\n          match = _this$props2.match;\n    const _this$state3 = this.state,\n          editingStudents = _this$state3.editingStudents,\n          showProgressions = _this$state3.showProgressions,\n          summaryPage = _this$state3.summaryPage;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.renderShowKlassMenuBar(klass), this.renderStudentDropdown(klass), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url),\n      render: renderProps => React.createElement(ShowKlassContainer, {\n        klass: klass,\n        showProgressions: showProgressions,\n        editingStudents: editingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/students/:id\"),\n      render: renderProps => {\n        return React.createElement(StudentShowContainer, Object.assign({\n          summaryPage: summaryPage,\n          handleSetStudent: this.handleSetStudent,\n          handleStudentShowPage: this.handleStudentShowPage\n        }, renderProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js"],"names":["React","Component","addStudents","ShowKlassContainer","StudentShowContainer","connect","Route","Switch","NavLink","ShowKlassRouter","constructor","props","state","editingStudents","showProgressions","studentShowPage","studentDropdown","student","undefined","summaryPage","handleClick","e","myRefStudentButton","current","contains","target","myRefStudentDropdown","handleStudentDropdownClick","handleStudentShowPage","setState","handleEditingStudents","handleShowProgressions","handleSetStudent","renderStudentDropdown","klass","students","allIds","map","studentId","index","byId","id","firstName","lastName","renderStudentDropdownContainer","renderShowKlassMenuBar","name","progressionsButton","renderNavBar","handleToggleChange","createRef","componentDidMount","document","addEventListener","match","fetchStudents","klassId","params","componentWillUnmount","removeEventListener","render","klasses","find","url","renderProps","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,kBAAvC;AACA,OAAO,wBAAP;;AAGA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAMlBC,KANkB,GAMV;AACNC,MAAAA,eAAe,EAAE,KADX;AAENC,MAAAA,gBAAgB,EAAE,IAFZ;AAGNC,MAAAA,eAAe,EAAE,KAHX;AAINC,MAAAA,eAAe,EAAE,KAJX;AAKNC,MAAAA,OAAO,EAAEC,SALH;AAMNC,MAAAA,WAAW,EAAE;AANP,KANU;;AAAA,SA0BlBC,WA1BkB,GA0BHC,CAAD,IAAO;AACnB,UAAI,KAAKT,KAAL,CAAWI,eAAf,EAA+B;AAC7B,YAAI,KAAKM,kBAAL,CAAwBC,OAAxB,CAAgCC,QAAhC,CAAyCH,CAAC,CAACI,MAA3C,KAAsD,KAAKC,oBAAL,CAA0BH,OAA1B,CAAkCC,QAAlC,CAA2CH,CAAC,CAACI,MAA7C,CAA1D,EAAgH;AAAE;AAAQ;;AAC1H,aAAKE,0BAAL;AACD;AACF,KA/BiB;;AAAA,SAiClBC,qBAjCkB,GAiCM,MAAM;AAC5B,WAAKC,QAAL,mBACK,KAAKjB,KADV;AAEEG,QAAAA,eAAe,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAF/B;AAID,KAtCiB;;AAAA,SAwClBe,qBAxCkB,GAwCM,MAAM;AAC5B,WAAKD,QAAL,mBAAkB,KAAKjB,KAAvB;AAA8BC,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3D;AACD,KA1CiB;;AAAA,SA4ClBkB,sBA5CkB,GA4CO,MAAM;AAC7B,WAAKF,QAAL,mBACK,KAAKjB,KADV;AAEEE,QAAAA,gBAAgB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAFhC;AAID,KAjDiB;;AAAA,SAmDlBa,0BAnDkB,GAmDW,MAAM;AACjC,WAAKE,QAAL,mBACK,KAAKjB,KADV;AAEEI,QAAAA,eAAe,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAF/B;AAID,KAxDiB;;AAAA,SA0DlBgB,gBA1DkB,GA0DEf,OAAD,IAAa;AAC9B,WAAKY,QAAL,mBACK,KAAKjB,KADV;AAEEK,QAAAA,OAAO,EAAEA;AAFX;AAID,KA/DiB;;AAAA,SAiElBgB,qBAjEkB,GAiEOC,KAAD,IAAW;AAAA,YACzBC,QADyB,GACZ,KAAKxB,KADO,CACzBwB,QADyB;AAAA,YAEzBnB,eAFyB,GAEL,KAAKJ,KAFA,CAEzBI,eAFyB;AAGjC,aACE;AAAK,QAAA,SAAS,2CAAoCA,eAAe,GAAG,QAAH,GAAa,QAAhE,CAAd;AAA0F,QAAA,GAAG,EAAE,KAAKU,oBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACzC,cAAMtB,OAAO,GAAGkB,QAAQ,CAACK,IAAT,CAAcF,SAAd,CAAhB;AACA,eACE,oBAAC,OAAD;AACE,UAAA,EAAE,qBAAcJ,KAAK,CAACO,EAApB,uBAAmCxB,OAAO,CAACwB,EAA3C,CADJ;AAEE,UAAA,OAAO,EAAE,KAAKd,0BAFhB;AAGE,UAAA,GAAG,EAAEY,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGtB,OAAO,CAACyB,SALX,OAKuBzB,OAAO,CAAC0B,QAL/B,CADF;AASD,OAXA,CADH,CADF;AAgBD,KApFiB;;AAAA,SAsFlBC,8BAtFkB,GAsFe,MAAM;AAAA,0BACA,KAAKhC,KADL;AAAA,YAC7BK,OAD6B,eAC7BA,OAD6B;AAAA,YACpBD,eADoB,eACpBA,eADoB;AAErC,aACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,GAAG,EAAE,KAAKM,kBAAnD;AAAuE,QAAA,OAAO,EAAE,KAAKK,0BAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOV,OAAO,aAAMA,OAAO,CAACyB,SAAd,cAA2BzB,OAAO,CAAC0B,QAAnC,IAAgD,UAA9D,MADF,EAEE;AAAK,QAAA,SAAS,qBAAc3B,eAAe,GAAG,IAAH,GAAQ,MAArC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD,KA9FiB;;AAAA,SAgGlB6B,sBAhGkB,GAgGQX,KAAD,IAAW;AAAA,2BACwB,KAAKtB,KAD7B;AAAA,YAC1BC,eAD0B,gBAC1BA,eAD0B;AAAA,YACTE,eADS,gBACTA,eADS;AAAA,YACQI,WADR,gBACQA,WADR;;AAElC,UAAI,CAACJ,eAAL,EAAqB;AACnB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,oBAAC,OAAD;AAAS,UAAA,EAAE,qBAAcmB,KAAK,CAACO,EAApB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsCP,KAAK,CAACY,IAA5C,CAAJ,CADF,EAEG,KAAKF,8BAAL,EAFH,EAGE;AAAQ,UAAA,OAAO,EAAE,KAAKd,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIjB,eAAe,GAAG,iBAAH,GAAsB,eADzC,CAHF,EAMMA,eAAe,GAAG,EAAH,GAAQ,KAAKkC,kBAAL,EAN7B,CADF;AAUD,OAXD,MAWO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,EAAE,qBAAcb,KAAK,CAACO,EAApB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsCP,KAAK,CAACY,IAA5C,CADF,EAEG,KAAKF,8BAAL,EAFH,EAGG,KAAKI,YAAL,EAHH,CADF;AAOD;AACF,KAtHiB;;AAAA,SAwHlBA,YAxHkB,GAwHH,MAAM;AAAA,YACX7B,WADW,GACK,KAAKP,KADV,CACXO,WADW;AAEnB,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAmE,QAAA,KAAK,EAAE,OAA1E;AAAmF,QAAA,IAAI,EAAC,OAAxF;AACE,QAAA,OAAO,EAAE,CAACA,WADZ;AACyB,QAAA,QAAQ,EAAE,KAAK8B,kBADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,SAAS,EAAC,qBAAjC;AAAuD,QAAA,IAAI,EAAC,QAA5D;AAAqE,QAAA,KAAK,EAAE,MAA5E;AAAoF,QAAA,IAAI,EAAC,OAAzF;AACE,QAAA,OAAO,EAAE9B,WADX;AACwB,QAAA,QAAQ,EAAE,KAAK8B,kBADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAO,QAAA,OAAO,EAAC,YAAf;AAA4B,QAAA,SAAS,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,CADF;AAUD,KApIiB;;AAAA,SAsIlBA,kBAtIkB,GAsII5B,CAAD,IAAO;AAC1B,WAAKQ,QAAL,mBACK,KAAKjB,KADV;AAEEO,QAAAA,WAAW,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAF3B;AAID,KA3IiB;;AAAA,SA6IlB4B,kBA7IkB,GA6IG,MAAO;AAAQ,MAAA,OAAO,EAAE,KAAKhB,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWE,gBAAX,GAA8B,mBAA9B,GAAoD,mBADvD,CA7IV;;AAEhB,SAAKQ,kBAAL,GAA0BtB,KAAK,CAACkD,SAAN,EAA1B;AACA,SAAKxB,oBAAL,GAA4B1B,KAAK,CAACkD,SAAN,EAA5B;AACD;;AAWDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKjC,WAA5C;AADiB,wBAEgB,KAAKT,KAFrB;AAAA,UAET2C,KAFS,eAETA,KAFS;AAAA,UAEFC,aAFE,eAEFA,aAFE;AAGjB,UAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAahB,EAA7B;AACAc,IAAAA,aAAa,CAACC,OAAD,CAAb;AACD;;AAEDE,EAAAA,oBAAoB,GAAE;AACpBN,IAAAA,QAAQ,CAACO,mBAAT,CAA6B,WAA7B,EAA0C,KAAKvC,WAA/C;AACD;;AAyHDwC,EAAAA,MAAM,GAAE;AAAA,yBACqB,KAAKjD,KAD1B;AAAA,UACEkD,OADF,gBACEA,OADF;AAAA,UACWP,KADX,gBACWA,KADX;AAAA,yBAEqD,KAAK1C,KAF1D;AAAA,UAEEC,eAFF,gBAEEA,eAFF;AAAA,UAEmBC,gBAFnB,gBAEmBA,gBAFnB;AAAA,UAEqCK,WAFrC,gBAEqCA,WAFrC;AAGN,UAAMqC,OAAO,GAAGK,OAAO,CAACzB,MAAR,CAAe0B,IAAf,CAAoBN,OAAO,IAAIA,OAAO,oBAAaF,KAAK,CAACG,MAAN,CAAahB,EAA1B,CAAtC,KAAyE,EAAzF;AACA,UAAMP,KAAK,GAAG2B,OAAO,CAACrB,IAAR,CAAagB,OAAb,CAAd;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,sBAAL,CAA4BX,KAA5B,CADH,EAEG,KAAKD,qBAAL,CAA2BC,KAA3B,CAFH,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKoB,KAAK,CAACS,GAAX,CAAjB;AAAmC,MAAA,MAAM,EAAEC,WAAW,IAAI,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAE9B,KAA3B;AAAkC,QAAA,gBAAgB,EAAEpB,gBAApD;AAAsE,QAAA,eAAe,EAAED,eAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKyC,KAAK,CAACS,GAAX,kBAAjB;AAAgD,MAAA,MAAM,EAAEC,WAAW,IAAI;AACnE,eAAO,oBAAC,oBAAD;AACC,UAAA,WAAW,EAAE7C,WADd;AAEC,UAAA,gBAAgB,EAAE,KAAKa,gBAFxB;AAGC,UAAA,qBAAqB,EAAE,KAAKJ;AAH7B,WAIKoC,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAI4B,OALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,CADF;AAgBD;;AAvKqC;;AA0KxC,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLX,IAAAA,aAAa,EAAGC,OAAD,IAAaU,QAAQ,CAAChE,WAAW,CAACsD,OAAD,CAAZ;AAD/B,GAAP;AAGD;;AAED,SAASW,eAAT,CAAyBvD,KAAzB,EAA+B;AAC7B,SAAO;AACLiD,IAAAA,OAAO,EAAEjD,KAAK,CAACiD,OADV;AAEL1B,IAAAA,QAAQ,EAAEvB,KAAK,CAACuB;AAFX,GAAP;AAID;;AAED,eAAe9B,OAAO,CAAC8D,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CxD,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { addStudents } from '../../actions/studentActions'\nimport ShowKlassContainer from './ShowKlassContainer'\nimport StudentShowContainer from '../students/show/StudentShowContainer'\nimport { connect } from 'react-redux'\nimport { Route, Switch, NavLink } from \"react-router-dom\"\nimport '../agendas/toggle.scss'\n\n\nclass ShowKlassRouter extends Component {\n  constructor(props){\n    super(props)\n    this.myRefStudentButton = React.createRef()\n    this.myRefStudentDropdown = React.createRef()\n  }\n\n  state = {\n    editingStudents: false,\n    showProgressions: true,\n    studentShowPage: false,\n    studentDropdown: false,\n    student: undefined,\n    summaryPage: false\n  }\n\n  componentDidMount(){\n    document.addEventListener('mousedown', this.handleClick)\n    const { match, fetchStudents } = this.props\n    const klassId = match.params.id\n    fetchStudents(klassId)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClick)\n  }\n\n  handleClick = (e) => {\n    if (this.state.studentDropdown){\n      if (this.myRefStudentButton.current.contains(e.target) || this.myRefStudentDropdown.current.contains(e.target)) { return }\n      this.handleStudentDropdownClick()\n    }\n  }\n\n  handleStudentShowPage = () => {\n    this.setState({\n      ...this.state,\n      studentShowPage: !this.state.studentShowPage\n    })\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleShowProgressions = () => {\n    this.setState({\n      ...this.state,\n      showProgressions: !this.state.showProgressions\n    })\n  }\n\n  handleStudentDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      studentDropdown: !this.state.studentDropdown\n    })\n  }\n\n  handleSetStudent = (student) => {\n    this.setState({\n      ...this.state,\n      student: student\n    })\n  }\n\n  renderStudentDropdown = (klass) => {\n    const { students } = this.props\n    const { studentDropdown } = this.state\n    return (\n      <div className={`dropdown-menu student-dropdown ${studentDropdown ? 'opened': 'closed'}`} ref={this.myRefStudentDropdown}>\n        {students.allIds.map((studentId, index) => {\n          const student = students.byId[studentId]\n          return (\n            <NavLink\n              to={`/classes/${klass.id}/students/${student.id}`}\n              onClick={this.handleStudentDropdownClick}\n              key={index}\n              >\n              {student.firstName} {student.lastName}\n            </NavLink>\n            )\n        })}\n      </div>\n    )\n  }\n\n  renderStudentDropdownContainer = () => {\n    const { student, studentDropdown } = this.state\n    return (\n      <div className=\"student-dropdown-button\" ref={this.myRefStudentButton} onClick={this.handleStudentDropdownClick}>\n        <div>{ student ? `${student.firstName} ${student.lastName}` : 'Students'} </div>\n        <div className={`triangle ${studentDropdown ? 'up':'down'}`}>&#9660;</div>\n      </div>\n    )\n  }\n\n  renderShowKlassMenuBar = (klass) => {\n    const { editingStudents, studentShowPage, summaryPage } = this.state\n    if (!studentShowPage){\n      return (\n        <div className=\"klass-show-title\">\n          <h1><NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink></h1>\n          {this.renderStudentDropdownContainer()}\n          <button onClick={this.handleEditingStudents}>\n            { editingStudents ? 'Return to Class': 'Edit Students' }\n          </button>\n            { editingStudents ? '' : this.progressionsButton()}\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"klass-show-title\">\n          <NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>\n          {this.renderStudentDropdownContainer()}\n          {this.renderNavBar()}\n        </div>\n      )\n    }\n  }\n\n  renderNavBar = () => {\n    const { summaryPage } = this.state\n    return (\n      <div className=\"myagenda-navbar\">\n        <input id=\"toggle-on\" className=\"toggle toggle-left\" name=\"toggle\" value={\"false\"} type=\"radio\"\n          checked={!summaryPage} onChange={this.handleToggleChange} />\n        <label htmlFor=\"toggle-on\" className=\"btn\">Current Agenda</label>\n        <input id=\"toggle-off\" className=\"toggle toggle-right\" name=\"toggle\" value={\"true\"} type=\"radio\"\n          checked={summaryPage} onChange={this.handleToggleChange}/>\n        <label htmlFor=\"toggle-off\" className=\"btn\">All Progressions</label>\n      </div>\n    )\n  }\n\n  handleToggleChange = (e) => {\n    this.setState({\n      ...this.state,\n      summaryPage: !this.state.summaryPage\n    })\n  }\n\n  progressionsButton = () =>  <button onClick={this.handleShowProgressions}>\n                                {this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions'}\n                              </button>\n\n  render(){\n    const { klasses, match } = this.props\n    const { editingStudents, showProgressions, summaryPage } = this.state\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    return (\n      <div>\n        {this.renderShowKlassMenuBar(klass)}\n        {this.renderStudentDropdown(klass)}\n        <Switch>\n          <Route exact path={`${match.url}`} render={renderProps => <ShowKlassContainer klass={klass} showProgressions={showProgressions} editingStudents={editingStudents}/>}/>\n          <Route exact path={`${match.url}/students/:id`} render={renderProps => {\n              return <StudentShowContainer\n                      summaryPage={summaryPage}\n                      handleSetStudent={this.handleSetStudent}\n                      handleStudentShowPage={this.handleStudentShowPage}\n                      {...renderProps} />}\n            }/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter)\n"]},"metadata":{},"sourceType":"module"}