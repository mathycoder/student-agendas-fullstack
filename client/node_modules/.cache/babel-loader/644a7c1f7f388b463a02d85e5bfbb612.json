{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer';\nimport NewKlassForm from './NewKlassForm';\nimport { connect } from 'react-redux';\nimport { fetchKlasses } from '../actions/fetchKlasses';\n\nclass KlassesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateKlassId = id => {\n      this.setState({\n        klasses: [...this.state.klasses],\n        klassId: id\n      });\n    };\n\n    this.addKlass = klass => {\n      this.setState(_objectSpread({}, this.state, {\n        klasses: [...this.state.klasses, klass]\n      }));\n    };\n\n    this.removeKlass = klass => {\n      this.setState(_objectSpread({}, this.state, {\n        klasses: this.state.klasses.filter(kl => kl.id !== klass.id)\n      }));\n    };\n\n    this.addStudentToKlass = student => {\n      const newKlasses = [...this.state.klasses];\n      const index = newKlasses.findIndex(klass => klass.id === student.klass_id);\n      newKlasses[index].students.push(student);\n      this.setState(_objectSpread({}, this.state, {\n        klasses: [...newKlasses]\n      }));\n    };\n\n    this.removeStudentFromKlass = student => {\n      fetch(\"/klasses/\".concat(student.klass_id, \"/students/\").concat(student.id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(json => {\n        const newKlasses = [...this.state.klasses];\n        const klassIndex = newKlasses.findIndex(klass => klass.id === json.klass_id);\n        const studentIndex = newKlasses[klassIndex].students.findIndex(st => st.id === json.id);\n        newKlasses[klassIndex].students.splice(studentIndex, 1);\n        this.setState(_objectSpread({}, this.state, {\n          klasses: [...newKlasses]\n        }));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchKlasses(); // fetch(`/klasses`)\n    //   .then(resp => resp.json())\n    //   .then(json => {\n    //     this.setState({\n    //       klasses: [...json]\n    //     })\n    //   })\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  // klassSelectDropdown = () => {\n  //   return (\n  //     <div className=\"progression-menu-bar\">\n  //       <ul>\n  //         {this.state.klasses.map((klass, index) => (\n  //           <li key={index}>\n  //             {<NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>}\n  //           </li>\n  //         ))}\n  //           <li>{<NavLink to={`/classes/new`}>New Class</NavLink>}</li>\n  //       </ul>\n  //     </div>\n  //   )\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/new\"),\n      render: () => React.createElement(NewKlassForm, Object.assign({}, this.props, {\n        addKlass: this.addKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      render: routerProps => React.createElement(ShowKlassContainer, Object.assign({}, routerProps, {\n        addStudentToKlass: this.addStudentToKlass,\n        removeStudentFromKlass: this.removeStudentFromKlass,\n        removeKlass: this.removeKlass,\n        klasses: this.state.klasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })),\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js"],"names":["React","Component","Route","NavLink","Switch","ShowKlassContainer","NewKlassForm","connect","fetchKlasses","KlassesContainer","updateKlassId","id","setState","klasses","state","klassId","addKlass","klass","removeKlass","filter","kl","addStudentToKlass","student","newKlasses","index","findIndex","klass_id","students","push","removeStudentFromKlass","fetch","method","headers","then","resp","json","klassIndex","studentIndex","st","splice","componentDidMount","props","componentDidUpdate","console","log","render","match","url","routerProps","Math","random","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer'\nimport NewKlassForm from './NewKlassForm'\nimport { connect } from 'react-redux'\nimport { fetchKlasses } from '../actions/fetchKlasses'\n\nclass KlassesContainer extends Component {\n\n  componentDidMount(){\n    this.props.fetchKlasses()\n    // fetch(`/klasses`)\n    //   .then(resp => resp.json())\n    //   .then(json => {\n    //     this.setState({\n    //       klasses: [...json]\n    //     })\n    //   })\n  }\n\n  componentDidUpdate(){\n    console.log(this.state)\n  }\n\n  updateKlassId = (id) => {\n    this.setState({\n      klasses: [...this.state.klasses],\n      klassId: id\n    })\n  }\n\n  addKlass = (klass) => {\n    this.setState({\n      ...this.state,\n      klasses: [\n        ...this.state.klasses,\n        klass\n      ]\n    })\n  }\n\n  removeKlass = (klass) => {\n    this.setState({\n      ...this.state,\n      klasses: this.state.klasses.filter(kl => kl.id !== klass.id)\n    })\n  }\n\n  addStudentToKlass = (student) => {\n    const newKlasses = [...this.state.klasses]\n    const index = newKlasses.findIndex(klass => klass.id === student.klass_id)\n    newKlasses[index].students.push(student)\n\n    this.setState({\n      ...this.state,\n      klasses: [\n        ...newKlasses,\n      ]\n    })\n  }\n\n  removeStudentFromKlass = (student) => {\n    fetch(`/klasses/${student.klass_id}/students/${student.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        const newKlasses = [...this.state.klasses]\n        const klassIndex = newKlasses.findIndex(klass => klass.id === json.klass_id)\n        const studentIndex = newKlasses[klassIndex].students.findIndex(st => st.id === json.id)\n        newKlasses[klassIndex].students.splice(studentIndex, 1)\n\n        this.setState({\n          ...this.state,\n          klasses: [\n            ...newKlasses,\n          ]\n        })\n      })\n  }\n\n  // klassSelectDropdown = () => {\n  //   return (\n  //     <div className=\"progression-menu-bar\">\n  //       <ul>\n  //         {this.state.klasses.map((klass, index) => (\n  //           <li key={index}>\n  //             {<NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>}\n  //           </li>\n  //         ))}\n  //           <li>{<NavLink to={`/classes/new`}>New Class</NavLink>}</li>\n  //       </ul>\n  //     </div>\n  //   )\n  // }\n\n  render() {\n    return (\n      <div>\n        \n        <Switch>\n          <Route exact path={`${this.props.match.url}/new`} render={() => <NewKlassForm {...this.props} addKlass={this.addKlass} />} />\n          <Route exact path={`${this.props.match.url}/:id`} render={(routerProps) => <ShowKlassContainer {...routerProps} addStudentToKlass={this.addStudentToKlass} removeStudentFromKlass={this.removeStudentFromKlass} removeKlass={this.removeKlass} klasses={this.state.klasses} />} key={Math.random()} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return { fetchKlasses: () => dispatch(fetchKlasses())}\n}\n\nfunction mapStateToProps(state){\n  return {klasses: state.klasses}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer)\n"]},"metadata":{},"sourceType":"module"}