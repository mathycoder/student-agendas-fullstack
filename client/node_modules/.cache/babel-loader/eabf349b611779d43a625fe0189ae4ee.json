{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport CreateStudentForm from '../students/CreateStudentForm';\nimport StudentsContainer from '../students/StudentsContainer';\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer';\nimport EditStudents from '../students/EditStudents';\nimport { connect } from 'react-redux';\nimport { addStudents, addStudentToKlass } from '../../actions/studentActions';\nimport { addStudentProgression } from '../../actions/studentProgressionActions';\nimport '../students/student.css';\n\nclass ShowKlassContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editingStudents: false,\n      showProgressions: true\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleShowProgressions = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showProgressions: !this.state.showProgressions\n      }));\n    };\n\n    this.handleStudentSubmit = (event, studentData) => {\n      event.preventDefault();\n      const _this$props = this.props,\n            match = _this$props.match,\n            addStudentToKlass = _this$props.addStudentToKlass;\n      const klassId = parseInt(match.params.id);\n      addStudentToKlass(klassId, studentData);\n      this.setState(_objectSpread({}, this.state, {\n        addingStudent: false\n      }));\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"#FFFF00\";\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n    };\n\n    this.handleDragStart = (event, progression) => {\n      let data = JSON.stringify(progression);\n      event.dataTransfer.setData(\"progression\", data);\n    };\n\n    this.handleDragDrop = event => {\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n      let progression = event.dataTransfer.getData(\"progression\");\n      progression = JSON.parse(progression);\n      const student = this.props.students.byId[\"student\".concat(event.currentTarget.dataset.studentId)];\n      const studentProgressions = this.props.studentProgressions;\n      const any = studentProgressions.allIds.filter(spId => {\n        const sp = studentProgressions.byId[spId];\n        return sp.studentId === \"student\".concat(student.id) && sp.progressionId === \"progression\".concat(progression.id);\n      });\n\n      if (any.length === 0) {\n        this.props.addStudentProgression(student, progression);\n      }\n    };\n\n    this.renderStudents = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            studentProgressions = _this$props2.studentProgressions,\n            progressions = _this$props2.progressions,\n            videos = _this$props2.videos,\n            match = _this$props2.match;\n      return React.createElement(StudentsContainer, {\n        students: students,\n        studentProgressions: studentProgressions,\n        progressions: progressions,\n        videos: videos,\n        handleDragOver: this.handleDragOver,\n        handleDragLeave: this.handleDragLeave,\n        handleDragDrop: this.handleDragDrop,\n        showProgressions: this.state.showProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    };\n\n    this.renderProgressions = () => {\n      return React.createElement(IndexProgressionsContainer, {\n        handleDragStart: this.handleDragStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    };\n\n    this.progressionsButton = () => React.createElement(\"button\", {\n      onClick: this.handleShowProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions');\n  }\n\n  componentDidMount() {\n    const klassId = this.props.match.params.id;\n    this.props.fetchStudents(klassId);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          klasses = _this$props3.klasses,\n          addStudentToKlass = _this$props3.addStudentToKlass,\n          match = _this$props3.match;\n    const _this$state = this.state,\n          editingStudents = _this$state.editingStudents,\n          showProgressions = _this$state.showProgressions;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n\n    if (klass) {\n      return React.createElement(\"div\", {\n        className: \"klass-show-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"klass-show-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, klass.name), React.createElement(\"button\", {\n        onClick: this.handleEditingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Edit Students\"), editingStudents ? '' : this.progressionsButton(), this.state.addingStudent ? React.createElement(CreateStudentForm, {\n        addStudentToKlass: addStudentToKlass,\n        handleStudentSubmit: this.handleStudentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }) : ''), editingStudents ? React.createElement(EditStudents, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }) : this.renderStudents(), !editingStudents && showProgressions ? this.renderProgressions() : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId)),\n    addStudentToKlass: (klass, student) => dispatch(addStudentToKlass(klass, student)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js"],"names":["React","Component","CreateStudentForm","StudentsContainer","IndexProgressionsContainer","EditStudents","connect","addStudents","addStudentToKlass","addStudentProgression","ShowKlassContainer","state","editingStudents","showProgressions","handleEditingStudents","setState","handleShowProgressions","handleStudentSubmit","event","studentData","preventDefault","props","match","klassId","parseInt","params","id","addingStudent","handleDragOver","agenda","currentTarget","closest","style","backgroundColor","handleDragLeave","handleDragStart","progression","data","JSON","stringify","dataTransfer","setData","handleDragDrop","getData","parse","student","students","byId","dataset","studentId","studentProgressions","any","allIds","filter","spId","sp","progressionId","length","renderStudents","progressions","videos","renderProgressions","progressionsButton","componentDidMount","fetchStudents","render","klasses","find","klass","name","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CreateStudentForm from '../students/CreateStudentForm'\nimport StudentsContainer from '../students/StudentsContainer'\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer'\nimport EditStudents from '../students/EditStudents'\nimport { connect } from 'react-redux'\nimport { addStudents, addStudentToKlass } from '../../actions/studentActions'\nimport { addStudentProgression } from '../../actions/studentProgressionActions'\nimport '../students/student.css'\n\nclass ShowKlassContainer extends Component {\n  state = {\n    editingStudents: false,\n    showProgressions: true\n  }\n\n  componentDidMount(){\n    const klassId = this.props.match.params.id\n    this.props.fetchStudents(klassId)\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleShowProgressions = () => {\n    this.setState({\n      ...this.state,\n      showProgressions: !this.state.showProgressions\n    })\n  }\n\n  handleStudentSubmit = (event, studentData) => {\n    event.preventDefault()\n    const { match, addStudentToKlass } = this.props\n    const klassId = parseInt(match.params.id)\n    addStudentToKlass(klassId, studentData)\n    this.setState({...this.state, addingStudent: false})\n  }\n\n  handleDragOver = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"#FFFF00\"\n  }\n\n  handleDragLeave = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n  }\n\n  handleDragStart = (event, progression) => {\n    let data = JSON.stringify(progression)\n    event.dataTransfer.setData(\"progression\", data)\n  }\n\n  handleDragDrop = (event) => {\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n    let progression = event.dataTransfer.getData(\"progression\")\n    progression = JSON.parse(progression)\n    const student = this.props.students.byId[`student${event.currentTarget.dataset.studentId}`]\n\n    const { studentProgressions } = this.props\n    const any = studentProgressions.allIds.filter(spId => {\n      const sp = studentProgressions.byId[spId]\n      return sp.studentId === `student${student.id}` && sp.progressionId === `progression${progression.id}`\n    })\n\n    if (any.length === 0){\n      this.props.addStudentProgression(student, progression)\n    }\n  }\n\n  renderStudents = () => {\n    const { students, studentProgressions, progressions, videos, match } = this.props\n    return (\n      <StudentsContainer\n        students={students}\n        studentProgressions={studentProgressions}\n        progressions={progressions}\n        videos={videos}\n        handleDragOver={this.handleDragOver}\n        handleDragLeave={this.handleDragLeave}\n        handleDragDrop={this.handleDragDrop}\n        showProgressions={this.state.showProgressions} />\n    )\n  }\n\n  renderProgressions = () => {\n    return <IndexProgressionsContainer handleDragStart={this.handleDragStart}/>\n  }\n\n  progressionsButton = () => (\n    <button onClick={this.handleShowProgressions}>{this.state.showProgressions ? 'Hide Progressions' : 'Show Progressions'}</button>\n  )\n\n  render(){\n    const { klasses, addStudentToKlass, match } = this.props\n    const { editingStudents, showProgressions } = this.state\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    if (klass) {\n      return (\n        <div className=\"klass-show-container\">\n          <div className=\"klass-show-title\">\n            <h1>{klass.name}</h1>\n            <button onClick={this.handleEditingStudents}>Edit Students</button>\n            { editingStudents ? '' : this.progressionsButton()}\n            {this.state.addingStudent ? <CreateStudentForm addStudentToKlass={addStudentToKlass} handleStudentSubmit={this.handleStudentSubmit}/> : ''}\n          </div>\n          { editingStudents ? <EditStudents /> : this.renderStudents() }\n          { !editingStudents && showProgressions ? this.renderProgressions() : <div></div> }\n\n        </div>\n      )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId)),\n    addStudentToKlass: (klass, student) => dispatch(addStudentToKlass(klass, student)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer)\n"]},"metadata":{},"sourceType":"module"}