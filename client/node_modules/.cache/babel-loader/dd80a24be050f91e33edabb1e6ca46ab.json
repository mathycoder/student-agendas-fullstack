{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions';\nimport StudentShowAgenda from './StudentShowAgenda';\nimport StudentShowProgression from './StudentShowProgression';\nimport '../css/student-show.css';\n\nclass StudentShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: undefined,\n      myProgressions: undefined,\n      selectedProgressionId: undefined,\n      itemIndex: undefined,\n      initialLoad: undefined\n    };\n\n    this.setInitialLoad = () => {\n      const _this$state = this.state,\n            myProgressions = _this$state.myProgressions,\n            selectedProgressionId = _this$state.selectedProgressionId,\n            itemIndex = _this$state.itemIndex,\n            initialLoad = _this$state.initialLoad;\n\n      if (!initialLoad && myProgressions && myProgressions.length > 0) {\n        this.setState(_objectSpread({}, this.state, {\n          initialLoad: true,\n          selectedProgressionId: \"progression\".concat(myProgressions[0].id),\n          itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n        }));\n      }\n    };\n\n    this.setProgressions = () => {\n      const _this$props = this.props,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions;\n      const _this$state2 = this.state,\n            student = _this$state2.student,\n            incompleteProgressions = _this$state2.incompleteProgressions,\n            completeProgressions = _this$state2.completeProgressions,\n            myProgressions = _this$state2.myProgressions;\n\n      if (!myProgressions && progressions.allIds.length > 0 && student) {\n        const tempProgressions = getStudentProgressions(student, studentProgressions, progressions);\n        this.setState({\n          myProgressions: [...tempProgressions]\n        });\n      }\n    };\n\n    this.setStudent = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            handleSetStudent = _this$props2.handleSetStudent;\n      const studentId = this.props.match.params.id;\n      const student = students.byId[\"student\".concat(studentId)];\n\n      if (student && !this.state.student) {\n        handleSetStudent(student);\n        this.setState(_objectSpread({}, this.state, {\n          student: student\n        }));\n      }\n    };\n\n    this.handleProgressionClick = (progression, index) => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedProgressionId: \"progression\".concat(progression.id),\n        itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleStudentShowPage();\n  }\n\n  componentDidUpdate() {\n    this.setStudent();\n    this.setProgressions();\n    this.setInitialLoad();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          student = _this$state3.student,\n          myProgressions = _this$state3.myProgressions,\n          selectedProgressionId = _this$state3.selectedProgressionId,\n          itemIndex = _this$state3.itemIndex;\n    const _this$props3 = this.props,\n          progressions = _this$props3.progressions,\n          studentProgressions = _this$props3.studentProgressions,\n          reflections = _this$props3.reflections,\n          videos = _this$props3.videos;\n\n    if (student && myProgressions) {\n      return React.createElement(\"div\", {\n        className: \"myagenda-wrapper student-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(StudentShowAgenda, {\n        itemIndex: itemIndex,\n        selectedProgressionId: selectedProgressionId,\n        handleProgressionClick: this.handleProgressionClick,\n        progressions: myProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(StudentShowProgression, {\n        key: Math.random(),\n        itemIndex: itemIndex,\n        progression: myProgressions.find(prog => \"progression\".concat(prog.id) === selectedProgressionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js"],"names":["React","Component","connect","getStudentProgressions","StudentShowAgenda","StudentShowProgression","StudentShowContainer","state","student","undefined","myProgressions","selectedProgressionId","itemIndex","initialLoad","setInitialLoad","length","setState","id","items","findIndex","el","includes","setProgressions","props","progressions","studentProgressions","incompleteProgressions","completeProgressions","allIds","tempProgressions","setStudent","students","handleSetStudent","studentId","match","params","byId","handleProgressionClick","progression","index","componentDidMount","handleStudentShowPage","componentDidUpdate","render","reflections","videos","Math","random","find","prog","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,mDAAvC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAO,yBAAP;;AAEA,MAAMC,oBAAN,SAAmCL,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CM,KAD2C,GACnC;AACNC,MAAAA,OAAO,EAAEC,SADH;AAENC,MAAAA,cAAc,EAAED,SAFV;AAGNE,MAAAA,qBAAqB,EAAEF,SAHjB;AAING,MAAAA,SAAS,EAAEH,SAJL;AAKNI,MAAAA,WAAW,EAAEJ;AALP,KADmC;;AAAA,SAmB3CK,cAnB2C,GAmB1B,MAAM;AAAA,0BACqD,KAAKP,KAD1D;AAAA,YACbG,cADa,eACbA,cADa;AAAA,YACGC,qBADH,eACGA,qBADH;AAAA,YAC0BC,SAD1B,eAC0BA,SAD1B;AAAA,YACqCC,WADrC,eACqCA,WADrC;;AAErB,UAAI,CAACA,WAAD,IAAgBH,cAAhB,IAAkCA,cAAc,CAACK,MAAf,GAAwB,CAA9D,EAAgE;AAC9D,aAAKC,QAAL,mBACK,KAAKT,KADV;AAEEM,UAAAA,WAAW,EAAE,IAFf;AAGEF,UAAAA,qBAAqB,uBAAgBD,cAAc,CAAC,CAAD,CAAd,CAAkBO,EAAlC,CAHvB;AAIEL,UAAAA,SAAS,EAAEF,cAAc,CAAC,CAAD,CAAd,CAAkBQ,KAAlB,CAAwBC,SAAxB,CAAkCC,EAAE,IAAIA,EAAE,CAACC,QAAH,CAAY,YAAZ,CAAxC;AAJb;AAMD;AACF,KA7B0C;;AAAA,SA+B3CC,eA/B2C,GA+BzB,MAAM;AAAA,0BACwB,KAAKC,KAD7B;AAAA,YACdC,YADc,eACdA,YADc;AAAA,YACAC,mBADA,eACAA,mBADA;AAAA,2BAE4D,KAAKlB,KAFjE;AAAA,YAEdC,OAFc,gBAEdA,OAFc;AAAA,YAELkB,sBAFK,gBAELA,sBAFK;AAAA,YAEmBC,oBAFnB,gBAEmBA,oBAFnB;AAAA,YAEyCjB,cAFzC,gBAEyCA,cAFzC;;AAGtB,UAAI,CAACA,cAAD,IAAmBc,YAAY,CAACI,MAAb,CAAoBb,MAApB,GAA6B,CAAhD,IAAqDP,OAAzD,EAAiE;AAC/D,cAAMqB,gBAAgB,GAAG1B,sBAAsB,CAACK,OAAD,EAAUiB,mBAAV,EAA+BD,YAA/B,CAA/C;AACA,aAAKR,QAAL,CAAc;AACZN,UAAAA,cAAc,EAAE,CAAC,GAAGmB,gBAAJ;AADJ,SAAd;AAGD;AACF,KAxC0C;;AAAA,SA0C3CC,UA1C2C,GA0C9B,MAAM;AAAA,2BACsB,KAAKP,KAD3B;AAAA,YACTQ,QADS,gBACTA,QADS;AAAA,YACCC,gBADD,gBACCA,gBADD;AAEjB,YAAMC,SAAS,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBlB,EAA1C;AACA,YAAMT,OAAO,GAAGuB,QAAQ,CAACK,IAAT,kBAAwBH,SAAxB,EAAhB;;AACA,UAAIzB,OAAO,IAAI,CAAC,KAAKD,KAAL,CAAWC,OAA3B,EAAmC;AACjCwB,QAAAA,gBAAgB,CAACxB,OAAD,CAAhB;AACA,aAAKQ,QAAL,mBACK,KAAKT,KADV;AAEEC,UAAAA,OAAO,EAAEA;AAFX;AAID;AACF,KArD0C;;AAAA,SAuD3C6B,sBAvD2C,GAuDlB,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAC/C,WAAKvB,QAAL,mBACK,KAAKT,KADV;AAEEI,QAAAA,qBAAqB,uBAAgB2B,WAAW,CAACrB,EAA5B,CAFvB;AAGEL,QAAAA,SAAS,EAAE0B,WAAW,CAACpB,KAAZ,CAAkBC,SAAlB,CAA4BC,EAAE,IAAIA,EAAE,CAACC,QAAH,CAAY,YAAZ,CAAlC;AAHb;AAKD,KA7D0C;AAAA;;AAS3CmB,EAAAA,iBAAiB,GAAE;AACjB,SAAKjB,KAAL,CAAWkB,qBAAX;AACD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKZ,UAAL;AACA,SAAKR,eAAL;AACA,SAAKR,cAAL;AACD;;AA+CD6B,EAAAA,MAAM,GAAE;AAAA,yBACgE,KAAKpC,KADrE;AAAA,UACEC,OADF,gBACEA,OADF;AAAA,UACWE,cADX,gBACWA,cADX;AAAA,UAC2BC,qBAD3B,gBAC2BA,qBAD3B;AAAA,UACkDC,SADlD,gBACkDA,SADlD;AAAA,yBAE6D,KAAKW,KAFlE;AAAA,UAEEC,YAFF,gBAEEA,YAFF;AAAA,UAEgBC,mBAFhB,gBAEgBA,mBAFhB;AAAA,UAEqCmB,WAFrC,gBAEqCA,WAFrC;AAAA,UAEkDC,MAFlD,gBAEkDA,MAFlD;;AAGN,QAAIrC,OAAO,IAAIE,cAAf,EAA+B;AAC7B,aACE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AACE,QAAA,SAAS,EAAEE,SADb;AAEE,QAAA,qBAAqB,EAAED,qBAFzB;AAGE,QAAA,sBAAsB,EAAE,KAAK0B,sBAH/B;AAIE,QAAA,YAAY,EAAE3B,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,sBAAD;AACI,QAAA,GAAG,EAAEoC,IAAI,CAACC,MAAL,EADT;AAEI,QAAA,SAAS,EAAEnC,SAFf;AAGI,QAAA,WAAW,EAAEF,cAAc,CAACsC,IAAf,CAAoBC,IAAI,IAAI,qBAAcA,IAAI,CAAChC,EAAnB,MAA4BN,qBAAxD,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAaD,KAdD,MAcO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF;;AAtF0C;;AAyF7C,SAASuC,eAAT,CAAyB3C,KAAzB,EAA+B;AAC7B,SAAO;AACLwB,IAAAA,QAAQ,EAAExB,KAAK,CAACwB,QADX;AAELP,IAAAA,YAAY,EAAEjB,KAAK,CAACiB,YAFf;AAGLC,IAAAA,mBAAmB,EAAElB,KAAK,CAACkB,mBAHtB;AAILmB,IAAAA,WAAW,EAAErC,KAAK,CAACqC,WAJd;AAKLC,IAAAA,MAAM,EAAEtC,KAAK,CAACsC;AALT,GAAP;AAOD;;AAED,eAAe3C,OAAO,CAACgD,eAAD,EAAkB,IAAlB,CAAP,CAA+B5C,oBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions'\nimport StudentShowAgenda from './StudentShowAgenda'\nimport StudentShowProgression from './StudentShowProgression'\nimport '../css/student-show.css'\n\nclass StudentShowContainer extends Component {\n  state = {\n    student: undefined,\n    myProgressions: undefined,\n    selectedProgressionId: undefined,\n    itemIndex: undefined,\n    initialLoad: undefined\n  }\n\n  componentDidMount(){\n    this.props.handleStudentShowPage()\n  }\n\n  componentDidUpdate(){\n    this.setStudent()\n    this.setProgressions()\n    this.setInitialLoad()\n  }\n\n  setInitialLoad = () => {\n    const { myProgressions, selectedProgressionId, itemIndex, initialLoad } = this.state\n    if (!initialLoad && myProgressions && myProgressions.length > 0){\n      this.setState({\n        ...this.state,\n        initialLoad: true,\n        selectedProgressionId: `progression${myProgressions[0].id}`,\n        itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n      })\n    }\n  }\n\n  setProgressions = () => {\n    const { progressions, studentProgressions } = this.props\n    const { student, incompleteProgressions, completeProgressions, myProgressions } = this.state\n    if (!myProgressions && progressions.allIds.length > 0 && student){\n      const tempProgressions = getStudentProgressions(student, studentProgressions, progressions)\n      this.setState({\n        myProgressions: [...tempProgressions]\n      })\n    }\n  }\n\n  setStudent = () => {\n    const { students, handleSetStudent } = this.props\n    const studentId = this.props.match.params.id\n    const student = students.byId[`student${studentId}`]\n    if (student && !this.state.student){\n      handleSetStudent(student)\n      this.setState({\n        ...this.state,\n        student: student\n      })\n    }\n  }\n\n  handleProgressionClick = (progression, index) => {\n    this.setState({\n      ...this.state,\n      selectedProgressionId: `progression${progression.id}`,\n      itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n    })\n  }\n\n\n  render(){\n    const { student, myProgressions, selectedProgressionId, itemIndex } = this.state\n    const { progressions, studentProgressions, reflections, videos } = this.props\n    if (student && myProgressions) {\n      return (\n        <div className=\"myagenda-wrapper student-show-wrapper\">\n          <StudentShowAgenda\n            itemIndex={itemIndex}\n            selectedProgressionId={selectedProgressionId}\n            handleProgressionClick={this.handleProgressionClick}\n            progressions={myProgressions}/>\n          <StudentShowProgression\n              key={Math.random()}\n              itemIndex={itemIndex}\n              progression={myProgressions.find(prog => `progression${prog.id}` === selectedProgressionId)} />\n        </div>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer)\n"]},"metadata":{},"sourceType":"module"}