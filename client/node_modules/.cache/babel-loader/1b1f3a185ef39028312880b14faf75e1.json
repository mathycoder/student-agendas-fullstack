{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/final/student-agendas/src/videos/DisplayPreview.js\";\nimport React from 'react';\nimport './VideoSearch.css';\n\nfunction displayDate(video) {\n  const date = new Date(video.snippet.publishedAt);\n  const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  const month = MONTHS[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return \"\".concat(month, \" \").concat(day, \", \").concat(year);\n}\n\nfunction displayTitle(video) {\n  const parser = new DOMParser();\n  let title = parser.parseFromString('<!doctype html><body>' + video.snippet.title, 'text/html');\n  return title.body.textContent;\n}\n\nconst DisplayPreview = props => {\n  const url = 'http://www.youtube.com/embed/' + props.video.id.videoId;\n  return React.createElement(\"div\", {\n    className: \"search-video-preview\",\n    draggable: true,\n    onDragStart: event => props.handleDragStart(event, video),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, displayTitle(props.video)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Created by \", props.video.snippet.channelTitle, \" on \", displayDate(props.video)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"iframe\", {\n    title: \"video preview\",\n    id: \"player\",\n    type: \"text/html\",\n    width: \"360\",\n    height: \"220\",\n    src: url,\n    frameBorder: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.video.snippet.description), props.addToProgression ? React.createElement(\"button\", {\n    onClick: event => props.addToProgression(props.video),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Add to Progression\") : '', props.removeFromProgression ? React.createElement(\"button\", {\n    onClick: event => props.removeFromProgression(props.video),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Remove from Progression\") : '');\n};\n\nexport default DisplayPreview;","map":{"version":3,"sources":["/Users/adamsarli/Coding/final/student-agendas/src/videos/DisplayPreview.js"],"names":["React","displayDate","video","date","Date","snippet","publishedAt","MONTHS","month","getMonth","day","getDate","year","getFullYear","displayTitle","parser","DOMParser","title","parseFromString","body","textContent","DisplayPreview","props","url","id","videoId","event","handleDragStart","channelTitle","description","addToProgression","removeFromProgression"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACzB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,OAAN,CAAcC,WAAvB,CAAb;AACA,QAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,CAAf;AACA,QAAMC,KAAK,GAAGD,MAAM,CAACJ,IAAI,CAACM,QAAL,EAAD,CAApB;AACA,QAAMC,GAAG,GAAGP,IAAI,CAACQ,OAAL,EAAZ;AACA,QAAMC,IAAI,GAAGT,IAAI,CAACU,WAAL,EAAb;AACA,mBAAUL,KAAV,cAAmBE,GAAnB,eAA2BE,IAA3B;AACD;;AAED,SAASE,YAAT,CAAsBZ,KAAtB,EAA6B;AAC3B,QAAMa,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,MAAIC,KAAK,GAAGF,MAAM,CAACG,eAAP,CAAuB,0BAA0BhB,KAAK,CAACG,OAAN,CAAcY,KAA/D,EAAsE,WAAtE,CAAZ;AACA,SAAOA,KAAK,CAACE,IAAN,CAAWC,WAAlB;AACD;;AAED,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAMC,GAAG,GAAG,kCAAkCD,KAAK,CAACpB,KAAN,CAAYsB,EAAZ,CAAeC,OAA7D;AACA,SACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,SAAS,MAA/C;AAAgD,IAAA,WAAW,EAAEC,KAAK,IAAIJ,KAAK,CAACK,eAAN,CAAsBD,KAAtB,EAA6BxB,KAA7B,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,YAAY,CAACQ,KAAK,CAACpB,KAAP,CAAjB,CADF,EACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcoB,KAAK,CAACpB,KAAN,CAAYG,OAAZ,CAAoBuB,YADlC,UACoD3B,WAAW,CAACqB,KAAK,CAACpB,KAAP,CAD/D,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAQ,IAAA,KAAK,EAAC,eAAd;AAA8B,IAAA,EAAE,EAAC,QAAjC;AAA0C,IAAA,IAAI,EAAC,WAA/C;AAA2D,IAAA,KAAK,EAAC,KAAjE;AAAuE,IAAA,MAAM,EAAC,KAA9E;AAAoF,IAAA,GAAG,EAAEqB,GAAzF;AAA8F,IAAA,WAAW,EAAC,GAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACpB,KAAN,CAAYG,OAAZ,CAAoBwB,WAAxB,CAPF,EAQGP,KAAK,CAACQ,gBAAN,GAAyB;AAAQ,IAAA,OAAO,EAAGJ,KAAD,IAAWJ,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACpB,KAA7B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAzB,GAAwH,EAR3H,EASGoB,KAAK,CAACS,qBAAN,GAA8B;AAAQ,IAAA,OAAO,EAAGL,KAAD,IAAWJ,KAAK,CAACS,qBAAN,CAA4BT,KAAK,CAACpB,KAAlC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA9B,GAAuI,EAT1I,CADF;AAaD,CAfD;;AAiBA,eAAemB,cAAf","sourcesContent":["import React from 'react'\nimport './VideoSearch.css';\n\nfunction displayDate(video){\n  const date = new Date(video.snippet.publishedAt)\n  const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n  const month = MONTHS[date.getMonth()]\n  const day = date.getDate()\n  const year = date.getFullYear()\n  return `${month} ${day}, ${year}`\n}\n\nfunction displayTitle(video) {\n  const parser = new DOMParser()\n  let title = parser.parseFromString('<!doctype html><body>' + video.snippet.title, 'text/html')\n  return title.body.textContent\n}\n\nconst DisplayPreview = (props) => {\n  const url = 'http://www.youtube.com/embed/' + props.video.id.videoId\n  return (\n    <div className=\"search-video-preview\" draggable onDragStart={event => props.handleDragStart(event, video)} >\n      <h4>{displayTitle(props.video)}</h4><br />\n      <h6>\n        Created by {props.video.snippet.channelTitle} on {displayDate(props.video)}\n      </h6>\n      <br/>\n      <iframe title=\"video preview\" id=\"player\" type=\"text/html\" width=\"360\" height=\"220\" src={url} frameBorder=\"0\"></iframe>\n      <p>{props.video.snippet.description}</p>\n      {props.addToProgression ? <button onClick={(event) => props.addToProgression(props.video)}>Add to Progression</button> : ''}\n      {props.removeFromProgression ? <button onClick={(event) => props.removeFromProgression(props.video)}>Remove from Progression</button> : ''}\n    </div>\n  )\n}\n\nexport default DisplayPreview\n"]},"metadata":{},"sourceType":"module"}