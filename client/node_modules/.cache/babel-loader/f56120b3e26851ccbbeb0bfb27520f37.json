{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer';\nimport NewKlassForm from './NewKlassForm';\n\nclass KlassesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      klasses: []\n    };\n\n    this.updateKlassId = id => {\n      this.setState({\n        klasses: [...this.state.klasses],\n        klassId: id\n      });\n    };\n\n    this.addKlass = klass => {\n      this.setState(_objectSpread({}, this.state, {\n        klasses: [...this.state.klasses, klass]\n      }));\n    };\n\n    this.removeKlass = klass => {\n      this.setState(_objectSpread({}, this.state, {\n        klasses: this.state.klasses.filter(kl => kl.id !== klass.id)\n      }));\n    };\n\n    this.addStudentToKlass = student => {\n      const newKlasses = [...this.state.klasses];\n      const index = newKlasses.findIndex(klass => klass.id === student.klass_id);\n      newKlasses[index].students.push(student);\n      this.setState(_objectSpread({}, this.state, {\n        klasses: [...newKlasses]\n      }));\n    };\n\n    this.removeStudentFromKlass = student => {\n      fetch(\"/klasses/\".concat(student.klass_id, \"/students/\").concat(student.id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(json => {\n        const newKlasses = [...this.state.klasses];\n        const index = newKlasses.findIndex(klass => klass.id === json.klass_id);\n        debugger;\n        newKlasses[index].students.splice(index, 1);\n        this.setState(_objectSpread({}, this.state, {\n          klasses: [...newKlasses]\n        }));\n      });\n    };\n\n    this.klassSelectDropdown = () => {\n      return React.createElement(\"div\", {\n        className: \"progression-menu-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.klasses.map((klass, index) => React.createElement(\"li\", {\n        key: index,\n        onClick: this.handleKlassClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/classes/\".concat(klass.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, klass.name))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/classes/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"New Class\"))));\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/klasses\").then(resp => resp.json()).then(json => {\n      this.setState({\n        klasses: [...json]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.klassSelectDropdown(), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/new\"),\n      render: () => React.createElement(NewKlassForm, Object.assign({}, this.props, {\n        addKlass: this.addKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      render: routerProps => React.createElement(ShowKlassContainer, Object.assign({}, routerProps, {\n        addStudentToKlass: this.addStudentToKlass,\n        removeStudentFromKlass: this.removeStudentFromKlass,\n        removeKlass: this.removeKlass,\n        klasses: this.state.klasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })),\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default KlassesContainer;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js"],"names":["React","Component","Route","NavLink","Switch","ShowKlassContainer","NewKlassForm","KlassesContainer","state","klasses","updateKlassId","id","setState","klassId","addKlass","klass","removeKlass","filter","kl","addStudentToKlass","student","newKlasses","index","findIndex","klass_id","students","push","removeStudentFromKlass","fetch","method","headers","then","resp","json","splice","klassSelectDropdown","map","handleKlassClick","name","componentDidMount","render","props","match","url","routerProps","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer'\nimport NewKlassForm from './NewKlassForm'\n\nclass KlassesContainer extends Component {\n  state = {\n    klasses: []\n  }\n\n  componentDidMount(){\n    fetch(`/klasses`)\n      .then(resp => resp.json())\n      .then(json => {\n        this.setState({\n          klasses: [...json]\n        })\n      })\n  }\n\n  updateKlassId = (id) => {\n    this.setState({\n      klasses: [...this.state.klasses],\n      klassId: id\n    })\n  }\n\n  addKlass = (klass) => {\n    this.setState({\n      ...this.state,\n      klasses: [\n        ...this.state.klasses,\n        klass\n      ]\n    })\n  }\n\n  removeKlass = (klass) => {\n    this.setState({\n      ...this.state,\n      klasses: this.state.klasses.filter(kl => kl.id !== klass.id)\n    })\n  }\n\n  addStudentToKlass = (student) => {\n    const newKlasses = [...this.state.klasses]\n    const index = newKlasses.findIndex(klass => klass.id === student.klass_id)\n    newKlasses[index].students.push(student)\n\n    this.setState({\n      ...this.state,\n      klasses: [\n        ...newKlasses,\n      ]\n    })\n  }\n\n  removeStudentFromKlass = (student) => {\n\n    fetch(`/klasses/${student.klass_id}/students/${student.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        const newKlasses = [...this.state.klasses]\n        const index = newKlasses.findIndex(klass => klass.id === json.klass_id)\n\n        debugger\n\n        newKlasses[index].students.splice(index, 1)\n\n        this.setState({\n          ...this.state,\n          klasses: [\n            ...newKlasses,\n          ]\n        })\n      })\n\n\n\n  }\n\n  klassSelectDropdown = () => {\n    return (\n      <div className=\"progression-menu-bar\">\n        <ul>\n          {this.state.klasses.map((klass, index) => (\n            <li key={index} onClick={this.handleKlassClick}>\n              {<NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>}\n            </li>\n          ))}\n            <li>{<NavLink to={`/classes/new`}>New Class</NavLink>}</li>\n        </ul>\n      </div>\n    )\n\n  }\n\n  render() {\n    return (\n      <div>\n        {this.klassSelectDropdown()}\n        <Switch>\n          <Route exact path={`${this.props.match.url}/new`} render={() => <NewKlassForm {...this.props} addKlass={this.addKlass} />} />\n          <Route exact path={`${this.props.match.url}/:id`} render={(routerProps) => <ShowKlassContainer {...routerProps} addStudentToKlass={this.addStudentToKlass} removeStudentFromKlass={this.removeStudentFromKlass} removeKlass={this.removeKlass} klasses={this.state.klasses} />} key={Math.random()} />\n        </Switch>\n      </div>\n    )\n  }\n\n}\n\nexport default KlassesContainer\n"]},"metadata":{},"sourceType":"module"}