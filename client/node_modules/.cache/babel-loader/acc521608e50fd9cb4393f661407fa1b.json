{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowProgression.js\";\nimport React, { Component } from 'react';\nimport StudentShowReflection from './StudentShowReflection';\nimport { connect } from 'react-redux';\n\nclass StudentShowProgression extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderProgressionItem = itemId => {\n      const _this$props = this.props,\n            videos = _this$props.videos,\n            reflections = _this$props.reflections,\n            progression = _this$props.progression;\n\n      if (itemId.includes(\"video\")) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        });\n      } else if (itemId.includes(\"reflection\")) {\n        return React.createElement(StudentShowReflection, {\n          student: student,\n          progression: progression,\n          reflection: reflections.byId[itemId],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderSubmitProgressionButton = () => {\n      const _this$props2 = this.props,\n            progression = _this$props2.progression,\n            handleProgressionSubmit = _this$props2.handleProgressionSubmit;\n      const reflectionsExist = progression.items.findIndex(item => item.includes(\"reflection\"));\n\n      if (reflectionsExist && progression.question1Answer || reflectionsExist === -1) {\n        return React.createElement(\"div\", {\n          className: \"submit-progression\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: e => handleProgressionSubmit(progression),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Submit Progression\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"submit-progression gray-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Submit Progression\"), React.createElement(\"span\", {\n          className: \"tooltiptext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Save a Reflection before submitting\"));\n      }\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          progression = _this$props3.progression,\n          itemIndex = _this$props3.itemIndex;\n\n    if (progression && itemIndex) {\n      return React.createElement(\"div\", {\n        className: \"myprogression \".concat(progression.color, \" \").concat(progression.color, \"-border\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"student-show-progression-title \".concat(progression.color, \"-title\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, progression.name), React.createElement(\"div\", {\n        className: \"nav-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.renderSubmitProgressionButton()), this.renderProgressionItem(progression.items[itemIndex]));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections,\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowProgression);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowProgression.js"],"names":["React","Component","StudentShowReflection","connect","StudentShowProgression","renderProgressionItem","itemId","props","videos","reflections","progression","includes","student","byId","renderSubmitProgressionButton","handleProgressionSubmit","reflectionsExist","items","findIndex","item","question1Answer","e","render","itemIndex","color","name","mapStateToProps","state","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentShowReflection from './StudentShowReflection'\nimport { connect } from 'react-redux'\n\nclass StudentShowProgression extends Component{\n  renderProgressionItem = (itemId) => {\n    const { videos, reflections, progression } = this.props\n    if (itemId.includes(\"video\")){\n      return <div></div>\n    } else if (itemId.includes(\"reflection\")){\n      return <StudentShowReflection\n              student={student}\n              progression={progression}\n              reflection={reflections.byId[itemId]} />\n    }\n  }\n\n  renderSubmitProgressionButton = () => {\n    const { progression, handleProgressionSubmit } = this.props\n    const reflectionsExist = progression.items.findIndex(item => item.includes(\"reflection\"))\n    if ((reflectionsExist && progression.question1Answer) || reflectionsExist === -1 ){\n      return (\n        <div className=\"submit-progression\">\n          <button onClick={e => handleProgressionSubmit(progression)}>Submit Progression</button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"submit-progression gray-button\">\n          <button>Submit Progression\n          </button>\n          <span className=\"tooltiptext\">Save a Reflection before submitting</span>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    const { progression, itemIndex } = this.props\n    if (progression && itemIndex) {\n      return (\n        <div className={`myprogression ${progression.color} ${progression.color}-border`}>\n          <div className={`student-show-progression-title ${progression.color}-title`}>\n            {progression.name}\n          </div>\n          <div className=\"nav-buttons\">\n            {this.renderSubmitProgressionButton()}\n          </div>\n          { this.renderProgressionItem(progression.items[itemIndex]) }\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections,\n    currentUser: state.currentUser\n  }\n}\n\n\nexport default connect(mapStateToProps, null)(StudentShowProgression)\n"]},"metadata":{},"sourceType":"module"}