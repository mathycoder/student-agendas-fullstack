{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowProgression.js\";\nimport React, { Component } from 'react';\nimport MyProgressionVideo from '../../agendas/MyProgressionVideo';\nimport MyProgressionReflection from '../../agendas/MyProgressionReflection';\nimport { connect } from 'react-redux';\n\nclass StudentShowProgression extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemIndex: undefined\n    };\n\n    this.renderProgressionItem = itemId => {\n      const _this$props = this.props,\n            videos = _this$props.videos,\n            reflections = _this$props.reflections,\n            progression = _this$props.progression;\n\n      if (itemId.includes(\"video\")) {\n        return React.createElement(MyProgressionVideo, {\n          video: videos.byId[itemId],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else if (itemId.includes(\"reflection\")) {\n        return React.createElement(MyProgressionReflection, {\n          progression: progression,\n          reflection: reflections.byId[itemId],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderSubmitProgressionButton = () => {\n      const _this$props2 = this.props,\n            progression = _this$props2.progression,\n            handleProgressionSubmit = _this$props2.handleProgressionSubmit;\n      const reflectionsExist = progression.items.findIndex(item => item.includes(\"reflection\"));\n\n      if (reflectionsExist && progression.question1Answer || reflectionsExist === -1) {\n        return React.createElement(\"div\", {\n          className: \"submit-progression\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: e => handleProgressionSubmit(progression),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Submit Progression\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"submit-progression gray-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Submit Progression\"), React.createElement(\"span\", {\n          className: \"tooltiptext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Save a Reflection before submitting\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    const progression = this.props.progression;\n  }\n\n  render() {\n    const progression = this.props.progression;\n    const itemIndex = this.state.itemIndex;\n\n    if (progression) {\n      return React.createElement(\"div\", {\n        className: \"myprogression \".concat(progression.color, \" \").concat(progression.color, \"-border\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"student-show-progression-title \".concat(progression.color, \"-title\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, progression.name), React.createElement(\"div\", {\n        className: \"nav-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderSubmitProgressionButton()), this.renderProgressionItem(progression.items[itemIndex]));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections,\n    currentUser: state.currentUser\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowProgression);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowProgression.js"],"names":["React","Component","MyProgressionVideo","MyProgressionReflection","connect","StudentShowProgression","state","itemIndex","undefined","renderProgressionItem","itemId","props","videos","reflections","progression","includes","byId","renderSubmitProgressionButton","handleProgressionSubmit","reflectionsExist","items","findIndex","item","question1Answer","e","componentDidMount","render","color","name","mapStateToProps","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MyProgressionVideo from '../../agendas/MyProgressionVideo'\nimport MyProgressionReflection from '../../agendas/MyProgressionReflection'\nimport { connect } from 'react-redux'\n\nclass StudentShowProgression extends Component{\n  state = {\n    itemIndex: undefined\n  }\n\n  componentDidMount(){\n    const { progression } = this.props\n\n  }\n\n  renderProgressionItem = (itemId) => {\n    const { videos, reflections, progression } = this.props\n    if (itemId.includes(\"video\")){\n      return <MyProgressionVideo video={videos.byId[itemId]} />\n    } else if (itemId.includes(\"reflection\")){\n      return <MyProgressionReflection\n              progression={progression}\n              reflection={reflections.byId[itemId]} />\n    }\n  }\n\n  renderSubmitProgressionButton = () => {\n    const { progression, handleProgressionSubmit } = this.props\n    const reflectionsExist = progression.items.findIndex(item => item.includes(\"reflection\"))\n    if ((reflectionsExist && progression.question1Answer) || reflectionsExist === -1 ){\n      return (\n        <div className=\"submit-progression\">\n          <button onClick={e => handleProgressionSubmit(progression)}>Submit Progression</button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"submit-progression gray-button\">\n          <button>Submit Progression\n          </button>\n          <span className=\"tooltiptext\">Save a Reflection before submitting</span>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    const { progression } = this.props\n    const { itemIndex } = this.state\n    if (progression) {\n      return (\n        <div className={`myprogression ${progression.color} ${progression.color}-border`}>\n          <div className={`student-show-progression-title ${progression.color}-title`}>\n            {progression.name}\n          </div>\n          <div className=\"nav-buttons\">\n            {this.renderSubmitProgressionButton()}\n          </div>\n          { this.renderProgressionItem(progression.items[itemIndex]) }\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections,\n    currentUser: state.currentUser\n  }\n}\n\n\nexport default connect(mapStateToProps, null)(StudentShowProgression)\n"]},"metadata":{},"sourceType":"module"}