{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n});\nexport default studentReducer;\n\nfunction studentsById(state = {}, action) {\n  switch (action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENTS':\n      const normalizedObject = {};\n      action.students.forEach(student => {\n        normalizedObject[\"student\".concat(student.id)] = student;\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = \"student\".concat(action.student.id);\n      return _objectSpread({}, state, {\n        [newStudentId]: action.student\n      });\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      debugger;\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}\n\nfunction allStudents(state = [], action) {\n  switch (action.type) {\n    case 'ADD_STUDENTS':\n      return [...action.students.map(student => \"student\".concat(student.id))];\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = \"student\".concat(action.student.id);\n      return [...state, studentId];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/studentReducer.js"],"names":["combineReducers","studentReducer","byId","studentsById","allIds","allStudents","state","action","type","normalizedObject","students","forEach","student","id","newStudentId","map","studentId"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,cAAc,GAAGD,eAAe,CAAC;AACrCE,EAAAA,IAAI,EAAEC,YAD+B;AAErCC,EAAAA,MAAM,EAAEC;AAF6B,CAAD,CAAtC;AAKA,eAAeJ,cAAf;;AAEA,SAASE,YAAT,CAAsBG,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACxC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,+BAAL;AACE,+BACKF,KADL;;AAIF,SAAK,cAAL;AACE,YAAMG,gBAAgB,GAAG,EAAzB;AACAF,MAAAA,MAAM,CAACG,QAAP,CAAgBC,OAAhB,CAAwBC,OAAO,IAAI;AACjCH,QAAAA,gBAAgB,kBAAWG,OAAO,CAACC,EAAnB,EAAhB,GAA2CD,OAA3C;AACD,OAFD;AAIA,+BACKH,gBADL;;AAIF,SAAK,uCAAL;AACE,+BACKH,KADL;;AAIF,SAAK,sBAAL;AACE,YAAMQ,YAAY,oBAAaP,MAAM,CAACK,OAAP,CAAeC,EAA5B,CAAlB;AAEA,+BACKP,KADL;AAEE,SAACQ,YAAD,GAAgBP,MAAM,CAACK;AAFzB;;AAKF,SAAK,2CAAL;AACE,+BACKN,KADL;;AAIF,SAAK,2BAAL;AACE;AAEA,+BACKA,KADL;;AAIF;AACE,aAAOA,KAAP;AA1CJ;AA4CD;;AAGD,SAASD,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAEvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,aAAO,CACL,GAAGD,MAAM,CAACG,QAAP,CAAgBK,GAAhB,CAAoBH,OAAO,qBAAcA,OAAO,CAACC,EAAtB,CAA3B,CADE,CAAP;;AAIF,SAAK,sBAAL;AACE,YAAMG,SAAS,oBAAaT,MAAM,CAACK,OAAP,CAAeC,EAA5B,CAAf;AACA,aAAO,CAAC,GAAGP,KAAJ,EAAWU,SAAX,CAAP;;AAEF;AACE,aAAOV,KAAP;AAXJ;AAaD","sourcesContent":["import { combineReducers } from 'redux'\n\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n})\n\nexport default studentReducer\n\nfunction studentsById(state = {}, action) {\n  switch(action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENTS':\n      const normalizedObject = {}\n      action.students.forEach(student => {\n        normalizedObject[`student${student.id}`] = student\n      })\n\n      return {\n        ...normalizedObject\n      }\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = `student${action.student.id}`\n\n      return {\n        ...state,\n        [newStudentId]: action.student\n      }\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      debugger\n\n      return {\n        ...state\n      }\n\n    default:\n      return state\n  }\n}\n\n\nfunction allStudents(state = [], action) {\n\n  switch(action.type) {\n    case 'ADD_STUDENTS':\n      return [\n        ...action.students.map(student => `student${student.id}`)\n      ]\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = `student${action.student.id}`\n      return [...state, studentId]\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}