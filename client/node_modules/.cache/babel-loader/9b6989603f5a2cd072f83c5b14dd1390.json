{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/IndexProgressionsContainer.js\";\nimport React, { Component } from 'react';\nimport IndexProgression from './IndexProgression';\nimport { deleteProgression } from '../../actions/progressionActions';\nimport { connect } from 'react-redux';\n\nclass IndexProgressionsContainer extends Component {\n  render() {\n    const _this$props = this.props,\n          progressions = _this$props.progressions,\n          videos = _this$props.videos,\n          history = _this$props.history,\n          deleteProgression = _this$props.deleteProgression;\n\n    if (videos.allIds.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progressions-index-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, progressions.allIds.map((progressionId, index) => {\n        const progression = progressions.byId[progressionId];\n        return React.createElement(IndexProgression, {\n          key: index,\n          progression: progression,\n          videos: videos,\n          history: history,\n          deleteProgression: deleteProgression,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      })));\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteProgression: progression => dispatch(deleteProgression(progression))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/IndexProgressionsContainer.js"],"names":["React","Component","IndexProgression","deleteProgression","connect","IndexProgressionsContainer","render","props","progressions","videos","history","allIds","length","map","progressionId","index","progression","byId","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,0BAAN,SAAyCJ,SAAzC,CAAmD;AACjDK,EAAAA,MAAM,GAAE;AAAA,wBACuD,KAAKC,KAD5D;AAAA,UACEC,YADF,eACEA,YADF;AAAA,UACgBC,MADhB,eACgBA,MADhB;AAAA,UACwBC,OADxB,eACwBA,OADxB;AAAA,UACiCP,iBADjC,eACiCA,iBADjC;;AAEN,QAAIM,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AAC3B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,YAAY,CAACG,MAAb,CAAoBE,GAApB,CAAwB,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AACjD,cAAMC,WAAW,GAAGR,YAAY,CAACS,IAAb,CAAkBH,aAAlB,CAApB;AACA,eAAO,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEC,KAAvB;AAA8B,UAAA,WAAW,EAAEC,WAA3C;AAAwD,UAAA,MAAM,EAAEP,MAAhE;AAAwE,UAAA,OAAO,EAAEC,OAAjF;AAA0F,UAAA,iBAAiB,EAAEP,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHA,CADH,CADF,CADF;AAUD;AACF;;AAfgD;;AAkBnD,SAASe,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLhB,IAAAA,iBAAiB,EAAGa,WAAD,IAAiBG,QAAQ,CAAChB,iBAAiB,CAACa,WAAD,CAAlB;AADvC,GAAP;AAGD;;AAED,SAASI,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAO;AACLb,IAAAA,YAAY,EAAEa,KAAK,CAACb,YADf;AAELC,IAAAA,MAAM,EAAEY,KAAK,CAACZ;AAFT,GAAP;AAID;;AAED,eAAeL,OAAO,CAACgB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,0BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport IndexProgression from './IndexProgression'\nimport { deleteProgression } from '../../actions/progressionActions'\nimport { connect } from 'react-redux'\n\nclass IndexProgressionsContainer extends Component {\n  render(){\n    const { progressions, videos, history, deleteProgression } = this.props\n    if (videos.allIds.length > 0){\n      return (\n        <div>\n          <div className=\"progressions-index-container\">\n            {progressions.allIds.map((progressionId, index) => {\n              const progression = progressions.byId[progressionId]\n              return <IndexProgression key={index} progression={progression} videos={videos} history={history} deleteProgression={deleteProgression}/>\n            })}\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    deleteProgression: (progression) => dispatch(deleteProgression(progression))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer)\n"]},"metadata":{},"sourceType":"module"}