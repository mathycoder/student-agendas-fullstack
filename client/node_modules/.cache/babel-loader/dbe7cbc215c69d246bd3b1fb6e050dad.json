{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js\";\nimport React, { Component } from 'react';\nimport IndexProgression from './IndexProgression';\nimport { connect } from 'react-redux';\nimport { fetchProgressions, deleteProgression } from '../actions/progressionActions';\nimport { fetchVideos } from '../actions/videoActions';\n\nclass IndexProgressionsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchProgressions();\n    this.props.fetchVideos();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.videos);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"progressions-index-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.progressions.allIds.map((progressionId, index) => {\n      const progression = this.props.progressions.byId[progressionId];\n      return React.createElement(IndexProgression, {\n        key: index,\n        progression: progression,\n        history: this.props.history,\n        deleteProgression: this.props.deleteProgression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    deleteProgression: progression => dispatch(deleteProgression(progression)),\n    fetchVideos: () => dispatch(fetchVideos())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js"],"names":["React","Component","IndexProgression","connect","fetchProgressions","deleteProgression","fetchVideos","IndexProgressionsContainer","componentDidMount","props","componentDidUpdate","console","log","videos","render","progressions","allIds","map","progressionId","index","progression","byId","history","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,+BAArD;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,0BAAN,SAAyCN,SAAzC,CAAmD;AACjDO,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWL,iBAAX;AACA,SAAKK,KAAL,CAAWH,WAAX;AACD;;AAEDI,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,YAAX,CAAwBC,MAAxB,CAA+BC,GAA/B,CAAmC,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC5D,YAAMC,WAAW,GAAG,KAAKX,KAAL,CAAWM,YAAX,CAAwBM,IAAxB,CAA6BH,aAA7B,CAApB;AACA,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEC,KAAvB;AAA8B,QAAA,WAAW,EAAEC,WAA3C;AAAwD,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWa,OAA5E;AAAqF,QAAA,iBAAiB,EAAE,KAAKb,KAAL,CAAWJ,iBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHA,CADH,CADF;AAQD;;AAnBgD;;AAsBnD,SAASkB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLpB,IAAAA,iBAAiB,EAAE,MAAMoB,QAAQ,CAACpB,iBAAiB,EAAlB,CAD5B;AAELC,IAAAA,iBAAiB,EAAGe,WAAD,IAAiBI,QAAQ,CAACnB,iBAAiB,CAACe,WAAD,CAAlB,CAFvC;AAGLd,IAAAA,WAAW,EAAE,MAAMkB,QAAQ,CAAClB,WAAW,EAAZ;AAHtB,GAAP;AAKD;;AAED,SAASmB,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAO;AACLX,IAAAA,YAAY,EAAEW,KAAK,CAACX,YADf;AAELF,IAAAA,MAAM,EAAEa,KAAK,CAACb;AAFT,GAAP;AAID;;AAED,eAAeV,OAAO,CAACsB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ChB,0BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport IndexProgression from './IndexProgression'\nimport { connect } from 'react-redux'\nimport { fetchProgressions, deleteProgression } from '../actions/progressionActions'\nimport { fetchVideos } from '../actions/videoActions'\n\nclass IndexProgressionsContainer extends Component {\n  componentDidMount(){\n    this.props.fetchProgressions()\n    this.props.fetchVideos()\n  }\n\n  componentDidUpdate(){\n    console.log(this.props.videos)\n  }\n\n  render(){\n    return (\n      <div className=\"progressions-index-container\">\n        {this.props.progressions.allIds.map((progressionId, index) => {\n          const progression = this.props.progressions.byId[progressionId]\n          return <IndexProgression key={index} progression={progression} history={this.props.history} deleteProgression={this.props.deleteProgression}/>\n        })}\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    deleteProgression: (progression) => dispatch(deleteProgression(progression)),\n    fetchVideos: () => dispatch(fetchVideos())\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer)\n"]},"metadata":{},"sourceType":"module"}