{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/StudentsContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Student from './Student';\nimport './student.css';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../progressions/helpers/getStudentProgressions';\n\nclass StudentContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStudentProgressions = student => {\n      const _this$props = this.props,\n            studentProgressions = _this$props.studentProgressions,\n            progressions = _this$props.progressions;\n\n      if (progressions.allIds.length > 0) {\n        const myStudentProgressionIds = studentProgressions.allIds.filter(spId => {\n          const studentProgression = studentProgressions.byId[spId];\n          return studentProgression.studentId === \"student\".concat(student.id);\n        });\n        const myStudentProgressions = myStudentProgressionIds.map(stPrId => {\n          return studentProgressions.byId[stPrId];\n        });\n        const myOrderedStudentProgressions = myStudentProgressions.sort((a, b) => a.agendaIndex - b.agendaIndex);\n        const myProgressions = myOrderedStudentProgressions.map(sp => {\n          const prog = _objectSpread({}, progressions.byId[sp.progressionId]);\n\n          prog.submitted = sp.submitted;\n          prog.createdAt = this.formatDate(sp.createdAt);\n          prog.updatedAt = this.formatDate(sp.updatedAt);\n          prog.question1Answer = sp.question1Answer;\n          return prog;\n        });\n        return myProgressions;\n      } else {\n        return [];\n      }\n    };\n\n    this.formatDate = rawDate => {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      const date = new Date(rawDate);\n      return \"\".concat(monthNames[date.getMonth()], \" \").concat(date.getDate(), \", \").concat(date.getFullYear());\n    };\n\n    this.displayStudents = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            klass = _this$props2.klass,\n            handleDragOver = _this$props2.handleDragOver,\n            handleDragLeave = _this$props2.handleDragLeave,\n            handleDragDrop = _this$props2.handleDragDrop;\n      return students.allIds.map((stId, index) => {\n        const student = students.byId[stId];\n        return React.createElement(Student, {\n          key: index,\n          student: student,\n          klass: klass,\n          progressions: this.getStudentProgressions(student),\n          handleDragOver: handleDragOver,\n          handleDragLeave: handleDragLeave,\n          handleDragDrop: handleDragDrop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"student-agendas \".concat(this.props.showProgressions ? '' : 'slide-width'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.students ? this.displayStudents() : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/StudentsContainer.js"],"names":["React","Component","Student","connect","getStudentProgressions","StudentContainer","student","props","studentProgressions","progressions","allIds","length","myStudentProgressionIds","filter","spId","studentProgression","byId","studentId","id","myStudentProgressions","map","stPrId","myOrderedStudentProgressions","sort","a","b","agendaIndex","myProgressions","sp","prog","progressionId","submitted","createdAt","formatDate","updatedAt","question1Answer","rawDate","monthNames","date","Date","getMonth","getDate","getFullYear","displayStudents","students","klass","handleDragOver","handleDragLeave","handleDragDrop","stId","index","render","showProgressions","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Student from './Student'\nimport './student.css'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../progressions/helpers/getStudentProgressions'\n\nclass StudentContainer extends Component {\n  getStudentProgressions = (student) => {\n    const { studentProgressions, progressions } = this.props\n    if (progressions.allIds.length > 0){\n      const myStudentProgressionIds = studentProgressions.allIds.filter(spId => {\n        const studentProgression = studentProgressions.byId[spId]\n        return studentProgression.studentId === `student${student.id}`\n      })\n      const myStudentProgressions = myStudentProgressionIds.map(stPrId => {\n        return studentProgressions.byId[stPrId]\n      })\n      const myOrderedStudentProgressions = myStudentProgressions.sort((a,b) => a.agendaIndex - b.agendaIndex)\n      const myProgressions = myOrderedStudentProgressions.map(sp => {\n        const prog = {...progressions.byId[sp.progressionId]}\n        prog.submitted = sp.submitted\n        prog.createdAt = this.formatDate(sp.createdAt)\n        prog.updatedAt = this.formatDate(sp.updatedAt)\n        prog.question1Answer = sp.question1Answer\n        return prog\n      })\n      return myProgressions\n    } else {\n      return []\n    }\n  }\n\n  formatDate = (rawDate) => {\n    const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\",\n    \"Apr\", \"May\", \"Jun\", \"Jul\",\n    \"Aug\", \"Sep\", \"Oct\",\n    \"Nov\", \"Dec\"]\n    const date = new Date(rawDate)\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\n  }\n\n  displayStudents = () => {\n    const { students, klass, handleDragOver, handleDragLeave, handleDragDrop } = this.props\n    return students.allIds.map((stId, index) => {\n      const student = students.byId[stId]\n      return (\n        <Student\n          key={index}\n          student={student}\n          klass={klass}\n          progressions={this.getStudentProgressions(student)}\n          handleDragOver={handleDragOver}\n          handleDragLeave={handleDragLeave}\n          handleDragDrop={handleDragDrop} />\n    )})\n  }\n\n\n  render(){\n    return (\n      <div className={`student-agendas ${this.props.showProgressions ? '' :'slide-width'}`}>\n        {this.props.students ? this.displayStudents() : ''}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentContainer)\n"]},"metadata":{},"sourceType":"module"}