{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer';\nimport NewKlassForm from './NewKlassForm';\nimport { connect } from 'react-redux';\nimport { fetchKlasses } from '../actions/fetchKlasses';\nimport { addKlass } from '../actions/klassActions';\n\nclass KlassesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.klassSelectDropdown = () => {\n      return React.createElement(\"div\", {\n        className: \"progression-menu-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.klasses.allIds.map((klassId, index) => {\n        const klass = this.props.klasses.byId[klassId];\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, klass.name));\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/classes/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"New Class\"))));\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchKlasses();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.klasses);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.klassSelectDropdown(), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/new\"),\n      render: () => React.createElement(NewKlassForm, Object.assign({}, this.props, {\n        addKlass: this.props.addKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      render: routerProps => React.createElement(ShowKlassContainer, Object.assign({}, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    addKlass: klass => dispatch(addKlass(klass))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/klasses/KlassesContainer.js"],"names":["React","Component","Route","NavLink","Switch","ShowKlassContainer","NewKlassForm","connect","fetchKlasses","addKlass","KlassesContainer","klassSelectDropdown","props","klasses","allIds","map","klassId","index","klass","byId","id","name","componentDidMount","componentDidUpdate","console","log","render","match","url","routerProps","Math","random","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer'\nimport NewKlassForm from './NewKlassForm'\nimport { connect } from 'react-redux'\nimport { fetchKlasses } from '../actions/fetchKlasses'\nimport { addKlass } from '../actions/klassActions'\n\nclass KlassesContainer extends Component {\n  componentDidMount(){\n    this.props.fetchKlasses()\n  }\n\n  klassSelectDropdown = () => {\n    return (\n      <div className=\"progression-menu-bar\">\n        <ul>\n          {this.props.klasses.allIds.map((klassId, index) => {\n            const klass = this.props.klasses.byId[klassId]\n            return (\n              <li key={index}>\n                {<NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>}\n              </li>\n            )\n          })}\n            <li>{<NavLink to={`/classes/new`}>New Class</NavLink>}</li>\n        </ul>\n      </div>\n    )\n  }\n\n  componentDidUpdate(){\n    console.log(this.props.klasses)\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.klassSelectDropdown()}\n        <Switch>\n          <Route exact path={`${this.props.match.url}/new`} render={() => <NewKlassForm {...this.props} addKlass={this.props.addKlass} />} />\n          <Route exact path={`${this.props.match.url}/:id`} render={(routerProps) => <ShowKlassContainer {...routerProps} />} key={Math.random()} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    addKlass: (klass) => dispatch(addKlass(klass))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {klasses: state.klasses}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer)\n"]},"metadata":{},"sourceType":"module"}