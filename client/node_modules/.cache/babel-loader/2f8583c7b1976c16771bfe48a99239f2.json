{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StudentProgression from '../StudentProgression';\nimport PostItForm from './PostItForm';\nimport { connect } from 'react-redux';\nimport { updateStudentProgressionStatus } from '../../../actions/studentProgressionActions';\nimport DisplayColors from '../../helpers/DisplayColors';\nimport '../css/student-summary.css';\n\nclass StudentShowSummary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progression: null,\n      studentProgressionId: null,\n      editing: false\n    };\n\n    this.handleEditClick = (e, progression) => {\n      e.preventDefault();\n      this.setState(_objectSpread({}, this.state, {\n        editing: true,\n        studentProgressionId: progression.studentProgressionId,\n        progression: progression\n      }));\n    };\n\n    this.handleEditSubmit = (e, attributes) => {\n      const progression = this.state.progression;\n      const _this$props = this.props,\n            student = _this$props.student,\n            progressions = _this$props.progressions,\n            updateStudentProgressionStatus = _this$props.updateStudentProgressionStatus;\n      debugger;\n      updateStudentProgressionStatus(student, progression, attributes);\n      this.setState(_objectSpread({}, this.state, {\n        editing: false,\n        studentProgressionId: undefined\n      }));\n    };\n\n    this.renderProgressionRow = (progression, index) => {\n      const _this$props2 = this.props,\n            myAgenda = _this$props2.myAgenda,\n            students = _this$props2.students;\n      const _this$state = this.state,\n            editing = _this$state.editing,\n            studentProgressionId = _this$state.studentProgressionId;\n      const student = students.byId[\"student\".concat(progression.studentId)];\n\n      if (student) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"progression-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"summary-progression\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(StudentProgression, {\n          progression: progression,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"summary-dates\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"date-category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Assigned: \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, progression.createdAt), \" \"), React.createElement(\"div\", {\n          className: \"date-category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Completed: \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), \" \", React.createElement(\"div\", {\n          className: \"\".concat(progression.submittedAt === 'incomplete' ? 'incomplete' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, progression.submittedAt))))), React.createElement(\"div\", {\n          className: \"summary-reflection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, this.renderReflection(progression).question1)), React.createElement(\"div\", {\n          className: \"summary-reflection-answer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"answer-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, student.firstName, \" \", student.lastName), \"s Response: \"), progression.question1Answer ? \"\\\"\".concat(progression.question1Answer, \"\\\"\") : React.createElement(\"span\", {\n          className: \"incomplete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"incomplete\"))), React.createElement(\"div\", {\n          className: \"summary-reflection-comment \".concat(editing && progression.studentProgressionId === studentProgressionId ? '' : 'post-it'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, editing && progression.studentProgressionId === studentProgressionId ? React.createElement(PostItForm, {\n          comment: progression.question1Comment,\n          handleEditSubmit: this.handleEditSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, progression.question1Comment, !editing && progression.submitted && !myAgenda ? React.createElement(\"button\", {\n          className: \"edit-comment-button\",\n          onClick: e => this.handleEditClick(e, progression),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, progression.question1Comment ? 'Edit' : 'Add Feedback') : '')));\n      } else {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.sortedProgs = progressions => {\n      return progressions.sort((a, b) => {\n        const dateA = new Date(a.createdAt);\n        const dateB = new Date(b.createdAt);\n        return dateB - dateA;\n      });\n    };\n\n    this.renderReflection = progression => {\n      const reflections = this.props.reflections;\n      const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"));\n      const reflectionId = progression.items[reflectionIndex];\n      return reflections.byId[reflectionId];\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.progressions);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          student = _this$props3.student,\n          progressions = _this$props3.progressions,\n          currentUser = _this$props3.currentUser;\n    return React.createElement(\"div\", {\n      className: \"student-summary-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"All Progressions\"), React.createElement(DisplayColors, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"student-summary-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.sortedProgs(progressions).map((progression, index) => {\n      return this.renderProgressionRow(progression, index);\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateStudentProgressionStatus: (student, progression, status) => dispatch(updateStudentProgressionStatus(student, progression, status))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentShowSummary);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js"],"names":["React","Component","StudentProgression","PostItForm","connect","updateStudentProgressionStatus","DisplayColors","StudentShowSummary","state","progression","studentProgressionId","editing","handleEditClick","e","preventDefault","setState","handleEditSubmit","attributes","props","student","progressions","undefined","renderProgressionRow","index","myAgenda","students","byId","studentId","createdAt","submittedAt","renderReflection","question1","firstName","lastName","question1Answer","question1Comment","submitted","sortedProgs","sort","a","b","dateA","Date","dateB","reflections","reflectionIndex","items","findIndex","item","includes","reflectionId","componentDidMount","console","log","render","currentUser","map","mapStateToProps","mapDispatchToProps","dispatch","status"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,8BAAT,QAA+C,4CAA/C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,4BAAP;;AAEA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCO,KADyC,GACjC;AACNC,MAAAA,WAAW,EAAE,IADP;AAENC,MAAAA,oBAAoB,EAAE,IAFhB;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADiC;;AAAA,SAWzCC,eAXyC,GAWvB,CAACC,CAAD,EAAIJ,WAAJ,KAAoB;AACpCI,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,mBACK,KAAKP,KADV;AAEEG,QAAAA,OAAO,EAAE,IAFX;AAGED,QAAAA,oBAAoB,EAAED,WAAW,CAACC,oBAHpC;AAIED,QAAAA,WAAW,EAAEA;AAJf;AAMD,KAnBwC;;AAAA,SAqBzCO,gBArByC,GAqBtB,CAACH,CAAD,EAAII,UAAJ,KAAmB;AAAA,YAC5BR,WAD4B,GACZ,KAAKD,KADO,CAC5BC,WAD4B;AAAA,0BAE6B,KAAKS,KAFlC;AAAA,YAE5BC,OAF4B,eAE5BA,OAF4B;AAAA,YAEnBC,YAFmB,eAEnBA,YAFmB;AAAA,YAELf,8BAFK,eAELA,8BAFK;AAGpC;AACAA,MAAAA,8BAA8B,CAACc,OAAD,EAAUV,WAAV,EAAuBQ,UAAvB,CAA9B;AACA,WAAKF,QAAL,mBACK,KAAKP,KADV;AAEEG,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,oBAAoB,EAAEW;AAHxB;AAKD,KA/BwC;;AAAA,SAiCzCC,oBAjCyC,GAiClB,CAACb,WAAD,EAAcc,KAAd,KAAwB;AAAA,2BACd,KAAKL,KADS;AAAA,YACrCM,QADqC,gBACrCA,QADqC;AAAA,YAC3BC,QAD2B,gBAC3BA,QAD2B;AAAA,0BAEH,KAAKjB,KAFF;AAAA,YAErCG,OAFqC,eAErCA,OAFqC;AAAA,YAE5BD,oBAF4B,eAE5BA,oBAF4B;AAG7C,YAAMS,OAAO,GAAGM,QAAQ,CAACC,IAAT,kBAAwBjB,WAAW,CAACkB,SAApC,EAAhB;;AACA,UAAIR,OAAJ,EAAY;AACV,eACE;AAAK,UAAA,GAAG,EAAEI,KAAV;AAAiB,UAAA,SAAS,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,kBAAD;AAAoB,UAAA,WAAW,EAAEd,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzC,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,WAAW,CAACmB,SAArB,CAA9C,MADF,EAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADb,OACmB;AAAK,UAAA,SAAS,YAAKnB,WAAW,CAACoB,WAAZ,KAA4B,YAA5B,GAA2C,YAA3C,GAA0D,EAA/D,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASpB,WAAW,CAACoB,WAArB,CAAnF,CADnB,CAFF,CAFF,CADF,EAUE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKC,gBAAL,CAAsBrB,WAAtB,EAAmCsB,SAAvC,CADF,CAVF,EAaE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASZ,OAAO,CAACa,SAAjB,OAA6Bb,OAAO,CAACc,QAArC,CAA9B,iBAAH,EAA2GxB,WAAW,CAACyB,eAAZ,eAAkCzB,WAAW,CAACyB,eAA9C,UAAmE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA9K,CADF,CAbF,EAgBE;AAAK,UAAA,SAAS,uCAAgCvB,OAAO,IAAIF,WAAW,CAACC,oBAAZ,KAAqCA,oBAAhD,GAAuE,EAAvE,GAA4E,SAA5G,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,OAAO,IAAIF,WAAW,CAACC,oBAAZ,KAAqCA,oBAAhD,GACC,oBAAC,UAAD;AACE,UAAA,OAAO,EAAED,WAAW,CAAC0B,gBADvB;AAEE,UAAA,gBAAgB,EAAE,KAAKnB,gBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIP,WAAW,CAAC0B,gBAAhB,EAAkC,CAACxB,OAAD,IAAYF,WAAW,CAAC2B,SAAxB,IAAqC,CAACZ,QAAtC,GAAiD;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,OAAO,EAAEX,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,EAAwBJ,WAAxB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6FA,WAAW,CAAC0B,gBAAZ,GAA+B,MAA/B,GAAwC,cAArI,CAAjD,GAAiN,EAAnP,CALN,CAhBF,CADF;AA0BD,OA3BD,MA2BO;AACL,eAAO;AAAK,UAAA,GAAG,EAAEZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAnEwC;;AAAA,SAqEzCc,WArEyC,GAqE1BjB,YAAD,IAAkB;AAC9B,aAAOA,YAAY,CAACkB,IAAb,CAAkB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAChC,cAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASH,CAAC,CAACX,SAAX,CAAd;AACA,cAAMe,KAAK,GAAG,IAAID,IAAJ,CAASF,CAAC,CAACZ,SAAX,CAAd;AACA,eAAOe,KAAK,GAAGF,KAAf;AACD,OAJM,CAAP;AAKD,KA3EwC;;AAAA,SA6EzCX,gBA7EyC,GA6ErBrB,WAAD,IAAiB;AAAA,YAC1BmC,WAD0B,GACV,KAAK1B,KADK,CAC1B0B,WAD0B;AAElC,YAAMC,eAAe,GAAGpC,WAAW,CAACqC,KAAZ,CAAkBC,SAAlB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,YAAd,CAApC,CAAxB;AACA,YAAMC,YAAY,GAAGzC,WAAW,CAACqC,KAAZ,CAAkBD,eAAlB,CAArB;AACA,aAAOD,WAAW,CAAClB,IAAZ,CAAiBwB,YAAjB,CAAP;AACD,KAlFwC;AAAA;;AAOzCC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnC,KAAL,CAAWE,YAAvB;AACD;;AA2EDkC,EAAAA,MAAM,GAAE;AAAA,yBACyC,KAAKpC,KAD9C;AAAA,UACEC,OADF,gBACEA,OADF;AAAA,UACWC,YADX,gBACWA,YADX;AAAA,UACyBmC,WADzB,gBACyBA,WADzB;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,WAAL,CAAiBjB,YAAjB,EAA+BoC,GAA/B,CAAmC,CAAC/C,WAAD,EAAcc,KAAd,KAAwB;AAC1D,aAAO,KAAKD,oBAAL,CAA0Bb,WAA1B,EAAuCc,KAAvC,CAAP;AACD,KAFA,CADH,CALF,CADF;AAaD;;AAnGwC;;AAsG3C,SAASkC,eAAT,CAAyBjD,KAAzB,EAA+B;AAC7B,SAAO;AACLiB,IAAAA,QAAQ,EAAEjB,KAAK,CAACiB;AADX,GAAP;AAGD;;AAED,SAASiC,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACLtD,IAAAA,8BAA8B,EAAE,CAACc,OAAD,EAAUV,WAAV,EAAuBmD,MAAvB,KAAkCD,QAAQ,CAACtD,8BAA8B,CAACc,OAAD,EAAUV,WAAV,EAAuBmD,MAAvB,CAA/B;AADrE,GAAP;AAGD;;AAED,eAAexD,OAAO,CAACqD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnD,kBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport StudentProgression from '../StudentProgression'\nimport PostItForm from './PostItForm'\nimport { connect } from 'react-redux'\nimport { updateStudentProgressionStatus } from '../../../actions/studentProgressionActions'\nimport DisplayColors from '../../helpers/DisplayColors'\nimport '../css/student-summary.css'\n\nclass StudentShowSummary extends Component {\n  state = {\n    progression: null,\n    studentProgressionId: null,\n    editing: false\n  }\n\n  componentDidMount(){\n    console.log(this.props.progressions)\n  }\n\n  handleEditClick = (e, progression) => {\n    e.preventDefault()\n    this.setState({\n      ...this.state,\n      editing: true,\n      studentProgressionId: progression.studentProgressionId,\n      progression: progression\n    })\n  }\n\n  handleEditSubmit = (e, attributes) => {\n    const { progression } = this.state\n    const { student, progressions, updateStudentProgressionStatus} = this.props\n    debugger\n    updateStudentProgressionStatus(student, progression, attributes)\n    this.setState({\n      ...this.state,\n      editing: false,\n      studentProgressionId: undefined\n    })\n  }\n\n  renderProgressionRow = (progression, index) => {\n    const { myAgenda, students } = this.props\n    const { editing, studentProgressionId } = this.state\n    const student = students.byId[`student${progression.studentId}`]\n    if (student){\n      return (\n        <div key={index} className=\"progression-row\">\n          <div className=\"summary-progression\">\n            <StudentProgression progression={progression}/>\n            <div className=\"summary-dates\">\n              <div className=\"date-category\">Assigned: <br/><strong>{progression.createdAt}</strong> </div>\n              <div className=\"date-category\">\n                Completed: <br/> <div className={`${progression.submittedAt === 'incomplete' ? 'incomplete' : ''}`}><strong>{progression.submittedAt}</strong></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"summary-reflection\">\n            <p>{this.renderReflection(progression).question1}</p>\n          </div>\n          <div className=\"summary-reflection-answer\">\n            <p><div className=\"answer-title\"><strong>{student.firstName} {student.lastName}</strong>s Response: </div>{progression.question1Answer ? `\"${progression.question1Answer}\"` : <span className=\"incomplete\">incomplete</span>}</p>\n          </div>\n          <div className={`summary-reflection-comment ${editing && progression.studentProgressionId === studentProgressionId ? '' : 'post-it'}`}>\n            {editing && progression.studentProgressionId === studentProgressionId ?\n              <PostItForm\n                comment={progression.question1Comment}\n                handleEditSubmit={this.handleEditSubmit}/>\n              : <p>{progression.question1Comment}{!editing && progression.submitted && !myAgenda ? <button className=\"edit-comment-button\" onClick={e => this.handleEditClick(e, progression)}>{progression.question1Comment ? 'Edit' : 'Add Feedback'}</button> : ''}</p>}\n          </div>\n        </div>\n      )\n    } else {\n      return <div key={index}></div>\n    }\n  }\n\n  sortedProgs = (progressions) => {\n    return progressions.sort((a,b) => {\n      const dateA = new Date(a.createdAt)\n      const dateB = new Date(b.createdAt)\n      return dateB - dateA\n    })\n  }\n\n  renderReflection = (progression) => {\n    const { reflections } = this.props\n    const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"))\n    const reflectionId = progression.items[reflectionIndex]\n    return reflections.byId[reflectionId]\n  }\n\n  render(){\n    const { student, progressions, currentUser } = this.props\n    return (\n      <div className=\"student-summary-wrapper\">\n        <div className=\"title-heading\">\n          <h2>All Progressions</h2>\n          <DisplayColors />\n        </div>\n        <div className=\"student-summary-page\">\n          {this.sortedProgs(progressions).map((progression, index) => {\n            return this.renderProgressionRow(progression, index)\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    updateStudentProgressionStatus: (student, progression, status) => dispatch(updateStudentProgressionStatus(student, progression, status))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentShowSummary)\n"]},"metadata":{},"sourceType":"module"}