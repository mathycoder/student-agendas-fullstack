{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport CreateStudentForm from '../students/CreateStudentForm';\nimport StudentsContainer from '../students/StudentsContainer';\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer';\nimport { connect } from 'react-redux';\nimport { addStudents, addStudentToKlass, removeStudentFromKlass } from '../../actions/studentActions';\nimport { addStudentProgression } from '../../actions/studentProgressionActions';\nimport '../students/student.css';\n\nclass ShowKlassContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addingStudent: false,\n      editingStudents: false\n    };\n\n    this.handleAddStudent = () => {\n      this.setState(_objectSpread({}, this.state, {\n        addingStudent: !this.state.addingStudent\n      }));\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleStudentSubmit = (event, studentData) => {\n      event.preventDefault();\n      const _this$props = this.props,\n            match = _this$props.match,\n            addStudentToKlass = _this$props.addStudentToKlass;\n      const klassId = parseInt(match.params.id);\n      addStudentToKlass(klassId, studentData);\n      this.setState(_objectSpread({}, this.state, {\n        addingStudent: false\n      }));\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"#FFFF00\";\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n    };\n\n    this.handleDragStart = (event, progression) => {\n      let data = JSON.stringify(progression);\n      event.dataTransfer.setData(\"progression\", data);\n    };\n\n    this.handleDragDrop = event => {\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(240, 240, 240)\";\n      let progression = event.dataTransfer.getData(\"progression\");\n      progression = JSON.parse(progression);\n      const student = this.props.students.byId[\"student\".concat(event.currentTarget.dataset.studentId)];\n      const studentProgressions = this.props.studentProgressions;\n      const any = studentProgressions.allIds.filter(spId => {\n        const sp = studentProgressions.byId[spId];\n        return sp.studentId === \"student\".concat(student.id) && sp.progressionId === \"progression\".concat(progression.id);\n      });\n\n      if (any.length === 0) {\n        this.props.addStudentProgression(student, progression);\n      }\n    };\n\n    this.renderStudents = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            studentProgressions = _this$props2.studentProgressions,\n            progressions = _this$props2.progressions,\n            videos = _this$props2.videos,\n            match = _this$props2.match,\n            removeStudentFromKlass = _this$props2.removeStudentFromKlass;\n      return React.createElement(StudentsContainer, {\n        students: students,\n        studentProgressions: studentProgressions,\n        progressions: progressions,\n        videos: videos,\n        handleDragOver: this.handleDragOver,\n        handleDragLeave: this.handleDragLeave,\n        handleDragDrop: this.handleDragDrop,\n        removeStudentFromKlass: removeStudentFromKlass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    const klassId = this.props.match.params.id;\n    this.props.fetchStudents(klassId);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          klasses = _this$props3.klasses,\n          students = _this$props3.students,\n          progressions = _this$props3.progressions,\n          videos = _this$props3.videos,\n          match = _this$props3.match,\n          addStudentToKlass = _this$props3.addStudentToKlass,\n          removeStudentFromKlass = _this$props3.removeStudentFromKlass,\n          studentProgressions = _this$props3.studentProgressions;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n\n    if (klass) {\n      return React.createElement(\"div\", {\n        className: \"klass-show-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"klass-show-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, klass.name), React.createElement(\"button\", {\n        onClick: this.handleAddStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Add Student\"), React.createElement(\"button\", {\n        onClick: this.handleEditingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Edit Students\"), this.state.addingStudent ? React.createElement(CreateStudentForm, {\n        addStudentToKlass: addStudentToKlass,\n        handleStudentSubmit: this.handleStudentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : ''), this.renderStudents(), React.createElement(IndexProgressionsContainer, {\n        handleDragStart: this.handleDragStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId)),\n    addStudentToKlass: (klass, student) => dispatch(addStudentToKlass(klass, student)),\n    removeStudentFromKlass: student => dispatch(removeStudentFromKlass(student)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js"],"names":["React","Component","CreateStudentForm","StudentsContainer","IndexProgressionsContainer","connect","addStudents","addStudentToKlass","removeStudentFromKlass","addStudentProgression","ShowKlassContainer","state","addingStudent","editingStudents","handleAddStudent","setState","handleEditingStudents","handleStudentSubmit","event","studentData","preventDefault","props","match","klassId","parseInt","params","id","handleDragOver","agenda","currentTarget","closest","style","backgroundColor","handleDragLeave","handleDragStart","progression","data","JSON","stringify","dataTransfer","setData","handleDragDrop","getData","parse","student","students","byId","dataset","studentId","studentProgressions","any","allIds","filter","spId","sp","progressionId","length","renderStudents","progressions","videos","componentDidMount","fetchStudents","render","klasses","find","klass","name","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CreateStudentForm from '../students/CreateStudentForm'\nimport StudentsContainer from '../students/StudentsContainer'\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer'\nimport { connect } from 'react-redux'\nimport { addStudents, addStudentToKlass, removeStudentFromKlass } from '../../actions/studentActions'\nimport { addStudentProgression } from '../../actions/studentProgressionActions'\nimport '../students/student.css'\n\nclass ShowKlassContainer extends Component {\n  state = {\n    addingStudent: false,\n    editingStudents: false\n  }\n\n  componentDidMount(){\n    const klassId = this.props.match.params.id\n    this.props.fetchStudents(klassId)\n  }\n\n  handleAddStudent = () => {\n    this.setState({...this.state, addingStudent: !this.state.addingStudent})\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleStudentSubmit = (event, studentData) => {\n    event.preventDefault()\n    const { match, addStudentToKlass } = this.props\n    const klassId = parseInt(match.params.id)\n    addStudentToKlass(klassId, studentData)\n    this.setState({...this.state, addingStudent: false})\n  }\n\n  handleDragOver = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"#FFFF00\"\n  }\n\n  handleDragLeave = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n  }\n\n  handleDragStart = (event, progression) => {\n    let data = JSON.stringify(progression)\n    event.dataTransfer.setData(\"progression\", data)\n  }\n\n  handleDragDrop = (event) => {\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(240, 240, 240)\"\n    let progression = event.dataTransfer.getData(\"progression\")\n    progression = JSON.parse(progression)\n    const student = this.props.students.byId[`student${event.currentTarget.dataset.studentId}`]\n\n    const { studentProgressions } = this.props\n    const any = studentProgressions.allIds.filter(spId => {\n      const sp = studentProgressions.byId[spId]\n      return sp.studentId === `student${student.id}` && sp.progressionId === `progression${progression.id}`\n    })\n\n    if (any.length === 0){\n      this.props.addStudentProgression(student, progression)\n    }\n  }\n\n  renderStudents = () => {\n    const { students, studentProgressions, progressions, videos, match, removeStudentFromKlass } = this.props\n    return (\n      <StudentsContainer\n        students={students}\n        studentProgressions={studentProgressions}\n        progressions={progressions}\n        videos={videos}\n        handleDragOver={this.handleDragOver}\n        handleDragLeave={this.handleDragLeave}\n        handleDragDrop={this.handleDragDrop}\n        removeStudentFromKlass={removeStudentFromKlass} />\n    )\n  }\n\n  render(){\n    const { klasses, students, progressions, videos, match, addStudentToKlass, removeStudentFromKlass, studentProgressions } = this.props\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    if (klass) {\n      return (\n        <div className=\"klass-show-container\">\n          <div className=\"klass-show-title\">\n            <h1>{klass.name}</h1>\n            <button onClick={this.handleAddStudent}>Add Student</button>\n            <button onClick={this.handleEditingStudents}>Edit Students</button>\n            {this.state.addingStudent ? <CreateStudentForm addStudentToKlass={addStudentToKlass} handleStudentSubmit={this.handleStudentSubmit}/> : ''}\n          </div>\n\n          {this.renderStudents()}\n          <IndexProgressionsContainer handleDragStart={this.handleDragStart}/>\n        </div>\n      )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId)),\n    addStudentToKlass: (klass, student) => dispatch(addStudentToKlass(klass, student)),\n    removeStudentFromKlass: (student) => dispatch(removeStudentFromKlass(student)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer)\n"]},"metadata":{},"sourceType":"module"}