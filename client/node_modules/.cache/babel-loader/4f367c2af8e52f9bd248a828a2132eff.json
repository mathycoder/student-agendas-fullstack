{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst reflectionReducer = combineReducers({\n  byId: reflectionsById,\n  allIds: allReflections\n});\nexport default reflectionReducer;\n\nfunction reflectionsById(state = {}, action) {\n  switch (action.type) {\n    case 'START_ADDING_REFLECTIONS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_REFLECTIONS':\n      const normalizedObject = {};\n      action.reflections.forEach(reflection => {\n        normalizedObject[\"reflection\".concat(reflection.id)] = reflection;\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'ADD_PROGRESSION':\n      const normalizedObj = {};\n      action.progression.items.reflections.forEach(reflection => {\n        normalizedObj[\"reflection\".concat(reflection.id)] = reflection;\n      });\n      return _objectSpread({}, state, {}, normalizedObj);\n\n    default:\n      return state;\n  }\n}\n\nfunction allReflections(state = [], action) {\n  switch (action.type) {\n    case 'ADD_REFLECTIONS':\n      return ['reflectionFiller', ...action.reflections.map(reflection => \"reflection\".concat(reflection.id))];\n\n    case 'ADD_PROGRESSION':\n      return [...state, ...action.progression.items.reflections.map(video => \"reflection\".concat(reflection.id))];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/reflectionReducer.js"],"names":["combineReducers","reflectionReducer","byId","reflectionsById","allIds","allReflections","state","action","type","normalizedObject","reflections","forEach","reflection","id","normalizedObj","progression","items","map","video"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,iBAAiB,GAAGD,eAAe,CAAC;AACxCE,EAAAA,IAAI,EAAEC,eADkC;AAExCC,EAAAA,MAAM,EAAEC;AAFgC,CAAD,CAAzC;AAKA,eAAeJ,iBAAf;;AAEA,SAASE,eAAT,CAAyBG,KAAK,GAAG,EAAjC,EAAqCC,MAArC,EAA6C;AAC3C,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,kCAAL;AACE,+BAAWF,KAAX;;AAEF,SAAK,iBAAL;AACE,YAAMG,gBAAgB,GAAG,EAAzB;AACAF,MAAAA,MAAM,CAACG,WAAP,CAAmBC,OAAnB,CAA2BC,UAAU,IAAI;AACvCH,QAAAA,gBAAgB,qBAAcG,UAAU,CAACC,EAAzB,EAAhB,GAAiDD,UAAjD;AACD,OAFD;AAGA,+BACKH,gBADL;;AAIF,SAAK,iBAAL;AACE,YAAMK,aAAa,GAAG,EAAtB;AACAP,MAAAA,MAAM,CAACQ,WAAP,CAAmBC,KAAnB,CAAyBN,WAAzB,CAAqCC,OAArC,CAA6CC,UAAU,IAAI;AACzDE,QAAAA,aAAa,qBAAcF,UAAU,CAACC,EAAzB,EAAb,GAA8CD,UAA9C;AACD,OAFD;AAIA,+BACKN,KADL,MAEKQ,aAFL;;AAKF;AACE,aAAOR,KAAP;AA1BJ;AA4BD;;AAED,SAASD,cAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoCC,MAApC,EAA4C;AAE1C,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,iBAAL;AACE,aAAO,CACL,kBADK,EACe,GAAGD,MAAM,CAACG,WAAP,CAAmBO,GAAnB,CAAuBL,UAAU,wBAAiBA,UAAU,CAACC,EAA5B,CAAjC,CADlB,CAAP;;AAIF,SAAK,iBAAL;AAEE,aAAO,CACL,GAAGP,KADE,EACK,GAAGC,MAAM,CAACQ,WAAP,CAAmBC,KAAnB,CAAyBN,WAAzB,CAAqCO,GAArC,CAAyCC,KAAK,wBAAiBN,UAAU,CAACC,EAA5B,CAA9C,CADR,CAAP;;AAIF;AACE,aAAOP,KAAP;AAdJ;AAgBD","sourcesContent":["import { combineReducers } from 'redux'\n\nconst reflectionReducer = combineReducers({\n  byId: reflectionsById,\n  allIds: allReflections\n})\n\nexport default reflectionReducer\n\nfunction reflectionsById(state = {}, action) {\n  switch(action.type) {\n\n    case 'START_ADDING_REFLECTIONS_REQUEST':\n      return {...state}\n\n    case 'ADD_REFLECTIONS':\n      const normalizedObject = {}\n      action.reflections.forEach(reflection => {\n        normalizedObject[`reflection${reflection.id}`] = reflection\n      })\n      return {\n        ...normalizedObject\n      }\n\n    case 'ADD_PROGRESSION':\n      const normalizedObj = {}\n      action.progression.items.reflections.forEach(reflection => {\n        normalizedObj[`reflection${reflection.id}`] = reflection\n      })\n\n      return {\n        ...state,\n        ...normalizedObj\n      }\n\n    default:\n      return state\n  }\n}\n\nfunction allReflections(state = [], action) {\n\n  switch(action.type) {\n\n    case 'ADD_REFLECTIONS':\n      return [\n        'reflectionFiller', ...action.reflections.map(reflection => `reflection${reflection.id}`)\n      ]\n\n    case 'ADD_PROGRESSION':\n\n      return [\n        ...state, ...action.progression.items.reflections.map(video => `reflection${reflection.id}`)\n      ]\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}