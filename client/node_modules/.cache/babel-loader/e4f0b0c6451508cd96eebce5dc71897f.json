{"ast":null,"code":"export function fetchProgressions() {\n  return dispatch => {\n    dispatch({\n      type: 'START_ADDING_PROGRESSIONS_REQUEST'\n    });\n    fetch(\"/progressions\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(progressions => dispatch({\n      type: 'ADD_PROGRESSIONS',\n      progressions\n    }));\n  };\n}\nexport function addProgression(progression) {\n  return dispatch => {\n    dispatch({\n      type: 'START_ADDING_PROGRESSION_REQUEST'\n    });\n    fetch(\"/progressions\", {\n      method: \"POST\",\n      body: JSON.stringify(progression),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(progression => {\n      dispatch({\n        type: 'ADD_PROGRESSION',\n        progression\n      });\n    });\n  };\n}\nexport function editProgression(progression) {\n  return dispatch => {\n    dispatch({\n      type: 'START_EDITING_PROGRESSION_REQUEST'\n    });\n    fetch(\"/progressions/\".concat(progression.progression.id), {\n      method: 'PATCH',\n      body: JSON.stringify(progression),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(progression => {\n      dispatch({\n        type: 'EDIT_PROGRESSION',\n        progression\n      });\n    });\n  };\n}\nexport function deleteProgression(progression) {\n  return dispatch => {\n    dispatch({\n      type: 'START_DELETING_PROGRESSION_REQUEST'\n    });\n    fetch(\"/progressions/\".concat(progression.id), {\n      method: 'DELETE'\n    }).then(resp => resp.json()).then(progression => dispatch({\n      type: 'DELETE_PROGRESSION',\n      progression\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/actions/progressionActions.js"],"names":["fetchProgressions","dispatch","type","fetch","method","credentials","headers","then","resp","json","progressions","addProgression","progression","body","JSON","stringify","editProgression","id","deleteProgression"],"mappings":"AAAA,OAAO,SAASA,iBAAT,GAA6B;AAClC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,kBAAkB;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,WAAW,EAAE,SAFQ;AAGrBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHY,KAAlB,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPhB,EAQGF,IARH,CAQQG,YAAY,IAAIT,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BQ,MAAAA;AAA5B,KAAD,CARhC;AASD,GAXD;AAYD;AAED,OAAO,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,kBAAkB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,WAAf,CAFe;AAGrBN,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHY,KAAlB,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPhB,EAQGF,IARH,CAQQK,WAAW,IAAI;AACnBX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,iBAAR;AAA2BU,QAAAA;AAA3B,OAAD,CAAR;AACD,KAVH;AAYD,GAdD;AAeD;AAGD,OAAO,SAASI,eAAT,CAAyBJ,WAAzB,EAAsC;AAC3C,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,yBAAkBS,WAAW,CAACA,WAAZ,CAAwBK,EAA1C,GAAgD;AACnDb,MAAAA,MAAM,EAAE,OAD2C;AAEnDS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,WAAf,CAF6C;AAGnDN,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH0C,KAAhD,CAAL,CAOGC,IAPH,CAOQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPhB,EAQGF,IARH,CAQQK,WAAW,IAAI;AACnBX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,kBAAR;AAA4BU,QAAAA;AAA5B,OAAD,CAAR;AACD,KAVH;AAYD,GAdD;AAeD;AAED,OAAO,SAASM,iBAAT,CAA2BN,WAA3B,EAAwC;AAC7C,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,yBAAkBS,WAAW,CAACK,EAA9B,GAAoC;AACvCb,MAAAA,MAAM,EAAE;AAD+B,KAApC,CAAL,CAGGG,IAHH,CAGQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHhB,EAIGF,IAJH,CAIQK,WAAW,IAAIX,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BU,MAAAA;AAA9B,KAAD,CAJ/B;AAKD,GAPD;AAQD","sourcesContent":["export function fetchProgressions() {\n  return (dispatch) => {\n    dispatch({type: 'START_ADDING_PROGRESSIONS_REQUEST'})\n    fetch(`/progressions`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(progressions => dispatch({ type: 'ADD_PROGRESSIONS', progressions }))\n  }\n}\n\nexport function addProgression(progression) {\n  return (dispatch) => {\n    dispatch({type: 'START_ADDING_PROGRESSION_REQUEST'})\n    fetch(`/progressions`, {\n      method: \"POST\",\n      body: JSON.stringify(progression),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(progression => {\n        dispatch({ type: 'ADD_PROGRESSION', progression })\n      })\n\n  }\n}\n\n\nexport function editProgression(progression) {\n  return (dispatch) => {\n    dispatch({type: 'START_EDITING_PROGRESSION_REQUEST'})\n    fetch(`/progressions/${progression.progression.id}`, {\n      method: 'PATCH',\n      body: JSON.stringify(progression),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(progression => {\n        dispatch({ type: 'EDIT_PROGRESSION', progression })\n      })\n\n  }\n}\n\nexport function deleteProgression(progression) {\n  return (dispatch) => {\n    dispatch({type: 'START_DELETING_PROGRESSION_REQUEST'})\n    fetch(`/progressions/${progression.id}`, {\n      method: 'DELETE'\n    })\n      .then(resp => resp.json())\n      .then(progression => dispatch({ type: 'DELETE_PROGRESSION', progression }))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}