{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions';\nimport AssignedProgressions from './AssignedProgressions';\nimport SubmittedProgressions from './SubmittedProgressions';\nimport StudentShowAgenda from './StudentShowAgenda';\nimport MyAgenda from '../../agendas/MyAgenda';\nimport MyProgression from '../../agendas/MyProgression';\nimport '../css/student-show.css';\n\nclass StudentShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: undefined,\n      myProgressions: undefined,\n      selectedProgressionId: 0\n    };\n\n    this.setProgressions = () => {\n      const _this$props = this.props,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions;\n      const _this$state = this.state,\n            student = _this$state.student,\n            incompleteProgressions = _this$state.incompleteProgressions,\n            completeProgressions = _this$state.completeProgressions,\n            myProgressions = _this$state.myProgressions;\n\n      if (!myProgressions && progressions.allIds.length > 0 && student) {\n        const tempProgressions = getStudentProgressions(student, studentProgressions, progressions);\n        this.setState({\n          myProgressions: [...tempProgressions]\n        });\n      }\n    };\n\n    this.setStudent = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            handleSetStudent = _this$props2.handleSetStudent;\n      const studentId = this.props.match.params.id;\n      const student = students.byId[\"student\".concat(studentId)];\n\n      if (student && !this.state.student) {\n        handleSetStudent(student);\n        this.setState(_objectSpread({}, this.state, {\n          student: student\n        }));\n      }\n    };\n\n    this.handleProgressionClick = (progression, index) => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedProgressionId: \"progression\".concat(progression.id),\n        itemIndex: index\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleStudentShowPage();\n  }\n\n  componentDidUpdate() {\n    this.setStudent();\n    this.setProgressions();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          student = _this$state2.student,\n          myProgressions = _this$state2.myProgressions,\n          selectedProgressionId = _this$state2.selectedProgressionId;\n    const _this$props3 = this.props,\n          progressions = _this$props3.progressions,\n          studentProgressions = _this$props3.studentProgressions,\n          reflections = _this$props3.reflections,\n          videos = _this$props3.videos;\n\n    if (student && myProgressions) {\n      return React.createElement(\"div\", {\n        className: \"myagenda-wrapper student-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(MyAgenda, {\n        handleProgressionClick: this.handleProgressionClick,\n        progressions: myProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(MyProgression, {\n        key: Math.random(),\n        progression: myProgressions.find(prog => \"progression\".concat(prog.id) === selectedProgressionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js"],"names":["React","Component","connect","getStudentProgressions","AssignedProgressions","SubmittedProgressions","StudentShowAgenda","MyAgenda","MyProgression","StudentShowContainer","state","student","undefined","myProgressions","selectedProgressionId","setProgressions","props","progressions","studentProgressions","incompleteProgressions","completeProgressions","allIds","length","tempProgressions","setState","setStudent","students","handleSetStudent","studentId","match","params","id","byId","handleProgressionClick","progression","index","itemIndex","componentDidMount","handleStudentShowPage","componentDidUpdate","render","reflections","videos","Math","random","find","prog","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,mDAAvC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,yBAAP;;AAEA,MAAMC,oBAAN,SAAmCR,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CS,KAD2C,GACnC;AACNC,MAAAA,OAAO,EAAEC,SADH;AAENC,MAAAA,cAAc,EAAED,SAFV;AAGNE,MAAAA,qBAAqB,EAAE;AAHjB,KADmC;;AAAA,SAgB3CC,eAhB2C,GAgBzB,MAAM;AAAA,0BACwB,KAAKC,KAD7B;AAAA,YACdC,YADc,eACdA,YADc;AAAA,YACAC,mBADA,eACAA,mBADA;AAAA,0BAE4D,KAAKR,KAFjE;AAAA,YAEdC,OAFc,eAEdA,OAFc;AAAA,YAELQ,sBAFK,eAELA,sBAFK;AAAA,YAEmBC,oBAFnB,eAEmBA,oBAFnB;AAAA,YAEyCP,cAFzC,eAEyCA,cAFzC;;AAGtB,UAAI,CAACA,cAAD,IAAmBI,YAAY,CAACI,MAAb,CAAoBC,MAApB,GAA6B,CAAhD,IAAqDX,OAAzD,EAAiE;AAC/D,cAAMY,gBAAgB,GAAGpB,sBAAsB,CAACQ,OAAD,EAAUO,mBAAV,EAA+BD,YAA/B,CAA/C;AACA,aAAKO,QAAL,CAAc;AACZX,UAAAA,cAAc,EAAE,CAAC,GAAGU,gBAAJ;AADJ,SAAd;AAGD;AACF,KAzB0C;;AAAA,SA2B3CE,UA3B2C,GA2B9B,MAAM;AAAA,2BACsB,KAAKT,KAD3B;AAAA,YACTU,QADS,gBACTA,QADS;AAAA,YACCC,gBADD,gBACCA,gBADD;AAEjB,YAAMC,SAAS,GAAG,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C;AACA,YAAMpB,OAAO,GAAGe,QAAQ,CAACM,IAAT,kBAAwBJ,SAAxB,EAAhB;;AACA,UAAIjB,OAAO,IAAI,CAAC,KAAKD,KAAL,CAAWC,OAA3B,EAAmC;AACjCgB,QAAAA,gBAAgB,CAAChB,OAAD,CAAhB;AACA,aAAKa,QAAL,mBACK,KAAKd,KADV;AAEEC,UAAAA,OAAO,EAAEA;AAFX;AAID;AACF,KAtC0C;;AAAA,SAwC3CsB,sBAxC2C,GAwClB,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAC/C,WAAKX,QAAL,mBACK,KAAKd,KADV;AAEEI,QAAAA,qBAAqB,uBAAgBoB,WAAW,CAACH,EAA5B,CAFvB;AAGEK,QAAAA,SAAS,EAAED;AAHb;AAKD,KA9C0C;AAAA;;AAO3CE,EAAAA,iBAAiB,GAAE;AACjB,SAAKrB,KAAL,CAAWsB,qBAAX;AACD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKd,UAAL;AACA,SAAKV,eAAL;AACD;;AAmCDyB,EAAAA,MAAM,GAAE;AAAA,yBACqD,KAAK9B,KAD1D;AAAA,UACEC,OADF,gBACEA,OADF;AAAA,UACWE,cADX,gBACWA,cADX;AAAA,UAC2BC,qBAD3B,gBAC2BA,qBAD3B;AAAA,yBAE6D,KAAKE,KAFlE;AAAA,UAEEC,YAFF,gBAEEA,YAFF;AAAA,UAEgBC,mBAFhB,gBAEgBA,mBAFhB;AAAA,UAEqCuB,WAFrC,gBAEqCA,WAFrC;AAAA,UAEkDC,MAFlD,gBAEkDA,MAFlD;;AAGN,QAAI/B,OAAO,IAAIE,cAAf,EAA+B;AAC7B,aACE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,sBAAsB,EAAE,KAAKoB,sBAD/B;AAEE,QAAA,YAAY,EAAEpB,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAII,oBAAC,aAAD;AACE,QAAA,GAAG,EAAE8B,IAAI,CAACC,MAAL,EADP;AAEE,QAAA,WAAW,EAAE/B,cAAc,CAACgC,IAAf,CAAoBC,IAAI,IAAI,qBAAcA,IAAI,CAACf,EAAnB,MAA4BjB,qBAAxD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AAUD,KAXD,MAWO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF;;AApE0C;;AAuE7C,SAASiC,eAAT,CAAyBrC,KAAzB,EAA+B;AAC7B,SAAO;AACLgB,IAAAA,QAAQ,EAAEhB,KAAK,CAACgB,QADX;AAELT,IAAAA,YAAY,EAAEP,KAAK,CAACO,YAFf;AAGLC,IAAAA,mBAAmB,EAAER,KAAK,CAACQ,mBAHtB;AAILuB,IAAAA,WAAW,EAAE/B,KAAK,CAAC+B,WAJd;AAKLC,IAAAA,MAAM,EAAEhC,KAAK,CAACgC;AALT,GAAP;AAOD;;AAED,eAAexC,OAAO,CAAC6C,eAAD,EAAkB,IAAlB,CAAP,CAA+BtC,oBAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions'\nimport AssignedProgressions from './AssignedProgressions'\nimport SubmittedProgressions from './SubmittedProgressions'\nimport StudentShowAgenda from './StudentShowAgenda'\nimport MyAgenda from '../../agendas/MyAgenda'\nimport MyProgression from '../../agendas/MyProgression'\nimport '../css/student-show.css'\n\nclass StudentShowContainer extends Component {\n  state = {\n    student: undefined,\n    myProgressions: undefined,\n    selectedProgressionId: 0\n  }\n\n  componentDidMount(){\n    this.props.handleStudentShowPage()\n  }\n\n  componentDidUpdate(){\n    this.setStudent()\n    this.setProgressions()\n  }\n\n  setProgressions = () => {\n    const { progressions, studentProgressions } = this.props\n    const { student, incompleteProgressions, completeProgressions, myProgressions } = this.state\n    if (!myProgressions && progressions.allIds.length > 0 && student){\n      const tempProgressions = getStudentProgressions(student, studentProgressions, progressions)\n      this.setState({\n        myProgressions: [...tempProgressions]\n      })\n    }\n  }\n\n  setStudent = () => {\n    const { students, handleSetStudent } = this.props\n    const studentId = this.props.match.params.id\n    const student = students.byId[`student${studentId}`]\n    if (student && !this.state.student){\n      handleSetStudent(student)\n      this.setState({\n        ...this.state,\n        student: student\n      })\n    }\n  }\n\n  handleProgressionClick = (progression, index) => {\n    this.setState({\n      ...this.state,\n      selectedProgressionId: `progression${progression.id}`,\n      itemIndex: index\n    })\n  }\n\n\n  render(){\n    const { student, myProgressions, selectedProgressionId } = this.state\n    const { progressions, studentProgressions, reflections, videos } = this.props\n    if (student && myProgressions) {\n      return (\n        <div className=\"myagenda-wrapper student-show-wrapper\">\n          <MyAgenda\n            handleProgressionClick={this.handleProgressionClick}\n            progressions={myProgressions}/>\n            <MyProgression\n              key={Math.random()}\n              progression={myProgressions.find(prog => `progression${prog.id}` === selectedProgressionId)} />\n        </div>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer)\n"]},"metadata":{},"sourceType":"module"}