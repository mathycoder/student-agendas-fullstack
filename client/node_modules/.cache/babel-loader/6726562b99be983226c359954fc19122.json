{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StudentProgression from '../StudentProgression';\nimport PostItForm from './PostItForm';\nimport '../css/student-summary.css';\n\nclass StudentShowSummary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      studentProgressionId: null,\n      editing: false\n    };\n\n    this.renderProgressionRow = (progression, index) => {\n      const student = this.props.student;\n      const editing = this.props.editing;\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"progression-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary-progression\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(StudentProgression, {\n        progression: progression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"summary-dates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"date-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Assigned: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, progression.createdAt), \" \"), React.createElement(\"div\", {\n        className: \"date-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Completed: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"\".concat(progression.submittedAt === 'incomplete' ? 'incomplete' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, progression.submittedAt))))), React.createElement(\"div\", {\n        className: \"summary-reflection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.renderReflection(progression).question1)), React.createElement(\"div\", {\n        className: \"summary-reflection-answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"answer-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, student.firstName, \"s Response: \"), progression.question1Answer ? \"\\\"\".concat(progression.question1Answer, \"\\\"\") : React.createElement(\"span\", {\n        className: \"incomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"incomplete\"))), React.createElement(\"div\", {\n        className: \"summary-reflection-comment post-it\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, editing ? React.createElement(PostItForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : progression.question1Comment), React.createElement(\"button\", {\n        onClick: this.handleEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Edit\")));\n    };\n\n    this.sortedProgs = progressions => {\n      return progressions.sort((a, b) => {\n        const dateA = new Date(a.createdAt);\n        const dateB = new Date(b.createdAt);\n        return dateB - dateA;\n      });\n    };\n\n    this.renderReflection = progression => {\n      const reflections = this.props.reflections;\n      const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"));\n      const reflectionId = progression.items[reflectionIndex];\n      return reflections.byId[reflectionId];\n    };\n\n    this.handleEditClick = e => {\n      this.setState(_objectSpread({}, this.state, {\n        editing: !this.state.editing\n      }));\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(state);\n  }\n\n  render() {\n    const _this$props = this.props,\n          student = _this$props.student,\n          progressions = _this$props.progressions,\n          currentUser = _this$props.currentUser;\n    return React.createElement(\"div\", {\n      className: \"student-summary-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.sortedProgs(progressions).map((progression, index) => {\n      return this.renderProgressionRow(progression, index);\n    }));\n  }\n\n}\n\nexport default StudentShowSummary;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js"],"names":["React","Component","StudentProgression","PostItForm","StudentShowSummary","state","studentProgressionId","editing","renderProgressionRow","progression","index","student","props","createdAt","submittedAt","renderReflection","question1","firstName","question1Answer","question1Comment","handleEditClick","sortedProgs","progressions","sort","a","b","dateA","Date","dateB","reflections","reflectionIndex","items","findIndex","item","includes","reflectionId","byId","e","setState","componentDidUpdate","console","log","render","currentUser","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentProgression from '../StudentProgression'\nimport PostItForm from './PostItForm'\nimport '../css/student-summary.css'\n\nclass StudentShowSummary extends Component {\n  state = {\n    studentProgressionId: null,\n    editing: false\n  }\n\n  componentDidUpdate(){\n    console.log(state)\n  }\n\n  renderProgressionRow = (progression, index) => {\n    const { student } = this.props\n    const { editing } = this.props\n    return (\n      <div key={index} className=\"progression-row\">\n        <div className=\"summary-progression\">\n          <StudentProgression progression={progression}/>\n          <div className=\"summary-dates\">\n            <div className=\"date-category\">Assigned: <br/><strong>{progression.createdAt}</strong> </div>\n            <div className=\"date-category\">\n              Completed: <br/> <div className={`${progression.submittedAt === 'incomplete' ? 'incomplete' : ''}`}><strong>{progression.submittedAt}</strong></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"summary-reflection\">\n          <p>{this.renderReflection(progression).question1}</p>\n        </div>\n        <div className=\"summary-reflection-answer\">\n          <p><div className=\"answer-title\">{student.firstName}s Response: </div>{progression.question1Answer ? `\"${progression.question1Answer}\"` : <span className=\"incomplete\">incomplete</span>}</p>\n        </div>\n        <div className={`summary-reflection-comment post-it`}>\n          <p>{editing ? <PostItForm /> : progression.question1Comment}</p>\n          <button onClick={this.handleEditClick}>Edit</button>\n        </div>\n      </div>\n    )\n  }\n\n  sortedProgs = (progressions) => {\n    return progressions.sort((a,b) => {\n      const dateA = new Date(a.createdAt)\n      const dateB = new Date(b.createdAt)\n      return dateB - dateA\n    })\n  }\n\n  renderReflection = (progression) => {\n    const { reflections } = this.props\n    const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"))\n    const reflectionId = progression.items[reflectionIndex]\n    return reflections.byId[reflectionId]\n  }\n\n  handleEditClick = (e) => {\n    this.setState({\n      ...this.state,\n      editing: !this.state.editing\n    })\n  }\n\n  render(){\n    const { student, progressions, currentUser } = this.props\n    return (\n      <div className=\"student-summary-page\">\n\n        {this.sortedProgs(progressions).map((progression, index) => {\n          return this.renderProgressionRow(progression, index)\n        })}\n      </div>\n    )\n  }\n}\n\nexport default StudentShowSummary\n"]},"metadata":{},"sourceType":"module"}