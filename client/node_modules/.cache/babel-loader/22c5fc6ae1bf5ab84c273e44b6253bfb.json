{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { addStudents } from '../../actions/studentActions';\nimport ShowKlassContainer from './ShowKlassContainer';\nimport StudentShowContainer from '../students/show/StudentShowContainer';\nimport { connect } from 'react-redux';\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport Toggle from '../agendas/Toggle';\nimport { archiveStudentProgressions } from '../../actions/studentProgressionActions.js';\n\nclass ShowKlassRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingStudents: false,\n      showProgressions: true,\n      studentShowPage: false,\n      studentDropdown: false,\n      student: undefined,\n      summaryPage: false,\n      settings: false,\n      submitted: false\n    };\n\n    this.handleClick = e => {\n      if (this.state.studentDropdown) {\n        if (this.myRefStudentButton.current.contains(e.target) || this.myRefStudentDropdown.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleStudentDropdownClick();\n      }\n\n      if (this.state.settings) {\n        if (this.myRefGearIcon.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleSettingsClick();\n      }\n    };\n\n    this.handleStudentShowPage = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentShowPage: !this.state.studentShowPage\n      }));\n    };\n\n    this.handleEditingStudents = () => {\n      this.setState(_objectSpread({}, this.state, {\n        editingStudents: !this.state.editingStudents\n      }));\n    };\n\n    this.handleShowProgressions = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showProgressions: !this.state.showProgressions\n      }));\n    };\n\n    this.handleStudentDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        studentDropdown: !this.state.studentDropdown\n      }));\n    };\n\n    this.handleSetStudent = student => {\n      this.setState(_objectSpread({}, this.state, {\n        student: student\n      }));\n    };\n\n    this.handleSettingsClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        settings: !this.state.settings\n      }));\n    };\n\n    this.handleClearProgressionsClick = () => {\n      const _this$props = this.props,\n            archiveStudentProgressions = _this$props.archiveStudentProgressions,\n            currentUser = _this$props.currentUser,\n            match = _this$props.match;\n      const klassId = match.params.id;\n      const deleteCheck = window.confirm(\"Are you sure you want to archive all submitted progressions?  Submitted progressions will no longer be visible in student agendas.\");\n\n      if (deleteCheck) {\n        archiveStudentProgressions(currentUser, klassId);\n      }\n    };\n\n    this.handleSubmittedClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        submitted: !this.state.submitted\n      }));\n    };\n\n    this.renderStudentDropdown = klass => {\n      const students = this.props.students;\n      const studentDropdown = this.state.studentDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu student-dropdown \".concat(studentDropdown ? 'opened' : 'closed'),\n        ref: this.myRefStudentDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, students.allIds.map((studentId, index) => {\n        const student = students.byId[studentId];\n        return React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id, \"/students/\").concat(student.id),\n          onClick: this.handleStudentDropdownClick,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, student.firstName, \" \", student.lastName);\n      }));\n    };\n\n    this.renderSettingsDropdown = () => {\n      const _this$state = this.state,\n            settings = _this$state.settings,\n            showProgressions = _this$state.showProgressions;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu settings-dropdown \".concat(settings ? 'opened' : 'closed'),\n        ref: this.myRefSettingsDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleClearProgressionsClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Archive Submitted\"), React.createElement(\"div\", {\n        onClick: this.handleEditingStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Edit Students\"), React.createElement(\"div\", {\n        onClick: this.handleShowProgressions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, showProgressions ? 'Hide Progressions' : 'Show Progressions'));\n    };\n\n    this.renderStudentDropdownContainer = () => {\n      const _this$state2 = this.state,\n            student = _this$state2.student,\n            studentDropdown = _this$state2.studentDropdown;\n      return React.createElement(\"div\", {\n        className: \"student-dropdown-button\",\n        ref: this.myRefStudentButton,\n        onClick: this.handleStudentDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, student ? \"\".concat(student.firstName, \" \").concat(student.lastName) : 'Students', \" \"), React.createElement(\"div\", {\n        className: \"triangle \".concat(studentDropdown ? 'up' : 'down'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u25BC\"));\n    };\n\n    this.numberToBeGraded = () => {\n      const studentProgressions = this.props.studentProgressions;\n      return studentProgressions.allIds.filter(spId => {\n        const sp = studentProgressions.byId[spId];\n        return sp.submitted && !sp.graded;\n      }).length;\n    };\n\n    this.renderShowKlassMenuBar = klass => {\n      const _this$state3 = this.state,\n            editingStudents = _this$state3.editingStudents,\n            studentShowPage = _this$state3.studentShowPage,\n            summaryPage = _this$state3.summaryPage,\n            settings = _this$state3.settings;\n\n      if (!studentShowPage) {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, klass.name), editingStudents ? '' : this.renderStudentDropdownContainer(), editingStudents ? '' : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"post-it-icon\",\n          onClick: this.handleSubmittedClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, this.numberToBeGraded())), React.createElement(\"div\", {\n          className: \"gear\",\n          onClick: this.handleSettingsClick,\n          ref: this.myRefGearIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: settings ? 'clock' : 'counterclock',\n          src: \"/gear.png\",\n          alt: \"gear icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"klass-show-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, klass.name), this.renderStudentDropdownContainer(), React.createElement(Toggle, {\n          left: 'Current Agenda',\n          right: 'All Progressions',\n          handleToggleChange: this.handleToggleChange,\n          attribute: summaryPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.handleToggleChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        summaryPage: !this.state.summaryPage\n      }));\n    };\n\n    this.myRefStudentButton = React.createRef();\n    this.myRefGearIcon = React.createRef();\n    this.myRefStudentDropdown = React.createRef();\n    this.myRefSettingsDropdown = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n    const _this$props2 = this.props,\n          match = _this$props2.match,\n          fetchStudents = _this$props2.fetchStudents;\n    const klassId = match.params.id;\n    fetchStudents(klassId);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          klasses = _this$props3.klasses,\n          match = _this$props3.match;\n    const _this$state4 = this.state,\n          editingStudents = _this$state4.editingStudents,\n          showProgressions = _this$state4.showProgressions,\n          summaryPage = _this$state4.summaryPage,\n          submitted = _this$state4.submitted;\n    const klassId = klasses.allIds.find(klassId => klassId === \"klass\".concat(match.params.id)) || \"\";\n    const klass = klasses.byId[klassId];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.renderShowKlassMenuBar(klass), this.renderStudentDropdown(klass), this.renderSettingsDropdown(), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url),\n      render: renderProps => {\n        return React.createElement(ShowKlassContainer, {\n          klass: klass,\n          submitted: submitted,\n          showProgressions: showProgressions,\n          editingStudents: editingStudents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/students/:id\"),\n      render: renderProps => {\n        return React.createElement(StudentShowContainer, Object.assign({\n          summaryPage: summaryPage,\n          handleSetStudent: this.handleSetStudent,\n          handleStudentShowPage: this.handleStudentShowPage\n        }, renderProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId)),\n    archiveStudentProgressions: (currentUser, klassId) => dispatch(archiveStudentProgressions(currentUser, klassId))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassRouter.js"],"names":["React","Component","addStudents","ShowKlassContainer","StudentShowContainer","connect","Route","Switch","NavLink","Toggle","archiveStudentProgressions","ShowKlassRouter","constructor","props","state","editingStudents","showProgressions","studentShowPage","studentDropdown","student","undefined","summaryPage","settings","submitted","handleClick","e","myRefStudentButton","current","contains","target","myRefStudentDropdown","handleStudentDropdownClick","myRefGearIcon","handleSettingsClick","handleStudentShowPage","setState","handleEditingStudents","handleShowProgressions","handleSetStudent","handleClearProgressionsClick","currentUser","match","klassId","params","id","deleteCheck","window","confirm","handleSubmittedClick","renderStudentDropdown","klass","students","allIds","map","studentId","index","byId","firstName","lastName","renderSettingsDropdown","myRefSettingsDropdown","renderStudentDropdownContainer","numberToBeGraded","studentProgressions","filter","spId","sp","graded","length","renderShowKlassMenuBar","name","handleToggleChange","createRef","componentDidMount","document","addEventListener","fetchStudents","componentWillUnmount","removeEventListener","render","klasses","find","url","renderProps","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { addStudents } from '../../actions/studentActions'\nimport ShowKlassContainer from './ShowKlassContainer'\nimport StudentShowContainer from '../students/show/StudentShowContainer'\nimport { connect } from 'react-redux'\nimport { Route, Switch, NavLink } from \"react-router-dom\"\nimport Toggle from '../agendas/Toggle'\nimport { archiveStudentProgressions } from '../../actions/studentProgressionActions.js'\n\nclass ShowKlassRouter extends Component {\n  constructor(props){\n    super(props)\n    this.myRefStudentButton = React.createRef()\n    this.myRefGearIcon = React.createRef()\n    this.myRefStudentDropdown = React.createRef()\n    this.myRefSettingsDropdown = React.createRef()\n  }\n\n  state = {\n    editingStudents: false,\n    showProgressions: true,\n    studentShowPage: false,\n    studentDropdown: false,\n    student: undefined,\n    summaryPage: false,\n    settings: false,\n    submitted: false\n  }\n\n  componentDidMount(){\n    document.addEventListener('mousedown', this.handleClick)\n    const { match, fetchStudents } = this.props\n    const klassId = match.params.id\n    fetchStudents(klassId)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClick)\n  }\n\n  handleClick = (e) => {\n    if (this.state.studentDropdown){\n      if (this.myRefStudentButton.current.contains(e.target) || this.myRefStudentDropdown.current.contains(e.target)) { return }\n      this.handleStudentDropdownClick()\n    }\n\n    if (this.state.settings){\n      if (this.myRefGearIcon.current.contains(e.target)) { return }\n      this.handleSettingsClick()\n    }\n  }\n\n  handleStudentShowPage = () => {\n    this.setState({\n      ...this.state,\n      studentShowPage: !this.state.studentShowPage\n    })\n  }\n\n  handleEditingStudents = () => {\n    this.setState({...this.state, editingStudents: !this.state.editingStudents})\n  }\n\n  handleShowProgressions = () => {\n    this.setState({\n      ...this.state,\n      showProgressions: !this.state.showProgressions\n    })\n  }\n\n  handleStudentDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      studentDropdown: !this.state.studentDropdown\n    })\n  }\n\n  handleSetStudent = (student) => {\n    this.setState({\n      ...this.state,\n      student: student\n    })\n  }\n\n  handleSettingsClick = () => {\n    this.setState({\n      ...this.state,\n      settings: !this.state.settings\n    })\n  }\n\n  handleClearProgressionsClick = () => {\n    const { archiveStudentProgressions, currentUser, match } = this.props\n    const klassId = match.params.id\n    const deleteCheck = window.confirm(\"Are you sure you want to archive all submitted progressions?  Submitted progressions will no longer be visible in student agendas.\");\n    if (deleteCheck) { archiveStudentProgressions(currentUser, klassId) }\n  }\n\n  handleSubmittedClick = () => {\n    this.setState({\n      ...this.state,\n      submitted: !this.state.submitted\n    })\n  }\n\n  renderStudentDropdown = (klass) => {\n    const { students } = this.props\n    const { studentDropdown } = this.state\n    return (\n      <div className={`dropdown-menu student-dropdown ${studentDropdown ? 'opened': 'closed'}`} ref={this.myRefStudentDropdown}>\n        {students.allIds.map((studentId, index) => {\n          const student = students.byId[studentId]\n          return (\n            <NavLink\n              to={`/classes/${klass.id}/students/${student.id}`}\n              onClick={this.handleStudentDropdownClick}\n              key={index}\n              >\n              {student.firstName} {student.lastName}\n            </NavLink>\n            )\n        })}\n      </div>\n    )\n  }\n\n  renderSettingsDropdown = () => {\n    const { settings, showProgressions } = this.state\n    return (\n      <div className={`dropdown-menu settings-dropdown ${settings ? 'opened': 'closed'}`} ref={this.myRefSettingsDropdown}>\n        <div onClick={this.handleClearProgressionsClick}>Archive Submitted</div>\n        <div onClick={this.handleEditingStudents}>Edit Students</div>\n        <div onClick={this.handleShowProgressions}>{showProgressions ? 'Hide Progressions' : 'Show Progressions'}</div>\n      </div>\n    )\n  }\n\n  renderStudentDropdownContainer = () => {\n    const { student, studentDropdown } = this.state\n    return (\n      <div className=\"student-dropdown-button\" ref={this.myRefStudentButton} onClick={this.handleStudentDropdownClick}>\n        <div>{ student ? `${student.firstName} ${student.lastName}` : 'Students'} </div>\n        <div className={`triangle ${studentDropdown ? 'up':'down'}`}>&#9660;</div>\n      </div>\n    )\n  }\n\n  numberToBeGraded = () => {\n        const { studentProgressions } = this.props\n        return studentProgressions.allIds.filter(spId => {\n          const sp = studentProgressions.byId[spId]\n          return sp.submitted && !sp.graded\n        }).length\n  }\n\n  renderShowKlassMenuBar = (klass) => {\n    const { editingStudents, studentShowPage, summaryPage, settings } = this.state\n    if (!studentShowPage){\n      return (\n        <div className=\"klass-show-title\">\n          <NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>\n          {editingStudents ? '' : this.renderStudentDropdownContainer()}\n          {editingStudents ? '' :\n          <>\n            <div className={`post-it-icon`} onClick={this.handleSubmittedClick}><p>{this.numberToBeGraded()}</p></div>\n            <div className=\"gear\" onClick={this.handleSettingsClick} ref={this.myRefGearIcon}>\n              <img className={settings ? 'clock':'counterclock'} src=\"/gear.png\" alt=\"gear icon\" />\n            </div>\n          </>}\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"klass-show-title\">\n          <NavLink to={`/classes/${klass.id}`}>{klass.name}</NavLink>\n          {this.renderStudentDropdownContainer()}\n          <Toggle\n            left={'Current Agenda'}\n            right={'All Progressions'}\n            handleToggleChange={this.handleToggleChange}\n            attribute={summaryPage}/>\n        </div>\n      )\n    }\n  }\n\n  handleToggleChange = (e) => {\n    this.setState({\n      ...this.state,\n      summaryPage: !this.state.summaryPage\n    })\n  }\n\n  render(){\n    const { klasses, match } = this.props\n    const { editingStudents, showProgressions, summaryPage, submitted } = this.state\n    const klassId = klasses.allIds.find(klassId => klassId === `klass${match.params.id}`) || \"\"\n    const klass = klasses.byId[klassId]\n    return (\n      <div>\n        {this.renderShowKlassMenuBar(klass)}\n        {this.renderStudentDropdown(klass)}\n        {this.renderSettingsDropdown()}\n        <Switch>\n          <Route exact path={`${match.url}`} render={renderProps => {\n              return <ShowKlassContainer\n                        klass={klass}\n                        submitted={submitted}\n                        showProgressions={showProgressions}\n                        editingStudents={editingStudents}/>}\n            }/>\n\n          <Route exact path={`${match.url}/students/:id`} render={renderProps => {\n              return <StudentShowContainer\n                        summaryPage={summaryPage}\n                        handleSetStudent={this.handleSetStudent}\n                        handleStudentShowPage={this.handleStudentShowPage}\n                        {...renderProps} />}\n            }/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId)),\n    archiveStudentProgressions: (currentUser, klassId) => dispatch(archiveStudentProgressions(currentUser, klassId))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassRouter)\n"]},"metadata":{},"sourceType":"module"}