{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions';\nimport StudentShowAgenda from './StudentShowAgenda';\nimport StudentShowProgression from './StudentShowProgression';\nimport StudentShowSummary from './StudentShowSummary';\nimport '../css/student-show.css';\n\nclass StudentShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: undefined,\n      selectedProgressionId: undefined,\n      itemIndex: undefined,\n      initialLoad: undefined\n    };\n\n    this.setInitialLoad = () => {\n      const _this$props = this.props,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions;\n      const _this$state = this.state,\n            initialLoad = _this$state.initialLoad,\n            student = _this$state.student;\n\n      if (!initialLoad && student && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0) {\n        const myProgressions = getStudentProgressions(student, studentProgressions, progressions);\n        this.setState(_objectSpread({}, this.state, {\n          initialLoad: true,\n          selectedProgressionId: \"progression\".concat(myProgressions[0].id),\n          itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n        }));\n      }\n    };\n\n    this.setStudent = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            handleSetStudent = _this$props2.handleSetStudent;\n      const studentId = this.props.match.params.id;\n      const student = students.byId[\"student\".concat(studentId)];\n\n      if (student && !this.state.student) {\n        handleSetStudent(student);\n        this.setState(_objectSpread({}, this.state, {\n          student: student\n        }));\n      }\n    };\n\n    this.handleProgressionClick = (progression, index) => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedProgressionId: \"progression\".concat(progression.id),\n        itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n      }));\n    };\n\n    this.renderStudentSummary = () => {\n      const student = this.state.student;\n      const _this$props3 = this.props,\n            progressions = _this$props3.progressions,\n            studentProgressions = _this$props3.studentProgressions,\n            reflections = _this$props3.reflections;\n\n      if (student) {\n        const myProgs = getStudentProgressions(student, studentProgressions, progressions);\n        return React.createElement(StudentShowSummary, {\n          student: student,\n          reflections: reflections,\n          progressions: myProgs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderStudentAgenda = () => {\n      const _this$state2 = this.state,\n            student = _this$state2.student,\n            selectedProgressionId = _this$state2.selectedProgressionId,\n            itemIndex = _this$state2.itemIndex;\n      const _this$props4 = this.props,\n            progressions = _this$props4.progressions,\n            studentProgressions = _this$props4.studentProgressions;\n\n      if (student) {\n        const myProgs = getStudentProgressions(student, studentProgressions, progressions);\n        return React.createElement(\"div\", {\n          className: \"myagenda-wrapper student-show-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(StudentShowAgenda, {\n          itemIndex: itemIndex,\n          selectedProgressionId: selectedProgressionId,\n          handleProgressionClick: this.handleProgressionClick,\n          progressions: myProgs,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(StudentShowProgression, {\n          key: Math.random(),\n          itemIndex: itemIndex,\n          student: student,\n          progression: myProgs.find(prog => \"progression\".concat(prog.id) === selectedProgressionId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleStudentShowPage();\n  }\n\n  componentDidUpdate() {\n    this.setStudent();\n    this.setInitialLoad();\n  }\n\n  render() {\n    const summaryPage = this.props.summaryPage;\n    return React.createElement(React.Fragment, null, summaryPage ? this.renderStudentSummary() : this.renderStudentAgenda());\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js"],"names":["React","Component","connect","getStudentProgressions","StudentShowAgenda","StudentShowProgression","StudentShowSummary","StudentShowContainer","state","student","undefined","selectedProgressionId","itemIndex","initialLoad","setInitialLoad","props","progressions","studentProgressions","allIds","length","myProgressions","setState","id","items","findIndex","el","includes","setStudent","students","handleSetStudent","studentId","match","params","byId","handleProgressionClick","progression","index","renderStudentSummary","reflections","myProgs","renderStudentAgenda","Math","random","find","prog","componentDidMount","handleStudentShowPage","componentDidUpdate","render","summaryPage","mapStateToProps","videos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions'\nimport StudentShowAgenda from './StudentShowAgenda'\nimport StudentShowProgression from './StudentShowProgression'\nimport StudentShowSummary from './StudentShowSummary'\nimport '../css/student-show.css'\n\nclass StudentShowContainer extends Component {\n  state = {\n    student: undefined,\n    selectedProgressionId: undefined,\n    itemIndex: undefined,\n    initialLoad: undefined\n  }\n\n  componentDidMount(){\n    this.props.handleStudentShowPage()\n  }\n\n  componentDidUpdate(){\n    this.setStudent()\n    this.setInitialLoad()\n  }\n\n  setInitialLoad = () => {\n    const { progressions, studentProgressions } = this.props\n    const { initialLoad, student } = this.state\n    if (!initialLoad && student && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0){\n      const myProgressions = getStudentProgressions(student, studentProgressions, progressions)\n      this.setState({\n        ...this.state,\n        initialLoad: true,\n        selectedProgressionId: `progression${myProgressions[0].id}`,\n        itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n      })\n    }\n  }\n\n  setStudent = () => {\n    const { students, handleSetStudent } = this.props\n    const studentId = this.props.match.params.id\n    const student = students.byId[`student${studentId}`]\n    if (student && !this.state.student){\n      handleSetStudent(student)\n      this.setState({\n        ...this.state,\n        student: student\n      })\n    }\n  }\n\n  handleProgressionClick = (progression, index) => {\n    this.setState({\n      ...this.state,\n      selectedProgressionId: `progression${progression.id}`,\n      itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n    })\n  }\n\n  renderStudentSummary = () => {\n    const { student } = this.state\n    const { progressions, studentProgressions, reflections } = this.props\n    if (student) {\n      const myProgs = getStudentProgressions(student, studentProgressions, progressions)\n      return (\n        <StudentShowSummary\n          student={student}\n          reflections={reflections}\n          progressions={myProgs}/>\n      )\n    }\n  }\n\n  renderStudentAgenda = () => {\n    const { student, selectedProgressionId, itemIndex } = this.state\n    const { progressions, studentProgressions } = this.props\n    if (student) {\n      const myProgs = getStudentProgressions(student, studentProgressions, progressions)\n      return (\n        <div className=\"myagenda-wrapper student-show-wrapper\">\n          <StudentShowAgenda\n            itemIndex={itemIndex}\n            selectedProgressionId={selectedProgressionId}\n            handleProgressionClick={this.handleProgressionClick}\n            progressions={myProgs}/>\n          <StudentShowProgression\n              key={Math.random()}\n              itemIndex={itemIndex}\n              student={student}\n              progression={myProgs.find(prog => `progression${prog.id}` === selectedProgressionId)} />\n        </div>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n\n  render(){\n    const { summaryPage } = this.props\n    return (\n      <>\n        {summaryPage ?\n          this.renderStudentSummary() : this.renderStudentAgenda()}\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer)\n"]},"metadata":{},"sourceType":"module"}