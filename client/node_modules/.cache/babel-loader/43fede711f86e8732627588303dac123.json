{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js\";\nimport React, { Component } from 'react';\nimport StudentProgression from '../StudentProgression';\nimport '../css/student-summary.css';\n\nclass StudentShowSummary extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderProgressionRow = (progression, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"progression-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(StudentProgression, {\n        progression: progression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"summary-dates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Assigned: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, progression.createdAt), \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Completed: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"\".concat(progression.submittedAt === 'incomplete' ? 'incomplete' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, progression.submittedAt)))), React.createElement(\"div\", {\n        className: \"summary-reflection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.renderReflection(progression).question1), React.createElement(\"div\", {\n        className: \"summary-reflection-answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, progression.question1Answer), React.createElement(\"div\", {\n        className: \"summary-reflection-comment \".concat(progression.question1Comment ? 'post-it' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, progression.question1Comment)));\n    };\n\n    this.sortedProgs = progressions => {\n      return progressions.sort((a, b) => {\n        const dateA = new Date(a.createdAt);\n        const dateB = new Date(b.createdAt);\n        return dateB - dateA;\n      });\n    };\n\n    this.renderReflection = progression => {\n      const reflections = this.props.reflections;\n      const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"));\n      const reflectionId = progression.items[reflectionIndex];\n      return reflections.byId[reflectionId];\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          student = _this$props.student,\n          progressions = _this$props.progressions,\n          currentUser = _this$props.currentUser;\n    return React.createElement(\"div\", {\n      className: \"student-summary-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Progression\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Reflection\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, student.firstName, \"'s Answer\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, currentUser.name, \"'s Comment\")), this.sortedProgs(progressions).map((progression, index) => {\n      return this.renderProgressionRow(progression, index);\n    }));\n  }\n\n}\n\nexport default StudentShowSummary;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowSummary.js"],"names":["React","Component","StudentProgression","StudentShowSummary","renderProgressionRow","progression","index","createdAt","submittedAt","renderReflection","question1","question1Answer","question1Comment","sortedProgs","progressions","sort","a","b","dateA","Date","dateB","reflections","props","reflectionIndex","items","findIndex","item","includes","reflectionId","byId","render","student","currentUser","firstName","name","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentProgression from '../StudentProgression'\nimport '../css/student-summary.css'\n\nclass StudentShowSummary extends Component {\n  renderProgressionRow = (progression, index) => {\n    return (\n      <div key={index} className=\"progression-row\">\n        <StudentProgression progression={progression}/>\n        <div className=\"summary-dates\">\n          <div>Assigned: <br/><strong>{progression.createdAt}</strong> </div>\n          <div>\n            Completed: <br/> <div className={`${progression.submittedAt === 'incomplete' ? 'incomplete' : ''}`}><strong>{progression.submittedAt}</strong></div>\n          </div>\n        </div>\n        <div className=\"summary-reflection\">\n          {this.renderReflection(progression).question1}\n        </div>\n        <div className=\"summary-reflection-answer\">\n          {progression.question1Answer}\n        </div>\n        <div className={`summary-reflection-comment ${progression.question1Comment ? 'post-it' : ''}`}>\n          <div>{progression.question1Comment}</div>\n        </div>\n      </div>\n    )\n  }\n\n  sortedProgs = (progressions) => {\n    return progressions.sort((a,b) => {\n      const dateA = new Date(a.createdAt)\n      const dateB = new Date(b.createdAt)\n      return dateB - dateA\n    })\n  }\n\n  renderReflection = (progression) => {\n    const { reflections } = this.props\n    const reflectionIndex = progression.items.findIndex(item => item.includes(\"reflection\"))\n    const reflectionId = progression.items[reflectionIndex]\n    return reflections.byId[reflectionId]\n  }\n\n  render(){\n    const { student, progressions, currentUser } = this.props\n    return (\n      <div className=\"student-summary-page\">\n        <div className=\"header\">\n          <div>Progression</div>\n          <div>Date</div>\n          <div>Reflection</div>\n          <div>{student.firstName}'s Answer</div>\n          <div>{currentUser.name}'s Comment</div>\n        </div>\n        {this.sortedProgs(progressions).map((progression, index) => {\n          return this.renderProgressionRow(progression, index)\n        })}\n      </div>\n    )\n  }\n}\n\nexport default StudentShowSummary\n"]},"metadata":{},"sourceType":"module"}