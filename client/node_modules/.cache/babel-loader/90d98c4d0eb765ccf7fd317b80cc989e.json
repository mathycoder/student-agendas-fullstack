{"ast":null,"code":"export function signup(teacherData, history) {\n  return dispatch => {\n    fetch(\"/teachers\", {\n      method: 'POST',\n      body: JSON.stringify(teacherData),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: user.error\n        });\n      } else {\n        dispatch({\n          type: 'SET_CURRENT_USER',\n          user\n        });\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: \"Created New Teacher Account\"\n        });\n        history.push('/classes');\n      }\n    }).catch(console.log);\n  };\n}\nexport function updateTeacher(teacherData, history) {\n  return dispatch => {\n    fetch(\"/teachers/\".concat(teacherData.id), {\n      method: 'PATCH',\n      body: JSON.stringify(teacherData),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: user.error\n        });\n      } else {\n        dispatch({\n          type: 'SET_CURRENT_USER',\n          user\n        });\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: \"Updated Profile\"\n        });\n        history.push('/classes');\n      }\n    }).catch(console.log);\n  };\n}\nexport function updateProfilePic(file, teacherId) {\n  return dispatch => {\n    fetch(\"/teachers/\".concat(teacherId), {\n      method: 'PATCH',\n      body: file,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(user => {\n      console.log(user);\n    }).catch(console.log);\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/actions/teacherActions.js"],"names":["signup","teacherData","history","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","resp","json","user","error","type","message","push","catch","console","log","updateTeacher","id","updateProfilePic","file","teacherId"],"mappings":"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","sourcesContent":["export function signup(teacherData, history){\n  return (dispatch) => {\n     fetch(`/teachers`, {\n       method: 'POST',\n       body: JSON.stringify(teacherData),\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       credentials: \"include\"\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        if (user.error){\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: user.error })\n        } else {\n          dispatch({ type: 'SET_CURRENT_USER', user })\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: \"Created New Teacher Account\" })\n          history.push('/classes')\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport function updateTeacher(teacherData, history){\n  return (dispatch) => {\n     fetch(`/teachers/${teacherData.id}`, {\n       method: 'PATCH',\n       body: JSON.stringify(teacherData),\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       credentials: \"include\"\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        if (user.error){\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: user.error })\n        } else {\n          dispatch({ type: 'SET_CURRENT_USER', user })\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: \"Updated Profile\" })\n          history.push('/classes')\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport function updateProfilePic(file, teacherId){\n  return (dispatch) => {\n    fetch(`/teachers/${teacherId}`, {\n      method: 'PATCH',\n      body: file,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n   })\n     .then(resp => resp.json())\n     .then(user => {\n       console.log(user)\n     })\n     .catch(console.log)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}