{"ast":null,"code":"export function getCurrentUser() {\n  return dispatch => {\n    dispatch({\n      type: 'CHECKING_CURRENT_USER'\n    });\n    fetch(\"/get_current_user\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        dispatch({\n          type: 'SET_CURRENT_USER_TO_NONE'\n        });\n      } else {\n        dispatch({\n          type: 'SET_CURRENT_USER',\n          user\n        });\n      }\n    }).catch(console.log);\n  };\n}\nexport function login(credentials, history) {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN_REQUEST'\n    });\n    fetch(\"/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: \"Email or password incorrect\"\n        });\n      } else {\n        dispatch({\n          type: 'SET_CURRENT_USER',\n          user\n        });\n        user.type === \"teacher\" ? history.push('/classes') : history.push('/myagenda');\n      }\n    }).catch(console.log);\n  };\n}\nexport function logout(history) {\n  return dispatch => {\n    dispatch({\n      type: 'LOGOUT_REQUEST'\n    });\n    fetch(\"/logout\", {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(user => {\n      if (user.error) {\n        console.log(user.error);\n      } else {\n        dispatch({\n          type: 'CLEAR_CURRENT_USER'\n        });\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: \"Successfully logged out\"\n        });\n        history.push('/login');\n      }\n    }).catch(console.log);\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/actions/currentUserActions.js"],"names":["getCurrentUser","dispatch","type","fetch","method","headers","credentials","then","resp","json","user","error","catch","console","log","login","history","body","JSON","stringify","message","push","logout"],"mappings":"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","sourcesContent":["export function getCurrentUser(){\n  return (dispatch) => {\n    dispatch({ type: 'CHECKING_CURRENT_USER' })\n     fetch(`/get_current_user`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        if (user.error){\n          dispatch({ type: 'SET_CURRENT_USER_TO_NONE' })\n        } else {\n          dispatch({ type: 'SET_CURRENT_USER', user })\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport function login(credentials, history){\n  return (dispatch) => {\n    dispatch({type: 'LOGIN_REQUEST'})\n    fetch(`/login`, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        if (user.error){\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: \"Email or password incorrect\" })\n        } else {\n          dispatch({ type: 'SET_CURRENT_USER', user })\n          user.type === \"teacher\" ? history.push('/classes') : history.push('/myagenda')\n        }\n      })\n      .catch(console.log)\n\n  }\n}\n\nexport function logout(history){\n  return (dispatch) => {\n    dispatch({type: 'LOGOUT_REQUEST'})\n    fetch(`/logout`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(user => {\n        if (user.error){\n          console.log(user.error)\n        } else {\n          dispatch({ type: 'CLEAR_CURRENT_USER' })\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: \"Successfully logged out\" })\n          history.push('/login')\n        }\n      })\n      .catch(console.log)\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}