{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js\";\nimport React, { Component } from 'react';\nimport StudentsContainer from '../students/StudentsContainer';\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer';\nimport EditStudents from '../students/EditStudents';\nimport { connect } from 'react-redux';\nimport { addStudents } from '../../actions/studentActions';\nimport { addStudentProgression } from '../../actions/studentProgressionActions';\nimport { addFlashMessage } from '../../actions/flashActions';\nimport ShowKlassAllProgressions from './ShowKlassAllProgressions';\nimport '../students/student.css';\n\nclass ShowKlassContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(211, 211, 211)\";\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(81, 84, 92)\";\n    };\n\n    this.handleDragStart = (event, progression) => {\n      let data = JSON.stringify(progression);\n      event.dataTransfer.setData(\"progression\", data);\n    };\n\n    this.handleDragDrop = event => {\n      const _this$props = this.props,\n            studentProgressions = _this$props.studentProgressions,\n            students = _this$props.students,\n            addStudentProgression = _this$props.addStudentProgression,\n            addFlashMessage = _this$props.addFlashMessage;\n      const agenda = event.currentTarget.closest('.student-agenda');\n      agenda.style.backgroundColor = \"rgb(81, 84, 92)\";\n      let progression = event.dataTransfer.getData(\"progression\");\n      progression = JSON.parse(progression);\n      const student = students.byId[\"student\".concat(event.currentTarget.dataset.studentId)];\n      const any = studentProgressions.allIds.filter(spId => {\n        const sp = studentProgressions.byId[spId];\n        return sp.studentId === \"student\".concat(student.id) && sp.progressionId === \"progression\".concat(progression.id);\n      });\n\n      if (any.length === 0) {\n        addStudentProgression(student, progression);\n      } else {\n        addFlashMessage(\"This student agenda already has this progression\");\n      }\n    };\n\n    this.renderStudents = () => React.createElement(StudentsContainer, {\n      klass: this.props.klass,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDragDrop: this.handleDragDrop,\n      showProgressions: this.props.showProgressions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n\n    this.renderProgressions = () => React.createElement(IndexProgressionsContainer, {\n      handleDragStart: this.handleDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          klass = _this$props2.klass,\n          editingStudents = _this$props2.editingStudents,\n          showProgressions = _this$props2.showProgressions,\n          submitted = _this$props2.submitted;\n\n    if (klass) {\n      return React.createElement(\"div\", {\n        className: \"klass-show-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, editingStudents ? React.createElement(EditStudents, {\n        klass: klass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }) : submitted ? React.createElement(ShowKlassAllProgressions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : this.renderStudents(), !editingStudents && !submitted && showProgressions ? this.renderProgressions() : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudents: klassId => dispatch(addStudents(klassId)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression)),\n    addFlashMessage: message => dispatch(addFlashMessage(message))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/ShowKlassContainer.js"],"names":["React","Component","StudentsContainer","IndexProgressionsContainer","EditStudents","connect","addStudents","addStudentProgression","addFlashMessage","ShowKlassAllProgressions","ShowKlassContainer","handleDragOver","event","preventDefault","agenda","currentTarget","closest","style","backgroundColor","handleDragLeave","handleDragStart","progression","data","JSON","stringify","dataTransfer","setData","handleDragDrop","props","studentProgressions","students","getData","parse","student","byId","dataset","studentId","any","allIds","filter","spId","sp","id","progressionId","length","renderStudents","klass","showProgressions","renderProgressions","render","editingStudents","submitted","mapDispatchToProps","dispatch","fetchStudents","klassId","message","mapStateToProps","state","klasses"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentsContainer from '../students/StudentsContainer'\nimport IndexProgressionsContainer from '../progressions/IndexProgressionsContainer'\nimport EditStudents from '../students/EditStudents'\nimport { connect } from 'react-redux'\nimport { addStudents } from '../../actions/studentActions'\nimport { addStudentProgression } from '../../actions/studentProgressionActions'\nimport { addFlashMessage } from '../../actions/flashActions'\nimport ShowKlassAllProgressions from './ShowKlassAllProgressions'\nimport '../students/student.css'\n\nclass ShowKlassContainer extends Component {\n  handleDragOver = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(211, 211, 211)\"\n  }\n\n  handleDragLeave = event => {\n    event.preventDefault()\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(81, 84, 92)\"\n  }\n\n  handleDragStart = (event, progression) => {\n    let data = JSON.stringify(progression)\n    event.dataTransfer.setData(\"progression\", data)\n  }\n\n  handleDragDrop = (event) => {\n    const { studentProgressions, students, addStudentProgression, addFlashMessage } = this.props\n    const agenda = event.currentTarget.closest('.student-agenda')\n    agenda.style.backgroundColor = \"rgb(81, 84, 92)\"\n    let progression = event.dataTransfer.getData(\"progression\")\n    progression = JSON.parse(progression)\n    const student = students.byId[`student${event.currentTarget.dataset.studentId}`]\n    const any = studentProgressions.allIds.filter(spId => {\n      const sp = studentProgressions.byId[spId]\n      return sp.studentId === `student${student.id}` && sp.progressionId === `progression${progression.id}`\n    })\n    if (any.length === 0){\n      addStudentProgression(student, progression)\n    } else {\n      addFlashMessage(\"This student agenda already has this progression\")\n    }\n  }\n\n  renderStudents = () => <StudentsContainer\n                          klass={this.props.klass}\n                          handleDragOver={this.handleDragOver}\n                          handleDragLeave={this.handleDragLeave}\n                          handleDragDrop={this.handleDragDrop}\n                          showProgressions={this.props.showProgressions} />\n\n\n  renderProgressions = () => <IndexProgressionsContainer handleDragStart={this.handleDragStart}/>\n\n  render(){\n    const { klass, editingStudents, showProgressions, submitted } = this.props\n\n    if (klass) {\n      return (\n        <div className=\"klass-show-container\">\n          { editingStudents ? <EditStudents klass={klass} />\n            : ( submitted ? <ShowKlassAllProgressions /> : this.renderStudents()) }\n          { !editingStudents && !submitted && showProgressions ? this.renderProgressions() : <div></div> }\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudents: (klassId) => dispatch(addStudents(klassId)),\n    addStudentProgression: (student, progression) => dispatch(addStudentProgression(student, progression)),\n    addFlashMessage: (message) => dispatch(addFlashMessage(message))\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses,\n    students: state.students,\n    studentProgressions: state.studentProgressions\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowKlassContainer)\n"]},"metadata":{},"sourceType":"module"}