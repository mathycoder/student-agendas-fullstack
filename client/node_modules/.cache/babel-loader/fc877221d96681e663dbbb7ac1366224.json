{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/KlassesContainer.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer';\nimport KlassesIndex from './KlassesIndex';\nimport '../progressions/Progression.css';\nimport './Klass.css';\nimport { connect } from 'react-redux';\nimport { fetchKlasses } from '../../actions/klassActions';\nimport { fetchProgressions } from '../../actions/progressionActions';\nimport { fetchVideos } from '../../actions/videoActions';\nimport { fetchReflections } from '../../actions/reflectionActions';\n\nclass KlassesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderShowRoute = () => React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      key: Math.random(),\n      render: routerProps => {\n        const klassId = \"klass\".concat(routerProps.match.params.id);\n        const allIds = this.props.klasses.allIds;\n\n        if (allIds.includes(klassId)) {\n          return React.createElement(ShowKlassContainer, Object.assign({}, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(Redirect, {\n            to: \"/classes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchKlasses = _this$props.fetchKlasses,\n          fetchProgressions = _this$props.fetchProgressions,\n          fetchVideos = _this$props.fetchVideos,\n          fetchReflections = _this$props.fetchReflections;\n    fetchKlasses();\n    fetchProgressions();\n    fetchVideos();\n    fetchReflections();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          match = _this$props2.match,\n          klasses = _this$props2.klasses;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url),\n      component: KlassesIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), klasses.allIds.length > 0 ? this.renderShowRoute() : ''));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    klasses: state.klasses\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    fetchVideos: () => dispatch(fetchVideos()),\n    fetchReflections: () => dispatch(fetchReflections())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/klasses/KlassesContainer.js"],"names":["React","Component","Route","Switch","Redirect","ShowKlassContainer","KlassesIndex","connect","fetchKlasses","fetchProgressions","fetchVideos","fetchReflections","KlassesContainer","renderShowRoute","props","match","url","Math","random","routerProps","klassId","params","id","allIds","klasses","includes","componentDidMount","render","length","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ShowKlassContainer from './ShowKlassContainer'\nimport KlassesIndex from './KlassesIndex'\nimport '../progressions/Progression.css'\nimport './Klass.css'\nimport { connect } from 'react-redux'\nimport { fetchKlasses } from '../../actions/klassActions'\nimport { fetchProgressions } from '../../actions/progressionActions'\nimport { fetchVideos } from '../../actions/videoActions'\nimport { fetchReflections } from '../../actions/reflectionActions'\n\nclass KlassesContainer extends Component {\n  componentDidMount(){\n    const {fetchKlasses, fetchProgressions, fetchVideos, fetchReflections} = this.props\n    fetchKlasses()\n    fetchProgressions()\n    fetchVideos()\n    fetchReflections()\n  }\n\n  renderShowRoute = () => (\n    <Route exact path={`${this.props.match.url}/:id`} key={Math.random()} render={(routerProps) => {\n      const klassId = `klass${routerProps.match.params.id}`\n      const {allIds} = this.props.klasses\n      if (allIds.includes(klassId)) {\n        return <ShowKlassContainer {...routerProps} />\n      } else {\n        return <Redirect to=\"/classes\"/>\n      }\n    }\n    }/>\n)\n\n  render() {\n    const { match, klasses } = this.props\n    return (\n      <div>\n        <Switch>\n          <Route exact path={`${match.url}`} component={KlassesIndex}/>\n          {klasses.allIds.length > 0 ? this.renderShowRoute() : ''}\n        </Switch>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    klasses: state.klasses\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchKlasses: () => dispatch(fetchKlasses()),\n    fetchProgressions: () => dispatch(fetchProgressions()),\n    fetchVideos: () => dispatch(fetchVideos()),\n    fetchReflections: () => dispatch(fetchReflections())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KlassesContainer)\n"]},"metadata":{},"sourceType":"module"}