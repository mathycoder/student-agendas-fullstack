{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/navbar/NavBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './navbar.css';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      klassDropdown: false,\n      progressionDropdown: false\n    };\n\n    this.handleClick = e => {\n      if (this.state.klassDropdown) {\n        if (this.myRefKlassButton.current.contains(e.target) || this.klassDropdownRef.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleKlassDropdownClick();\n      }\n\n      if (this.state.progressionDropdown) {\n        if (this.myRefProgressionButton.current.contains(e.target) || this.progressionDropdownRef.current.contains(e.target)) {\n          return;\n        }\n\n        this.handleProgressionDropdownClick();\n      }\n    };\n\n    this.handleKlassDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        klassDropdown: !this.state.klassDropdown\n      }));\n    };\n\n    this.handleProgressionDropdownClick = () => {\n      this.setState(_objectSpread({}, this.state, {\n        progressionDropdown: !this.state.progressionDropdown\n      }));\n    };\n\n    this.renderKlassDropdown = () => {\n      const klasses = this.props.klasses;\n      const klassDropdown = this.state.klassDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu klass-dropdown \".concat(klassDropdown ? 'opened' : 'closed'),\n        ref: this.myRefKlassButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, klasses.allIds.map((klassId, index) => {\n        const klass = klasses.byId[klassId];\n        return React.createElement(NavLink, {\n          to: \"/classes/\".concat(klass.id),\n          onClick: this.handleKlassDropdownClick,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Class \", klass.name);\n      }));\n    };\n\n    this.renderProgressionDropdown = () => {\n      const progressionDropdown = this.state.progressionDropdown;\n      return React.createElement(\"div\", {\n        className: \"dropdown-menu progression-dropdown \".concat(progressionDropdown ? 'opened' : 'closed'),\n        ref: this.myRefProgressionButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/progressions/new\",\n        onClick: this.handleProgressionDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Create New\"), React.createElement(NavLink, {\n        to: \"/progressions\",\n        onClick: this.handleProgressionDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"All Progressions\"));\n    };\n\n    this.renderNavBar = () => {\n      const currentUser = this.props.currentUser;\n\n      if (currentUser) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/classes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Home\"), React.createElement(\"div\", {\n          className: \"klass-dropdown\",\n          ref: this.klassDropdownRef,\n          onClick: this.handleKlassDropdownClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Classes\"), React.createElement(\"div\", {\n          className: \"klass-dropdown\",\n          ref: this.progressionDropdownRef,\n          onClick: this.handleProgressionDropdownClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Progressions\"), React.createElement(\"div\", {\n          className: \"login-logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Logout\"))), React.createElement(\"div\", {\n          className: \"navbar-dropdowns\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, this.renderKlassDropdown(), this.renderProgressionDropdown()));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"login-logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Login\"))));\n      }\n    };\n\n    this.myRefKlassButton = React.createRef();\n    this.myRefProgressionButton = React.createRef();\n    this.klassDropdownRef = React.createRef();\n    this.progressionDropdownRef = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.renderNavBar());\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/navbar/NavBar.js"],"names":["React","Component","NavLink","NavBar","constructor","props","state","klassDropdown","progressionDropdown","handleClick","e","myRefKlassButton","current","contains","target","klassDropdownRef","handleKlassDropdownClick","myRefProgressionButton","progressionDropdownRef","handleProgressionDropdownClick","setState","renderKlassDropdown","klasses","allIds","map","klassId","index","klass","byId","id","name","renderProgressionDropdown","renderNavBar","currentUser","createRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './navbar.css'\n\nclass NavBar extends Component{\n  constructor(props){\n    super(props)\n    this.myRefKlassButton = React.createRef()\n    this.myRefProgressionButton = React.createRef()\n    this.klassDropdownRef = React.createRef()\n    this.progressionDropdownRef = React.createRef()\n  }\n\n  state = {\n    klassDropdown: false,\n    progressionDropdown: false\n  }\n\n  componentDidMount(){\n    document.addEventListener('mousedown', this.handleClick)\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener('mousedown', this.handleClick)\n  }\n\n  handleClick = (e) => {\n    if (this.state.klassDropdown){\n      if (this.myRefKlassButton.current.contains(e.target) || this.klassDropdownRef.current.contains(e.target)) { return }\n      this.handleKlassDropdownClick()\n    }\n    if (this.state.progressionDropdown){\n      if (this.myRefProgressionButton.current.contains(e.target) || this.progressionDropdownRef.current.contains(e.target)) { return }\n      this.handleProgressionDropdownClick()\n    }\n  }\n\n  handleKlassDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      klassDropdown: !this.state.klassDropdown\n    })\n  }\n\n  handleProgressionDropdownClick = () => {\n    this.setState({\n      ...this.state,\n      progressionDropdown: !this.state.progressionDropdown\n    })\n  }\n\n  renderKlassDropdown = () => {\n    const { klasses } = this.props\n    const { klassDropdown } = this.state\n    return (\n      <div className={`dropdown-menu klass-dropdown ${klassDropdown ? 'opened': 'closed'}`} ref={this.myRefKlassButton}>\n        {klasses.allIds.map((klassId, index) => {\n          const klass = klasses.byId[klassId]\n          return (\n            <NavLink\n              to={`/classes/${klass.id}`}\n              onClick={this.handleKlassDropdownClick}\n              key={index}\n              >\n              Class {klass.name}\n            </NavLink>\n            )\n        })}\n      </div>\n    )\n  }\n\n  renderProgressionDropdown = () => {\n    const { progressionDropdown } = this.state\n    return (\n      <div className={`dropdown-menu progression-dropdown ${progressionDropdown ? 'opened' : 'closed'}`} ref={this.myRefProgressionButton}>\n        <NavLink\n          to={`/progressions/new`}\n          onClick={this.handleProgressionDropdownClick}\n          >\n          Create New\n        </NavLink>\n        <NavLink\n          to={`/progressions`}\n          onClick={this.handleProgressionDropdownClick}\n          >\n          All Progressions\n        </NavLink>\n      </div>\n    )\n  }\n\n  renderNavBar = () => {\n    const { currentUser } = this.props\n    if (currentUser) {\n      return (\n        <div>\n          <div className=\"navbar\">\n            <NavLink to=\"/classes\">Home</NavLink>\n            <div className=\"klass-dropdown\" ref={this.klassDropdownRef} onClick={this.handleKlassDropdownClick}>\n              Classes\n            </div>\n            <div className=\"klass-dropdown\" ref={this.progressionDropdownRef} onClick={this.handleProgressionDropdownClick}>\n              Progressions\n            </div>\n            <div className=\"login-logout\">\n              <NavLink to=\"/logout\">Logout</NavLink>\n            </div>\n          </div>\n          <div className=\"navbar-dropdowns\">\n            {this.renderKlassDropdown()}\n            {this.renderProgressionDropdown()}\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div className=\"navbar\">\n            <div className=\"login-logout\">\n              <NavLink to=\"/login\">Login</NavLink>\n            </div>\n          </div>\n        </div>\n      )\n    }\n\n  }\n\n  render(){\n    return (\n      <>\n        {this.renderNavBar()}\n      </>\n    )\n  }\n\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}