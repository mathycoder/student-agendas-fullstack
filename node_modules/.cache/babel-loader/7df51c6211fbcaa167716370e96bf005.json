{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst RenderItem = ({\n  klassShow,\n  progression,\n  videos,\n  reflections,\n  itemIndex,\n  selectedProgressionId,\n  handleProgressionClick,\n  studentShowSettings\n}) => {\n  return progression.items.map((itemChildId, index) => {\n    let item;\n    let highlighted;\n\n    if (!studentShowSettings && !klassShow) {\n      highlighted = selectedProgressionId === \"progression\".concat(progression.id) && index === itemIndex ? \"highlighted\" : selectedProgressionId ? 'unhighlighted' : '';\n    } else if (studentShowSettings && !klassShow) {\n      highlighted = selectedProgressionId === \"progression\".concat(progression.id) ? '' : \"unhighlighted\";\n    } else if (klassShow) {\n      highlighted = \"unhighlighted\";\n    }\n\n    if (itemChildId.includes(\"video\")) {\n      if (videos.allIds.length > 0) {\n        const video = videos.byId[itemChildId];\n        item = React.createElement(\"div\", {\n          key: index,\n          onClick: handleProgressionClick ? e => handleProgressionClick(progression, index) : undefined,\n          className: \"student-show-progression-item \".concat(highlighted),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: video.thumbnailUrl,\n          alt: \"learning video\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"student-show-progression-item-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, video.title));\n      } else {\n        item = React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }\n    } else if (itemChildId.includes(\"reflection\")) {\n      if (reflections.allIds.length > 0) {\n        const reflection = reflections.byId[itemChildId];\n        item = React.createElement(\"div\", {\n          key: index,\n          onClick: handleProgressionClick ? e => handleProgressionClick(progression, index) : undefined,\n          className: \"student-show-progression-item reflection \".concat(highlighted),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"/paper-pencil.png\",\n          alt: \"learning reflection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"student-show-progression-item-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, reflection.title));\n      } else {\n        item = React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n    }\n\n    return item;\n  });\n};\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  };\n}\n\nexport default connect(mapStateToProps, null)(RenderItem);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js"],"names":["React","connect","RenderItem","klassShow","progression","videos","reflections","itemIndex","selectedProgressionId","handleProgressionClick","studentShowSettings","items","map","itemChildId","index","item","highlighted","id","includes","allIds","length","video","byId","e","undefined","thumbnailUrl","title","reflection","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nconst RenderItem = ({klassShow, progression, videos, reflections, itemIndex, selectedProgressionId, handleProgressionClick, studentShowSettings}) => {\n  return progression.items.map((itemChildId, index) => {\n    let item\n    let highlighted\n    if (!studentShowSettings && !klassShow){\n      highlighted = selectedProgressionId === `progression${progression.id}` && index === itemIndex ?\n        \"highlighted\" : (selectedProgressionId ? 'unhighlighted' : '')\n    } else if (studentShowSettings && !klassShow) {\n      highlighted = selectedProgressionId === `progression${progression.id}` ?\n        '' : \"unhighlighted\"\n    } else if (klassShow) {\n      highlighted = \"unhighlighted\"\n    }\n\n    if (itemChildId.includes(\"video\")) {\n      if (videos.allIds.length > 0){\n        const video = videos.byId[itemChildId]\n        item = (\n        <div key={index}\n          onClick={handleProgressionClick ? (e => handleProgressionClick(progression, index)) : undefined}\n          className={`student-show-progression-item ${highlighted}`}>\n          <img src={video.thumbnailUrl} alt=\"learning video\" />\n          <br/>\n          <div className=\"student-show-progression-item-title\">{video.title}</div>\n        </div>\n       )\n      } else {\n        item = (<div key={index}></div>)\n      }\n    } else if (itemChildId.includes(\"reflection\")) {\n      if (reflections.allIds.length > 0){\n        const reflection = reflections.byId[itemChildId]\n        item = (\n        <div\n          key={index}\n          onClick={handleProgressionClick ? (e => handleProgressionClick(progression, index)) : undefined}\n          className={`student-show-progression-item reflection ${highlighted}`}>\n          <img src=\"/paper-pencil.png\" alt=\"learning reflection\" />\n\n          <div className=\"student-show-progression-item-title\">{reflection.title}</div>\n        </div>\n       )\n      } else {\n        item = (<div key={index}></div>)\n      }\n    }\n    return item\n  })\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  }\n}\n\nexport default connect(mapStateToProps, null)(RenderItem)\n"]},"metadata":{},"sourceType":"module"}