{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/NewProgressionContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport VideoSearchContainer from '../videos/VideoSearchContainer';\nimport NewProgressionMenuBar from './NewProgressionMenuBar';\nimport NewProgression from './NewProgression';\nimport DisplayPreview from '../videos/DisplayPreview';\nimport './Progression.css';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport { addProgression } from '../../actions/progressionActions';\n\nclass NewProgressionContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: undefined,\n      name: \"\",\n      currProgression: [],\n      menuSelect: \"Add YouTube Video\",\n      selectedIndex: \"\"\n    };\n\n    this.onNameInputChange = event => {\n      this.setState(_objectSpread({}, this.state, {\n        name: event.target.value,\n        currProgression: [...this.state.currProgression]\n      }));\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const progression = {\n        progression: {\n          name: this.state.name,\n          videos_attributes: [...this.state.currProgression]\n        }\n      };\n\n      if (!this.state.id) {\n        this.props.addProgression(progression);\n        this.props.history.push('/progressions');\n      } else {\n        fetch(\"/progressions/\".concat(this.state.id, \".json\"), {\n          method: 'PATCH',\n          body: JSON.stringify(progression),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(json => {\n          this.props.history.push('/progressions');\n        });\n      }\n    };\n\n    this.handleDragOver = event => {\n      event.preventDefault();\n      document.querySelector('.progression').classList.add(\"drag-over-progression\");\n    };\n\n    this.handleDragLeave = event => {\n      event.preventDefault();\n      document.querySelector('.progression').classList.remove(\"drag-over-progression\");\n    };\n\n    this.handleDragStart = (event, video) => {\n      let data = JSON.stringify(video);\n      event.dataTransfer.setData(\"video\", data);\n    };\n\n    this.handleOnDrop = event => {\n      let video = event.dataTransfer.getData(\"video\");\n      video = JSON.parse(video);\n      this.addToProgression(video);\n      document.querySelector('.progression').classList.remove(\"drag-over-progression\");\n    };\n\n    this.addToProgression = video => {\n      const any = this.state.currProgression.find(vid => vid.videoId === video.videoId);\n\n      if (!any) {\n        this.setState(_objectSpread({}, this.state, {\n          currProgression: [...this.state.currProgression, video],\n          draggedItem: _objectSpread({}, this.state.draggedItem)\n        }));\n      }\n    };\n\n    this.handleProgressionItemClick = index => {\n      this.setState(_objectSpread({}, this.state, {\n        currProgression: [...this.state.currProgression],\n        selectedIndex: index,\n        menuSelect: \"Edit Progression\"\n      }));\n    };\n\n    this.handleMenuClick = event => {\n      const index = event.target.innerText === \"Edit Progression\" && this.state.currProgression.length > 0 ? 0 : \"\";\n      this.setState(_objectSpread({}, this.state, {\n        selectedIndex: index,\n        currProgression: [...this.state.currProgression],\n        menuSelect: event.target.innerText\n      }));\n    };\n\n    this.removeFromProgression = movie => {\n      this.setState(_objectSpread({}, this.state, {\n        currProgression: this.state.currProgression.filter(item => item !== movie),\n        menuSelect: \"Add YouTube Video\",\n        selectedIndex: \"\"\n      }));\n    };\n\n    this.progressionEmpty = () => {\n      return this.state.currProgression.length > 0 ? false : true;\n    };\n\n    this.handleDNDDragStart = attributes => {\n      const draggableId = attributes.draggableId;\n      document.querySelector(\"#item-\".concat(draggableId)).classList.add(\"item-dragging\");\n    };\n\n    this.handleDNDDragEnd = result => {\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n      document.querySelector(\"#item-\".concat(draggableId)).classList.remove(\"item-dragging\");\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.index !== source.index) {\n        const testArray = [...this.state.currProgression];\n        testArray.splice(source.index, 1);\n        testArray.splice(destination.index, 0, this.state.currProgression[source.index]);\n        this.setState(_objectSpread({}, this.state, {\n          currProgression: testArray\n        }));\n      }\n    };\n\n    this.renderForm = () => {\n      return React.createElement(\"form\", {\n        className: \"create-progression-form\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a title for this progression\",\n        value: this.state.name,\n        onChange: this.onNameInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"save progression\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }));\n    };\n  }\n\n  shouldComponentUpdate() {\n    debugger;\n  }\n\n  componentDidUpdate() {\n    const progId = this.props.match.params.id;\n\n    if (progId && progId !== \"new\" && !this.state.id && this.props.videos.allIds.length > 0) {\n      const progression = this.props.progressions.byId[\"progression\".concat(progId)];\n      progression.videos = progression.videos.map(vidId => this.props.videos.byId[vidId]);\n      this.setState(_objectSpread({}, this.state, {\n        currProgression: progression.videos,\n        name: progression.name,\n        id: progression.id\n      }));\n    }\n  }\n\n  render() {\n    console.log(this.props.progressions);\n    return React.createElement(\"div\", {\n      className: \"new-progression-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.renderForm(), React.createElement(DragDropContext, {\n      onDragEnd: this.handleDNDDragEnd,\n      onDragStart: this.handleDNDDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable-1\",\n      direction: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, provided => React.createElement(NewProgression, Object.assign({\n      innerRef: provided.innerRef\n    }, provided.droppableProps, {\n      removeFromProgression: this.removeFromProgression,\n      currProgression: this.state.currProgression,\n      handleProgressionItemClick: this.handleProgressionItemClick,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleOnDrop: this.handleOnDrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), provided.placeholder))), React.createElement(NewProgressionMenuBar, {\n      handleMenuClick: this.handleMenuClick,\n      menuSelect: this.state.menuSelect,\n      progressionEmpty: this.progressionEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), this.state.menuSelect === \"Edit Progression\" && this.state.selectedIndex !== '' ? React.createElement(DisplayPreview, {\n      video: this.state.currProgression[this.state.selectedIndex],\n      removeFromProgression: this.removeFromProgression,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }) : '', this.state.menuSelect === \"Add YouTube Video\" ? React.createElement(VideoSearchContainer, {\n      addToProgression: this.addToProgression,\n      handleDragStart: this.handleDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }) : '');\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProgression: progression => dispatch(addProgression(progression))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProgressionContainer); // export default NewProgressionContainer","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/NewProgressionContainer.js"],"names":["React","Component","VideoSearchContainer","NewProgressionMenuBar","NewProgression","DisplayPreview","DragDropContext","Droppable","connect","addProgression","NewProgressionContainer","state","id","undefined","name","currProgression","menuSelect","selectedIndex","onNameInputChange","event","setState","target","value","handleFormSubmit","preventDefault","progression","videos_attributes","props","history","push","fetch","method","body","JSON","stringify","headers","then","resp","json","handleDragOver","document","querySelector","classList","add","handleDragLeave","remove","handleDragStart","video","data","dataTransfer","setData","handleOnDrop","getData","parse","addToProgression","any","find","vid","videoId","draggedItem","handleProgressionItemClick","index","handleMenuClick","innerText","length","removeFromProgression","movie","filter","item","progressionEmpty","handleDNDDragStart","attributes","draggableId","handleDNDDragEnd","result","destination","source","testArray","splice","renderForm","shouldComponentUpdate","componentDidUpdate","progId","match","params","videos","allIds","progressions","byId","map","vidId","render","console","log","provided","innerRef","droppableProps","placeholder","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport VideoSearchContainer from '../videos/VideoSearchContainer'\nimport NewProgressionMenuBar from './NewProgressionMenuBar'\nimport NewProgression from './NewProgression'\nimport DisplayPreview from '../videos/DisplayPreview'\nimport './Progression.css';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux'\nimport { addProgression } from '../../actions/progressionActions'\n\nclass NewProgressionContainer extends Component {\n  state = {\n    id: undefined,\n    name: \"\",\n    currProgression: [],\n    menuSelect: \"Add YouTube Video\",\n    selectedIndex: \"\"\n  }\n\n  shouldComponentUpdate(){\n    debugger\n  }\n\n  componentDidUpdate(){\n    const progId = this.props.match.params.id\n    if (progId && progId !== \"new\" && !this.state.id && this.props.videos.allIds.length > 0) {\n      const progression = this.props.progressions.byId[`progression${progId}`]\n      progression.videos = progression.videos.map(vidId => this.props.videos.byId[vidId])\n\n      this.setState({\n        ...this.state,\n        currProgression: progression.videos,\n        name: progression.name,\n        id: progression.id\n      })\n    }\n  }\n\n  onNameInputChange = event => {\n    this.setState({\n      ...this.state,\n      name: event.target.value,\n      currProgression: [...this.state.currProgression]\n    })\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault()\n    const progression = {\n      progression: {\n        name: this.state.name,\n        videos_attributes: [...this.state.currProgression]\n      }\n    }\n    if (!this.state.id) {\n      this.props.addProgression(progression)\n      this.props.history.push('/progressions');\n    } else {\n      fetch(`/progressions/${this.state.id}.json`, {\n        method: 'PATCH',\n        body: JSON.stringify(progression),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(resp => resp.json())\n        .then(json => {\n          this.props.history.push('/progressions');\n        })\n    }\n  }\n\n  handleDragOver = event => {\n    event.preventDefault()\n    document.querySelector('.progression').classList.add(\"drag-over-progression\")\n  }\n\n  handleDragLeave = event => {\n    event.preventDefault()\n    document.querySelector('.progression').classList.remove(\"drag-over-progression\")\n  }\n\n  handleDragStart = (event, video) => {\n    let data = JSON.stringify(video)\n    event.dataTransfer.setData(\"video\", data)\n  }\n\n  handleOnDrop = (event) => {\n    let video = event.dataTransfer.getData(\"video\")\n    video = JSON.parse(video)\n    this.addToProgression(video)\n    document.querySelector('.progression').classList.remove(\"drag-over-progression\")\n  }\n\n  addToProgression = (video) => {\n    const any = this.state.currProgression.find(vid => vid.videoId === video.videoId)\n    if (!any) {\n      this.setState({\n        ...this.state,\n        currProgression: [...this.state.currProgression, video],\n        draggedItem: {...this.state.draggedItem}\n      })\n    }\n  }\n\n  handleProgressionItemClick = index => {\n    this.setState({\n      ...this.state,\n      currProgression: [...this.state.currProgression],\n      selectedIndex: index,\n      menuSelect: \"Edit Progression\"\n    })\n  }\n\n  handleMenuClick = (event) => {\n    const index = event.target.innerText === \"Edit Progression\" && this.state.currProgression.length > 0 ? 0 : \"\"\n    this.setState({\n      ...this.state,\n      selectedIndex: index,\n      currProgression: [...this.state.currProgression],\n      menuSelect: event.target.innerText\n    })\n  }\n\n  removeFromProgression = (movie) => {\n    this.setState({\n      ...this.state,\n      currProgression: this.state.currProgression.filter(item => item !== movie),\n      menuSelect: \"Add YouTube Video\",\n      selectedIndex: \"\"\n    })\n  }\n\n  progressionEmpty = () => {\n    return this.state.currProgression.length > 0 ? false : true\n  }\n\n  handleDNDDragStart = attributes => {\n    const {draggableId} = attributes\n    document.querySelector(`#item-${draggableId}`).classList.add(\"item-dragging\")\n  }\n\n  handleDNDDragEnd = result => {\n    const { destination, source, draggableId } = result\n    document.querySelector(`#item-${draggableId}`).classList.remove(\"item-dragging\")\n    if (!destination) {\n      return\n    }\n\n    if (destination.index !== source.index) {\n      const testArray = [...this.state.currProgression]\n      testArray.splice(source.index, 1)\n      testArray.splice(destination.index, 0, this.state.currProgression[source.index])\n      this.setState({\n        ...this.state,\n        currProgression: testArray\n      })\n    }\n\n  }\n\n  renderForm = () => {\n    return (\n      <form className=\"create-progression-form\" onSubmit={this.handleFormSubmit}>\n        <input type=\"text\"\n          placeholder=\"Enter a title for this progression\"\n          value={this.state.name}\n          onChange={this.onNameInputChange}/>\n        <input type=\"submit\" value=\"save progression\" />\n      </form>\n    )\n  }\n\n  render(){\n    console.log(this.props.progressions)\n    return (\n      <div className=\"new-progression-container\">\n        {this.renderForm()}\n        <DragDropContext\n          onDragEnd={this.handleDNDDragEnd}\n          onDragStart={this.handleDNDDragStart}\n          >\n          <Droppable droppableId=\"droppable-1\" direction=\"horizontal\">\n            {(provided) => (\n              <NewProgression\n                innerRef={provided.innerRef}\n                {...provided.droppableProps}\n                removeFromProgression={this.removeFromProgression}\n                currProgression={this.state.currProgression}\n                handleProgressionItemClick={this.handleProgressionItemClick}\n                handleDragOver={this.handleDragOver}\n                handleDragLeave={this.handleDragLeave}\n                handleOnDrop={this.handleOnDrop} >\n                  {provided.placeholder}\n              </NewProgression>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <NewProgressionMenuBar handleMenuClick={this.handleMenuClick} menuSelect={this.state.menuSelect} progressionEmpty={this.progressionEmpty}/>\n        {this.state.menuSelect === \"Edit Progression\" && this.state.selectedIndex !== '' ? <DisplayPreview video={this.state.currProgression[this.state.selectedIndex]} removeFromProgression={this.removeFromProgression}/> : ''}\n        {this.state.menuSelect === \"Add YouTube Video\" ? <VideoSearchContainer addToProgression={this.addToProgression} handleDragStart={this.handleDragStart} /> : ''}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    progressions: state.progressions,\n    videos: state.videos\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    addProgression: (progression) => dispatch(addProgression(progression))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewProgressionContainer)\n\n// export default NewProgressionContainer\n"]},"metadata":{},"sourceType":"module"}