{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions';\nimport StudentShowAgenda from './StudentShowAgenda';\nimport StudentShowProgression from './StudentShowProgression';\nimport '../css/student-show.css';\n\nclass StudentShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      student: undefined,\n      selectedProgressionId: undefined,\n      itemIndex: undefined,\n      initialLoad: undefined\n    };\n\n    this.setInitialLoad = () => {\n      const _this$props = this.props,\n            progressions = _this$props.progressions,\n            studentProgressions = _this$props.studentProgressions,\n            student = _this$props.student;\n      const _this$state = this.state,\n            selectedProgressionId = _this$state.selectedProgressionId,\n            itemIndex = _this$state.itemIndex,\n            initialLoad = _this$state.initialLoad;\n\n      if (!initialLoad && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0) {\n        const myProgressions = getStudentProgressions(student, studentProgressions, progressions);\n        this.setState(_objectSpread({}, this.state, {\n          initialLoad: true,\n          selectedProgressionId: \"progression\".concat(myProgressions[0].id),\n          itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n        }));\n      }\n    };\n\n    this.setStudent = () => {\n      const _this$props2 = this.props,\n            students = _this$props2.students,\n            handleSetStudent = _this$props2.handleSetStudent;\n      const studentId = this.props.match.params.id;\n      const student = students.byId[\"student\".concat(studentId)];\n\n      if (student && !this.state.student) {\n        handleSetStudent(student);\n        this.setState(_objectSpread({}, this.state, {\n          student: student\n        }));\n      }\n    };\n\n    this.handleProgressionClick = (progression, index) => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedProgressionId: \"progression\".concat(progression.id),\n        itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleStudentShowPage();\n  }\n\n  componentDidUpdate() {\n    this.setStudent();\n    this.setInitialLoad();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          student = _this$state2.student,\n          selectedProgressionId = _this$state2.selectedProgressionId,\n          itemIndex = _this$state2.itemIndex;\n    const _this$props3 = this.props,\n          progressions = _this$props3.progressions,\n          studentProgressions = _this$props3.studentProgressions,\n          reflections = _this$props3.reflections,\n          videos = _this$props3.videos;\n\n    if (student) {\n      const myProgs = getStudentProgressions(student, studentProgressions, progressions);\n      return React.createElement(\"div\", {\n        className: \"myagenda-wrapper student-show-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(StudentShowAgenda, {\n        itemIndex: itemIndex,\n        selectedProgressionId: selectedProgressionId,\n        handleProgressionClick: this.handleProgressionClick,\n        progressions: myProgs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(StudentShowProgression, {\n        key: Math.random(),\n        itemIndex: itemIndex,\n        student: student,\n        progressions: myProgs.find(prog => \"progression\".concat(prog.id) === selectedProgressionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/show/StudentShowContainer.js"],"names":["React","Component","connect","getStudentProgressions","StudentShowAgenda","StudentShowProgression","StudentShowContainer","state","student","undefined","selectedProgressionId","itemIndex","initialLoad","setInitialLoad","props","progressions","studentProgressions","allIds","length","myProgressions","setState","id","items","findIndex","el","includes","setStudent","students","handleSetStudent","studentId","match","params","byId","handleProgressionClick","progression","index","componentDidMount","handleStudentShowPage","componentDidUpdate","render","reflections","videos","myProgs","Math","random","find","prog","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getStudentProgressions } from '../../progressions/helpers/getStudentProgressions'\nimport StudentShowAgenda from './StudentShowAgenda'\nimport StudentShowProgression from './StudentShowProgression'\nimport '../css/student-show.css'\n\nclass StudentShowContainer extends Component {\n  state = {\n    student: undefined,\n    selectedProgressionId: undefined,\n    itemIndex: undefined,\n    initialLoad: undefined\n  }\n\n  componentDidMount(){\n    this.props.handleStudentShowPage()\n  }\n\n  componentDidUpdate(){\n    this.setStudent()\n    this.setInitialLoad()\n  }\n\n  setInitialLoad = () => {\n    const { progressions, studentProgressions, student } = this.props\n    const { selectedProgressionId, itemIndex, initialLoad } = this.state\n    if (!initialLoad && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0){\n      const myProgressions = getStudentProgressions(student, studentProgressions, progressions)\n      this.setState({\n        ...this.state,\n        initialLoad: true,\n        selectedProgressionId: `progression${myProgressions[0].id}`,\n        itemIndex: myProgressions[0].items.findIndex(el => el.includes(\"reflection\"))\n      })\n    }\n  }\n\n\n  setStudent = () => {\n    const { students, handleSetStudent } = this.props\n    const studentId = this.props.match.params.id\n    const student = students.byId[`student${studentId}`]\n    if (student && !this.state.student){\n      handleSetStudent(student)\n      this.setState({\n        ...this.state,\n        student: student\n      })\n    }\n  }\n\n  handleProgressionClick = (progression, index) => {\n    this.setState({\n      ...this.state,\n      selectedProgressionId: `progression${progression.id}`,\n      itemIndex: progression.items.findIndex(el => el.includes(\"reflection\"))\n    })\n  }\n\n\n  render(){\n    const { student, selectedProgressionId, itemIndex } = this.state\n    const { progressions, studentProgressions, reflections, videos } = this.props\n    if (student) {\n      const myProgs = getStudentProgressions(student, studentProgressions, progressions)\n      return (\n        <div className=\"myagenda-wrapper student-show-wrapper\">\n          <StudentShowAgenda\n            itemIndex={itemIndex}\n            selectedProgressionId={selectedProgressionId}\n            handleProgressionClick={this.handleProgressionClick}\n            progressions={myProgs}/>\n          <StudentShowProgression\n              key={Math.random()}\n              itemIndex={itemIndex}\n              student={student}\n              progressions={myProgs.find(prog => `progression${prog.id}` === selectedProgressionId)} />\n        </div>\n      )\n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    students: state.students,\n    progressions: state.progressions,\n    studentProgressions: state.studentProgressions,\n    reflections: state.reflections,\n    videos: state.videos\n  }\n}\n\nexport default connect(mapStateToProps, null)(StudentShowContainer)\n"]},"metadata":{},"sourceType":"module"}