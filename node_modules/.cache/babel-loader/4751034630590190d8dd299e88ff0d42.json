{"ast":null,"code":"export function fetchKlasses() {\n  return dispatch => {\n    dispatch({\n      type: 'START_ADDING_KLASSES_REQUEST'\n    });\n    fetch(\"/klasses\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(json => {\n      if (json.error) {\n        console.log(\"can't load klasses when not logged in\");\n      } else {\n        dispatch({\n          type: 'ADD_KLASSES',\n          klasses: json.klasses,\n          counts: json.counts\n        });\n      }\n    });\n  };\n}\nexport function addKlass(klass) {\n  return dispatch => {\n    dispatch({\n      type: 'START_ADDING_KLASS_REQUEST',\n      klass\n    });\n    fetch('/klasses', {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(klass),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(klass => {\n      if (klass.error) {\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: klass.error\n        });\n      } else {\n        dispatch({\n          type: 'ADD_KLASS',\n          klass\n        });\n      }\n    });\n  };\n}\nexport function editKlass(klass) {\n  return dispatch => {\n    dispatch({\n      type: 'START_EDITING_KLASS_REQUEST',\n      klass\n    });\n    fetch(\"/klasses/\".concat(klass.id), {\n      method: \"PATCH\",\n      credentials: \"include\",\n      body: JSON.stringify(klass),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(klass => {\n      if (klass.error) {\n        dispatch({\n          type: 'ADD_FLASH_MESSAGE',\n          message: klass.error\n        });\n      } else {\n        dispatch({\n          type: 'EDIT_KLASS',\n          klass\n        });\n      }\n    });\n  };\n}\nexport function removeKlass(klassId) {\n  return dispatch => {\n    dispatch({\n      type: 'START_REMOVING_KLASS_REQUEST'\n    });\n    fetch(\"/klasses/\".concat(klassId), {\n      method: 'DELETE',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(json => {\n      dispatch({\n        type: 'REMOVE_KLASS',\n        klassId\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/src/actions/klassActions.js"],"names":["fetchKlasses","dispatch","type","fetch","credentials","method","headers","then","resp","json","error","console","log","klasses","counts","addKlass","klass","body","JSON","stringify","message","editKlass","id","removeKlass","klassId"],"mappings":"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","sourcesContent":["export function fetchKlasses() {\n  return (dispatch) => {\n    dispatch({type: 'START_ADDING_KLASSES_REQUEST'})\n    fetch(`/klasses`, {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.error){\n          console.log(\"can't load klasses when not logged in\")\n        } else {\n          dispatch({ type: 'ADD_KLASSES', klasses: json.klasses, counts: json.counts })\n        }\n      })\n  }\n}\n\nexport function addKlass(klass){\n  return (dispatch) => {\n    dispatch({type: 'START_ADDING_KLASS_REQUEST', klass })\n    fetch('/klasses', {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(klass),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(klass => {\n        if (klass.error){\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: klass.error })\n        } else {\n          dispatch({ type: 'ADD_KLASS', klass })\n        }\n      })\n  }\n}\n\nexport function editKlass(klass){\n  return (dispatch) => {\n    dispatch({type: 'START_EDITING_KLASS_REQUEST', klass})\n    fetch(`/klasses/${klass.id}`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      body: JSON.stringify(klass),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(klass => {\n        if (klass.error){\n          dispatch({ type: 'ADD_FLASH_MESSAGE', message: klass.error })\n        } else {\n          dispatch({ type: 'EDIT_KLASS', klass })\n        }\n      })\n  }\n}\n\nexport function removeKlass(klassId){\n  return (dispatch) => {\n    dispatch({type: 'START_REMOVING_KLASS_REQUEST'})\n    fetch(`/klasses/${klassId}`, {\n      method: 'DELETE',\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        dispatch({ type: 'REMOVE_KLASS', klassId })\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}