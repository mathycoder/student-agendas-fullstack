{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst RenderItem = ({\n  progression,\n  videos,\n  reflections,\n  itemIndex,\n  selectedProgressionId\n}) => {\n  return progression.items.map((itemChildId, index) => {\n    let item;\n    debugger;\n    const highlighted = selectedProgressionId === \"progression\".concat(progression.id) && index === itemIndex ? \"highlighted\" : '';\n\n    if (itemChildId.includes(\"video\")) {\n      if (videos.allIds.length > 0) {\n        const video = videos.byId[itemChildId];\n        item = React.createElement(\"div\", {\n          key: index,\n          className: \"student-show-progression-item \".concat(highlighted),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: video.thumbnailUrl,\n          alt: \"learning video\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"student-show-progression-item-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, video.title));\n      } else {\n        item = React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n    } else if (itemChildId.includes(\"reflection\")) {\n      if (reflections.allIds.length > 0) {\n        const reflection = reflections.byId[itemChildId];\n        item = React.createElement(\"div\", {\n          key: index,\n          className: \"student-show-progression-item reflection \".concat(highlighted),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"/paper-pencil.png\",\n          alt: \"learning reflection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"student-show-progression-item-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, reflection.title));\n      } else {\n        item = React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      }\n    }\n\n    return item;\n  });\n};\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  };\n}\n\nexport default connect(mapStateToProps, null)(RenderItem);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js"],"names":["React","connect","RenderItem","progression","videos","reflections","itemIndex","selectedProgressionId","items","map","itemChildId","index","item","highlighted","id","includes","allIds","length","video","byId","thumbnailUrl","title","reflection","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,SAAnC;AAA8CC,EAAAA;AAA9C,CAAD,KAA0E;AAC3F,SAAOJ,WAAW,CAACK,KAAZ,CAAkBC,GAAlB,CAAsB,CAACC,WAAD,EAAcC,KAAd,KAAwB;AACnD,QAAIC,IAAJ;AACA;AACA,UAAMC,WAAW,GAAGN,qBAAqB,0BAAmBJ,WAAW,CAACW,EAA/B,CAArB,IAA4DH,KAAK,KAAKL,SAAtE,GAClB,aADkB,GACF,EADlB;;AAEA,QAAII,WAAW,CAACK,QAAZ,CAAqB,OAArB,CAAJ,EAAmC;AACjC,UAAIX,MAAM,CAACY,MAAP,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AAC3B,cAAMC,KAAK,GAAGd,MAAM,CAACe,IAAP,CAAYT,WAAZ,CAAd;AACAE,QAAAA,IAAI,GACJ;AAAK,UAAA,GAAG,EAAED,KAAV;AAAiB,UAAA,SAAS,0CAAmCE,WAAnC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEK,KAAK,CAACE,YAAhB;AAA8B,UAAA,GAAG,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDF,KAAK,CAACG,KAA5D,CAHF,CADA;AAOD,OATD,MASO;AACLT,QAAAA,IAAI,GAAI;AAAK,UAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;AACF,KAbD,MAaO,IAAID,WAAW,CAACK,QAAZ,CAAqB,YAArB,CAAJ,EAAwC;AAC7C,UAAIV,WAAW,CAACW,MAAZ,CAAmBC,MAAnB,GAA4B,CAAhC,EAAkC;AAChC,cAAMK,UAAU,GAAGjB,WAAW,CAACc,IAAZ,CAAiBT,WAAjB,CAAnB;AACAE,QAAAA,IAAI,GACJ;AAAK,UAAA,GAAG,EAAED,KAAV;AAAiB,UAAA,SAAS,qDAA8CE,WAA9C,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAC,mBAAT;AAA6B,UAAA,GAAG,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAGE;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDS,UAAU,CAACD,KAAjE,CAHF,CADA;AAOD,OATD,MASO;AACLT,QAAAA,IAAI,GAAI;AAAK,UAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;AACF;;AACD,WAAOC,IAAP;AACD,GAjCM,CAAP;AAkCD,CAnCD;;AAqCA,SAASW,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAO;AACLpB,IAAAA,MAAM,EAAEoB,KAAK,CAACpB,MADT;AAELC,IAAAA,WAAW,EAAEmB,KAAK,CAACnB;AAFd,GAAP;AAID;;AAED,eAAeJ,OAAO,CAACsB,eAAD,EAAkB,IAAlB,CAAP,CAA+BrB,UAA/B,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nconst RenderItem = ({progression, videos, reflections, itemIndex, selectedProgressionId}) => {\n  return progression.items.map((itemChildId, index) => {\n    let item\n    debugger\n    const highlighted = selectedProgressionId === `progression${progression.id}` && index === itemIndex ?\n      \"highlighted\" : ''\n    if (itemChildId.includes(\"video\")) {\n      if (videos.allIds.length > 0){\n        const video = videos.byId[itemChildId]\n        item = (\n        <div key={index} className={`student-show-progression-item ${highlighted}`}>\n          <img src={video.thumbnailUrl} alt=\"learning video\" />\n          <br/>\n          <div className=\"student-show-progression-item-title\">{video.title}</div>\n        </div>\n       )\n      } else {\n        item = (<div key={index}></div>)\n      }\n    } else if (itemChildId.includes(\"reflection\")) {\n      if (reflections.allIds.length > 0){\n        const reflection = reflections.byId[itemChildId]\n        item = (\n        <div key={index} className={`student-show-progression-item reflection ${highlighted}`}>\n          <img src=\"/paper-pencil.png\" alt=\"learning reflection\" />\n\n          <div className=\"student-show-progression-item-title\">{reflection.title}</div>\n        </div>\n       )\n      } else {\n        item = (<div key={index}></div>)\n      }\n    }\n    return item\n  })\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  }\n}\n\nexport default connect(mapStateToProps, null)(RenderItem)\n"]},"metadata":{},"sourceType":"module"}