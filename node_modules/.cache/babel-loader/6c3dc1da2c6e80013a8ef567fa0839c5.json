{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/final/student-agendas/src/videos/DisplaySearchResults.js\";\nimport React from 'react';\nimport './VideoSearch.css';\n\nfunction formatTitle(unformattedTitle) {\n  const parser = new DOMParser();\n  let title = parser.parseFromString('<!doctype html><body>' + unformattedTitle, 'text/html');\n  return title.body.textContent;\n}\n\nfunction displayDate(video) {\n  const date = new Date(video.snippet.publishedAt);\n  const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  const month = MONTHS[date.getMonth()];\n  const day = date.getDate();\n  const year = date.getFullYear();\n  return \"\".concat(month, \" \").concat(day, \", \").concat(year);\n}\n\nconst DisplaySearchResults = props => {\n  return React.createElement(\"div\", {\n    className: \"search-videos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.videos.slice(0, 24).map((video, index) => {\n    const title = formatTitle(video.snippet.title);\n    return React.createElement(\"div\", {\n      dragable: true,\n      className: \"search-video\",\n      key: index,\n      onClick: event => props.handleVideoClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"searched video result\",\n      src: video.snippet.thumbnails.medium.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"creator-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"by \", video.snippet.channelTitle), React.createElement(\"div\", {\n      className: \"created-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, displayDate(video)));\n  }));\n};\n\nexport default DisplaySearchResults;","map":{"version":3,"sources":["/Users/adamsarli/Coding/final/student-agendas/src/videos/DisplaySearchResults.js"],"names":["React","formatTitle","unformattedTitle","parser","DOMParser","title","parseFromString","body","textContent","displayDate","video","date","Date","snippet","publishedAt","MONTHS","month","getMonth","day","getDate","year","getFullYear","DisplaySearchResults","props","videos","slice","map","index","event","handleVideoClick","thumbnails","medium","url","channelTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,CAAqBC,gBAArB,EAAsC;AACpC,QAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,MAAIC,KAAK,GAAGF,MAAM,CAACG,eAAP,CAAuB,0BAA0BJ,gBAAjD,EAAmE,WAAnE,CAAZ;AACA,SAAOG,KAAK,CAACE,IAAN,CAAWC,WAAlB;AACD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACzB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,OAAN,CAAcC,WAAvB,CAAb;AACA,QAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,CAAf;AACA,QAAMC,KAAK,GAAGD,MAAM,CAACJ,IAAI,CAACM,QAAL,EAAD,CAApB;AACA,QAAMC,GAAG,GAAGP,IAAI,CAACQ,OAAL,EAAZ;AACA,QAAMC,IAAI,GAAGT,IAAI,CAACU,WAAL,EAAb;AACA,mBAAUL,KAAV,cAAmBE,GAAnB,eAA2BE,IAA3B;AACD;;AAED,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAqB,EAArB,EAAyBC,GAAzB,CAA6B,CAAChB,KAAD,EAAQiB,KAAR,KAAkB;AAC9C,UAAMtB,KAAK,GAAGJ,WAAW,CAACS,KAAK,CAACG,OAAN,CAAcR,KAAf,CAAzB;AACA,WACE;AAAK,MAAA,QAAQ,MAAb;AAAc,MAAA,SAAS,EAAC,cAAxB;AAAuC,MAAA,GAAG,EAAEsB,KAA5C;AAAmD,MAAA,OAAO,EAAGC,KAAD,IAAWL,KAAK,CAACM,gBAAN,CAAuBF,KAAvB,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,uBAAT;AAAiC,MAAA,GAAG,EAAEjB,KAAK,CAACG,OAAN,CAAciB,UAAd,CAAyBC,MAAzB,CAAgCC,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B3B,KAA7B,CAFF,EAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkCK,KAAK,CAACG,OAAN,CAAcoB,YAAhD,CAHF,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BxB,WAAW,CAACC,KAAD,CAA1C,CAJF,CADF;AAQD,GAVA,CADH,CADF;AAeD,CAhBD;;AAkBA,eAAeY,oBAAf","sourcesContent":["import React from 'react';\nimport './VideoSearch.css';\n\nfunction formatTitle(unformattedTitle){\n  const parser = new DOMParser()\n  let title = parser.parseFromString('<!doctype html><body>' + unformattedTitle, 'text/html')\n  return title.body.textContent\n}\n\nfunction displayDate(video){\n  const date = new Date(video.snippet.publishedAt)\n  const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n  const month = MONTHS[date.getMonth()]\n  const day = date.getDate()\n  const year = date.getFullYear()\n  return `${month} ${day}, ${year}`\n}\n\nconst DisplaySearchResults = (props) => {\n  return (\n    <div className=\"search-videos\">\n      {props.videos.slice(0,24).map((video, index) => {\n        const title = formatTitle(video.snippet.title)\n        return (\n          <div dragable className=\"search-video\" key={index} onClick={(event) => props.handleVideoClick(index)}>\n            <img alt=\"searched video result\" src={video.snippet.thumbnails.medium.url} />\n            <div className=\"title-text\">{title}</div>\n            <div className=\"creator-text\">by {video.snippet.channelTitle}</div>\n            <div className=\"created-date\">{displayDate(video)}</div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DisplaySearchResults\n"]},"metadata":{},"sourceType":"module"}