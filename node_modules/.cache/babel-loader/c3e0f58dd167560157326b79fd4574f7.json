{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/agendas/AgendaContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { fetchStudentData } from '../../actions/studentActions';\nimport MyAgenda from './MyAgenda';\nimport MyProgression from './MyProgression';\nimport { connect } from 'react-redux';\nimport './myagenda.css';\nimport { getStudentProgressions } from '../progressions/helpers/getStudentProgressions';\nimport { updateStudentProgressionStatus } from '../../actions/studentProgressionActions';\nimport StudentShowSummary from '../students/show/StudentShowSummary';\nimport Toggle from './Toggle';\n\nclass AgendaContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialLoad: false,\n      selectedProgressionId: null,\n      itemIndex: 0,\n      summaryPage: false\n    };\n\n    this.handleProgressionClick = (progression, index) => {\n      this.setState(_objectSpread({}, this.state, {\n        selectedProgressionId: \"progression\".concat(progression.id),\n        itemIndex: index\n      }));\n    };\n\n    this.handleBackClick = () => {\n      const itemIndex = this.state.itemIndex;\n      this.setState(_objectSpread({}, this.state, {\n        itemIndex: itemIndex - 1\n      }));\n    };\n\n    this.handleNextClick = () => {\n      const itemIndex = this.state.itemIndex;\n      this.setState(_objectSpread({}, this.state, {\n        itemIndex: itemIndex + 1\n      }));\n    };\n\n    this.handleProgressionSubmit = progression => {\n      const _this$props = this.props,\n            updateStudentProgressionStatus = _this$props.updateStudentProgressionStatus,\n            currentUser = _this$props.currentUser;\n      updateStudentProgressionStatus(currentUser, progression, {\n        submitted: true\n      });\n      this.setState(_objectSpread({}, this.state, {\n        itemIndex: 0,\n        selectedProgressionId: null\n      }));\n    };\n\n    this.handleCurrentAgendaClick = e => {\n      this.setState(_objectSpread({}, this.state, {\n        summaryPage: false\n      }));\n    };\n\n    this.handleAllAssignmentsClick = e => {\n      this.setState(_objectSpread({}, this.state, {\n        summaryPage: true\n      }));\n    };\n\n    this.renderStudentSummary = () => {\n      const _this$props2 = this.props,\n            reflections = _this$props2.reflections,\n            currentUser = _this$props2.currentUser,\n            studentProgressions = _this$props2.studentProgressions,\n            progressions = _this$props2.progressions;\n      return React.createElement(StudentShowSummary, {\n        myAgenda: true,\n        currentUser: {\n          name: \"Teacher\"\n        },\n        student: currentUser,\n        reflections: reflections,\n        progressions: getStudentProgressions(currentUser, studentProgressions, progressions),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    };\n\n    this.renderMyAgenda = () => {\n      const _this$props3 = this.props,\n            currentUser = _this$props3.currentUser,\n            studentProgressions = _this$props3.studentProgressions,\n            progressions = _this$props3.progressions;\n      const _this$state = this.state,\n            selectedProgressionId = _this$state.selectedProgressionId,\n            itemIndex = _this$state.itemIndex,\n            summaryPage = _this$state.summaryPage;\n      return React.createElement(\"div\", {\n        className: \"myagenda-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(MyAgenda, {\n        itemIndex: itemIndex,\n        selectedProgressionId: selectedProgressionId,\n        handleProgressionClick: this.handleProgressionClick,\n        progressions: getStudentProgressions(currentUser, studentProgressions, progressions),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(MyProgression, {\n        key: Math.random(),\n        itemIndex: itemIndex,\n        handleProgressionSubmit: this.handleProgressionSubmit,\n        handleBackClick: this.handleBackClick,\n        handleNextClick: this.handleNextClick,\n        progression: getStudentProgressions(currentUser, studentProgressions, progressions).find(prog => \"progression\".concat(prog.id) === selectedProgressionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    };\n\n    this.renderNavBar = () => {\n      const summaryPage = this.state.summaryPage;\n      return React.createElement(\"div\", {\n        className: \"myagenda-navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"toggle-on\",\n        className: \"toggle toggle-left\",\n        name: \"toggle\",\n        value: \"false\",\n        type: \"radio\",\n        checked: !summaryPage,\n        onChange: this.handleToggleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"toggle-on\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Current Agenda\"), React.createElement(\"input\", {\n        id: \"toggle-off\",\n        className: \"toggle toggle-right\",\n        name: \"toggle\",\n        value: \"true\",\n        type: \"radio\",\n        checked: summaryPage,\n        onChange: this.handleToggleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"toggle-off\",\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"All Progressions\"));\n    };\n\n    this.handleToggleChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        summaryPage: !this.state.summaryPage\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const _this$props4 = this.props,\n          currentUser = _this$props4.currentUser,\n          fetchStudentData = _this$props4.fetchStudentData;\n\n    if (currentUser.type === \"student\") {\n      fetchStudentData(currentUser);\n    }\n  }\n\n  componentDidUpdate() {\n    const _this$props5 = this.props,\n          currentUser = _this$props5.currentUser,\n          progressions = _this$props5.progressions,\n          studentProgressions = _this$props5.studentProgressions;\n    const initialLoad = this.state.initialLoad;\n\n    if (!initialLoad && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0) {\n      const progs = getStudentProgressions(currentUser, studentProgressions, progressions);\n      const firstIncomplete = progs.find(prog => !prog.submitted);\n      this.setState(_objectSpread({}, this.state, {\n        initialLoad: true,\n        selectedProgressionId: firstIncomplete ? \"progression\".concat(firstIncomplete.id) : null\n      }));\n    }\n  }\n\n  render() {\n    const summaryPage = this.state.summaryPage;\n    return React.createElement(\"div\", {\n      className: \"student-home-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Toggle, {\n      handleToggleChange: this.handleToggleChange,\n      summaryPage: summaryPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), !summaryPage ? this.renderMyAgenda() : this.renderStudentSummary());\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    reflections: state.reflections\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchStudentData: student => dispatch(fetchStudentData(student)),\n    updateStudentProgressionStatus: (student, progression, status) => dispatch(updateStudentProgressionStatus(student, progression, status))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AgendaContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/agendas/AgendaContainer.js"],"names":["React","Component","fetchStudentData","MyAgenda","MyProgression","connect","getStudentProgressions","updateStudentProgressionStatus","StudentShowSummary","Toggle","AgendaContainer","state","initialLoad","selectedProgressionId","itemIndex","summaryPage","handleProgressionClick","progression","index","setState","id","handleBackClick","handleNextClick","handleProgressionSubmit","props","currentUser","submitted","handleCurrentAgendaClick","e","handleAllAssignmentsClick","renderStudentSummary","reflections","studentProgressions","progressions","name","renderMyAgenda","Math","random","find","prog","renderNavBar","handleToggleChange","componentDidMount","type","componentDidUpdate","allIds","length","progs","firstIncomplete","render","mapStateToProps","mapDispatchToProps","dispatch","student","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { fetchStudentData } from '../../actions/studentActions'\nimport MyAgenda from './MyAgenda'\nimport MyProgression from './MyProgression'\nimport { connect } from 'react-redux'\nimport './myagenda.css'\nimport { getStudentProgressions } from '../progressions/helpers/getStudentProgressions'\nimport { updateStudentProgressionStatus } from '../../actions/studentProgressionActions'\nimport StudentShowSummary from '../students/show/StudentShowSummary'\nimport Toggle from './Toggle'\n\n\nclass AgendaContainer extends Component {\n  state = {\n    initialLoad: false,\n    selectedProgressionId: null,\n    itemIndex: 0,\n    summaryPage: false\n  }\n\n  componentDidMount(){\n    const { currentUser, fetchStudentData } = this.props\n    if(currentUser.type === \"student\"){\n      fetchStudentData(currentUser)\n    }\n  }\n\n  componentDidUpdate(){\n    const { currentUser, progressions, studentProgressions } = this.props\n    const { initialLoad } = this.state\n    if (!initialLoad && progressions.allIds.length > 0 && studentProgressions.allIds.length > 0){\n      const progs = getStudentProgressions(currentUser, studentProgressions, progressions)\n      const firstIncomplete = progs.find(prog => !prog.submitted)\n      this.setState({\n        ...this.state,\n        initialLoad: true,\n        selectedProgressionId: firstIncomplete ? `progression${firstIncomplete.id}` : null\n      })\n    }\n  }\n\n  handleProgressionClick = (progression, index) => {\n    this.setState({\n      ...this.state,\n      selectedProgressionId: `progression${progression.id}`,\n      itemIndex: index\n    })\n  }\n\n  handleBackClick = () => {\n    const { itemIndex } = this.state\n    this.setState({\n      ...this.state,\n      itemIndex: itemIndex - 1\n    })\n  }\n\n  handleNextClick = () => {\n    const { itemIndex } = this.state\n    this.setState({\n      ...this.state,\n      itemIndex: itemIndex + 1\n    })\n  }\n\n  handleProgressionSubmit = (progression) => {\n    const { updateStudentProgressionStatus, currentUser } = this.props\n    updateStudentProgressionStatus(currentUser, progression, {submitted: true})\n    this.setState({\n      ...this.state,\n      itemIndex: 0,\n      selectedProgressionId: null,\n    })\n  }\n\n  handleCurrentAgendaClick = (e) => {\n    this.setState({\n      ...this.state,\n      summaryPage: false\n    })\n  }\n\n  handleAllAssignmentsClick = (e) => {\n    this.setState({\n      ...this.state,\n      summaryPage: true\n    })\n  }\n\n  renderStudentSummary = () => {\n    const { reflections, currentUser, studentProgressions, progressions } = this.props\n    return <StudentShowSummary\n      myAgenda={true}\n      currentUser={{name: \"Teacher\"}}\n      student={currentUser}\n      reflections={reflections}\n      progressions={getStudentProgressions(currentUser, studentProgressions, progressions)}\n    />\n  }\n\n  renderMyAgenda = () => {\n    const { currentUser, studentProgressions, progressions } = this.props\n    const { selectedProgressionId, itemIndex, summaryPage } = this.state\n    return (\n      <div className=\"myagenda-wrapper\">\n        <MyAgenda\n          itemIndex={itemIndex}\n          selectedProgressionId={selectedProgressionId}\n          handleProgressionClick={this.handleProgressionClick}\n          progressions={getStudentProgressions(currentUser, studentProgressions, progressions)}/>\n        <MyProgression\n          key={Math.random()}\n          itemIndex={itemIndex}\n          handleProgressionSubmit={this.handleProgressionSubmit}\n          handleBackClick={this.handleBackClick}\n          handleNextClick={this.handleNextClick}\n          progression={getStudentProgressions(currentUser, studentProgressions, progressions).find(prog => `progression${prog.id}` === selectedProgressionId)} />\n      </div>\n    )\n  }\n\n// this navbar was styled using code from freefrontend.com\n  renderNavBar = () => {\n    const { summaryPage } = this.state\n    return (\n      <div className=\"myagenda-navbar\">\n        <input id=\"toggle-on\" className=\"toggle toggle-left\" name=\"toggle\" value={\"false\"} type=\"radio\"\n          checked={!summaryPage} onChange={this.handleToggleChange} />\n        <label htmlFor=\"toggle-on\" className=\"btn\">Current Agenda</label>\n        <input id=\"toggle-off\" className=\"toggle toggle-right\" name=\"toggle\" value={\"true\"} type=\"radio\"\n          checked={summaryPage} onChange={this.handleToggleChange}/>\n        <label htmlFor=\"toggle-off\" className=\"btn\">All Progressions</label>\n      </div>\n    )\n  }\n\n  handleToggleChange = (e) => {\n    this.setState({\n      ...this.state,\n      summaryPage: !this.state.summaryPage\n    })\n  }\n\n  render(){\n    const { summaryPage } = this.state\n    return (\n      <div className=\"student-home-wrapper\">\n        <Toggle\n          handleToggleChange={this.handleToggleChange}\n          summaryPage={summaryPage}/>\n        { !summaryPage ? this.renderMyAgenda() : this.renderStudentSummary()}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    currentUser: state.currentUser,\n    studentProgressions: state.studentProgressions,\n    progressions: state.progressions,\n    reflections: state.reflections\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchStudentData: (student) => dispatch(fetchStudentData(student)),\n    updateStudentProgressionStatus: (student, progression, status) => dispatch(updateStudentProgressionStatus(student, progression, status))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AgendaContainer)\n"]},"metadata":{},"sourceType":"module"}