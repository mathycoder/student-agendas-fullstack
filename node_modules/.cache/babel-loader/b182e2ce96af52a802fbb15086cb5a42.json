{"ast":null,"code":"import _objectWithoutProperties from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n});\nexport default studentReducer;\n\nfunction studentsById(state = {}, action) {\n  switch (action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENTS':\n      console.log('ADD_STUDENTS');\n      const normalizedObject = {};\n      action.students.forEach(student => {\n        normalizedObject[\"student\".concat(student.id)] = student;\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = \"student\".concat(action.student.id);\n      return _objectSpread({}, state, {\n        [newStudentId]: action.student\n      });\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const deleteStudentId = \"student\".concat(action.student.id);\n\n      const value = state[deleteStudentId],\n            newState = _objectWithoutProperties(state, [deleteStudentId].map(_toPropertyKey));\n\n      return _objectSpread({}, newState);\n\n    default:\n      return state;\n  }\n}\n\nfunction allStudents(state = [], action) {\n  switch (action.type) {\n    case 'ADD_STUDENTS':\n      return [...sortedStudents(action.students).map(student => \"student\".concat(student.id))];\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = \"student\".concat(action.student.id);\n      return [...state, studentId];\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const studentIdToDelete = \"student\".concat(action.student.id);\n      return state.filter(stId => stId !== studentIdToDelete);\n\n    default:\n      return state;\n  }\n}\n\nfunction sortedStudents(students) {\n  return students.sort((stA, stB) => {\n    const studentA = stA.firstName.toLowerCase();\n    const studentB = stB.firstName.toLowerCase();\n\n    if (studentA > studentB) {\n      return 1;\n    } else if (studentA < studentB) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/studentReducer.js"],"names":["combineReducers","studentReducer","byId","studentsById","allIds","allStudents","state","action","type","console","log","normalizedObject","students","forEach","student","id","newStudentId","deleteStudentId","value","newState","sortedStudents","map","studentId","studentIdToDelete","filter","stId","sort","stA","stB","studentA","firstName","toLowerCase","studentB"],"mappings":";;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,cAAc,GAAGD,eAAe,CAAC;AACrCE,EAAAA,IAAI,EAAEC,YAD+B;AAErCC,EAAAA,MAAM,EAAEC;AAF6B,CAAD,CAAtC;AAKA,eAAeJ,cAAf;;AAEA,SAASE,YAAT,CAAsBG,KAAK,GAAG,EAA9B,EAAkCC,MAAlC,EAA0C;AACxC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,+BAAL;AACE,+BACKF,KADL;;AAIF,SAAK,cAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMC,gBAAgB,GAAG,EAAzB;AACAJ,MAAAA,MAAM,CAACK,QAAP,CAAgBC,OAAhB,CAAwBC,OAAO,IAAI;AACjCH,QAAAA,gBAAgB,kBAAWG,OAAO,CAACC,EAAnB,EAAhB,GAA2CD,OAA3C;AACD,OAFD;AAIA,+BACKH,gBADL;;AAIF,SAAK,uCAAL;AACE,+BACKL,KADL;;AAIF,SAAK,sBAAL;AACE,YAAMU,YAAY,oBAAaT,MAAM,CAACO,OAAP,CAAeC,EAA5B,CAAlB;AAEA,+BACKT,KADL;AAEE,SAACU,YAAD,GAAgBT,MAAM,CAACO;AAFzB;;AAKF,SAAK,2CAAL;AACE,+BACKR,KADL;;AAIF,SAAK,2BAAL;AACE,YAAMW,eAAe,oBAAaV,MAAM,CAACO,OAAP,CAAeC,EAA5B,CAArB;;AADF,YAE6BG,KAF7B,GAEqDZ,KAFrD,CAEWW,eAFX;AAAA,YAEuCE,QAFvC,4BAEqDb,KAFrD,GAEWW,eAFX;;AAIE,+BACKE,QADL;;AAIF;AACE,aAAOb,KAAP;AA5CJ;AA8CD;;AAGD,SAASD,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAEvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,aAAO,CACL,GAAGY,cAAc,CAACb,MAAM,CAACK,QAAR,CAAd,CAAgCS,GAAhC,CAAoCP,OAAO,qBAAcA,OAAO,CAACC,EAAtB,CAA3C,CADE,CAAP;;AAIF,SAAK,sBAAL;AACE,YAAMO,SAAS,oBAAaf,MAAM,CAACO,OAAP,CAAeC,EAA5B,CAAf;AACA,aAAO,CAAC,GAAGT,KAAJ,EAAWgB,SAAX,CAAP;;AAEF,SAAK,2BAAL;AACE,YAAMC,iBAAiB,oBAAahB,MAAM,CAACO,OAAP,CAAeC,EAA5B,CAAvB;AACA,aAAOT,KAAK,CAACkB,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKF,iBAA9B,CAAP;;AAEF;AACE,aAAOjB,KAAP;AAfJ;AAiBD;;AAED,SAASc,cAAT,CAAwBR,QAAxB,EAAiC;AAC/B,SAAOA,QAAQ,CAACc,IAAT,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,UAAMC,QAAQ,GAAGF,GAAG,CAACG,SAAJ,CAAcC,WAAd,EAAjB;AACA,UAAMC,QAAQ,GAAGJ,GAAG,CAACE,SAAJ,CAAcC,WAAd,EAAjB;;AACA,QAAIF,QAAQ,GAAGG,QAAf,EAAyB;AAAE,aAAO,CAAP;AAAU,KAArC,MACK,IAAIH,QAAQ,GAAGG,QAAf,EAA0B;AAAC,aAAO,CAAC,CAAR;AAAW,KAAtC,MACA;AAAC,aAAO,CAAP;AAAS;AAChB,GANM,CAAP;AAOD","sourcesContent":["import { combineReducers } from 'redux'\n\nconst studentReducer = combineReducers({\n  byId: studentsById,\n  allIds: allStudents\n})\n\nexport default studentReducer\n\nfunction studentsById(state = {}, action) {\n  switch(action.type) {\n    case 'START_ADDING_STUDENTS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENTS':\n      console.log('ADD_STUDENTS')\n      const normalizedObject = {}\n      action.students.forEach(student => {\n        normalizedObject[`student${student.id}`] = student\n      })\n\n      return {\n        ...normalizedObject\n      }\n\n    case 'START_ADDING_STUDENT_TO_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const newStudentId = `student${action.student.id}`\n\n      return {\n        ...state,\n        [newStudentId]: action.student\n      }\n\n    case 'START_REMOVING_STUDENT_FROM_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const deleteStudentId = `student${action.student.id}`\n      const { [deleteStudentId]: value, ...newState  } = state\n\n      return {\n        ...newState\n      }\n\n    default:\n      return state\n  }\n}\n\n\nfunction allStudents(state = [], action) {\n\n  switch(action.type) {\n    case 'ADD_STUDENTS':\n      return [\n        ...sortedStudents(action.students).map(student => `student${student.id}`)\n      ]\n\n    case 'ADD_STUDENT_TO_KLASS':\n      const studentId = `student${action.student.id}`\n      return [...state, studentId]\n\n    case 'REMOVE_STUDENT_FROM_KLASS':\n      const studentIdToDelete = `student${action.student.id}`\n      return state.filter(stId => stId !== studentIdToDelete)\n\n    default:\n      return state\n  }\n}\n\nfunction sortedStudents(students){\n  return students.sort((stA, stB) => {\n    const studentA = stA.firstName.toLowerCase()\n    const studentB = stB.firstName.toLowerCase()\n    if (studentA > studentB) { return 1 }\n    else if (studentA < studentB ) {return -1 }\n    else {return 0}\n  })\n}\n"]},"metadata":{},"sourceType":"module"}