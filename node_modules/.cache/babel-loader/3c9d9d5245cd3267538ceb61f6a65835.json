{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/agendas/MyProgression.js\";\nimport React, { Component } from 'react';\nimport MyProgressionItem from './MyProgressionItem';\nimport { connect } from 'react-redux';\n\nclass MyProgression extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      index: 0\n    };\n\n    this.renderProgressionItem = itemId => {\n      const _this$props = this.props,\n            videos = _this$props.videos,\n            reflections = _this$props.reflections;\n\n      if (videos.allIds.length > 0 && reflections.allIds.length > 0) {\n        if (itemId.contains(\"video\")) {\n          return React.createElement(MyProgressionItem, {\n            video: videos.byId[itemId],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const progression = this.props.progression;\n    const index = this.state.index;\n\n    if (progression) {\n      return React.createElement(\"div\", {\n        className: \"myprogression \".concat(progression.color, \" \").concat(progression.color, \"-border\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"student-show-progression-title \".concat(progression.color, \"-title\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, progression.name), this.renderProgressionItem(progression[index]));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  };\n}\n\nexport default connect(mapStateToProps, null)(MyProgression);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/agendas/MyProgression.js"],"names":["React","Component","MyProgressionItem","connect","MyProgression","state","index","renderProgressionItem","itemId","props","videos","reflections","allIds","length","contains","byId","render","progression","color","name","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACnCI,KADmC,GAC3B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD2B;;AAAA,SAKnCC,qBALmC,GAKVC,MAAD,IAAY;AAAA,0BACF,KAAKC,KADH;AAAA,YAC1BC,MAD0B,eAC1BA,MAD0B;AAAA,YAClBC,WADkB,eAClBA,WADkB;;AAElC,UAAID,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,CAAvB,IAA4BF,WAAW,CAACC,MAAZ,CAAmBC,MAAnB,GAA4B,CAA5D,EAA8D;AAC5D,YAAIL,MAAM,CAACM,QAAP,CAAgB,OAAhB,CAAJ,EAA6B;AAC3B,iBAAO,oBAAC,iBAAD;AAAmB,YAAA,KAAK,EAAEJ,MAAM,CAACK,IAAP,CAAYP,MAAZ,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;AACF,KAZkC;AAAA;;AAcnCQ,EAAAA,MAAM,GAAE;AAAA,UACEC,WADF,GACkB,KAAKR,KADvB,CACEQ,WADF;AAAA,UAEEX,KAFF,GAEY,KAAKD,KAFjB,CAEEC,KAFF;;AAGN,QAAIW,WAAJ,EAAiB;AACf,aACE;AAAK,QAAA,SAAS,0BAAmBA,WAAW,CAACC,KAA/B,cAAwCD,WAAW,CAACC,KAApD,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,2CAAoCD,WAAW,CAACC,KAAhD,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,WAAW,CAACE,IADf,CADF,EAII,KAAKZ,qBAAL,CAA2BU,WAAW,CAACX,KAAD,CAAtC,CAJJ,CADF;AAQD,KATD,MASO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AA7BkC;;AAgCrC,SAASc,eAAT,CAAyBf,KAAzB,EAA+B;AAC7B,SAAO;AACLK,IAAAA,MAAM,EAAEL,KAAK,CAACK,MADT;AAELC,IAAAA,WAAW,EAAEN,KAAK,CAACM;AAFd,GAAP;AAID;;AAED,eAAeR,OAAO,CAACiB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,aAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport MyProgressionItem from './MyProgressionItem'\nimport { connect } from 'react-redux'\n\nclass MyProgression extends Component{\n  state = {\n    index: 0\n  }\n\n  renderProgressionItem = (itemId) => {\n    const { videos, reflections } = this.props\n    if (videos.allIds.length > 0 && reflections.allIds.length > 0){\n      if (itemId.contains(\"video\")){\n        return <MyProgressionItem video={videos.byId[itemId]}/>\n      }\n    }  \n  }\n\n  render(){\n    const { progression } = this.props\n    const { index } = this.state\n    if (progression) {\n      return (\n        <div className={`myprogression ${progression.color} ${progression.color}-border`}>\n          <div className={`student-show-progression-title ${progression.color}-title`}>\n            {progression.name}\n          </div>\n          { this.renderProgressionItem(progression[index]) }\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  }\n}\n\nexport default connect(mapStateToProps, null)(MyProgression)\n"]},"metadata":{},"sourceType":"module"}