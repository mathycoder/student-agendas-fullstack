{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js\";\nimport React, { Component } from 'react';\nimport IndexProgression from './IndexProgression';\nimport { connect } from 'react-redux';\nimport { fetchProgressions } from '../actions/progressionActions';\n\nclass IndexProgressionsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      progressions: []\n    };\n\n    this.deleteProgression = progression => {\n      fetch(\"/progressions/\".concat(progression.id), {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(json => {\n        this.setState({\n          progressions: this.state.progressions.filter(prog => prog.id !== json.id)\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchProgressions();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.progressions);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"progressions-index-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.progressions.allIds.map((progressionId, index) => {\n      const progression = this.props.progressions.byId[progressionId];\n      return React.createElement(IndexProgression, {\n        key: index,\n        progression: progression,\n        history: this.props.history,\n        deleteProgression: this.deleteProgression,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions())\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    progressions: state.progressions\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/progressions/IndexProgressionsContainer.js"],"names":["React","Component","IndexProgression","connect","fetchProgressions","IndexProgressionsContainer","state","progressions","deleteProgression","progression","fetch","id","method","then","resp","json","setState","filter","prog","componentDidMount","props","componentDidUpdate","console","log","render","allIds","map","progressionId","index","byId","history","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,0BAAN,SAAyCJ,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDK,KADiD,GACzC;AACNC,MAAAA,YAAY,EAAE;AADR,KADyC;;AAAA,SAajDC,iBAbiD,GAa5BC,WAAD,IAAiB;AACnCC,MAAAA,KAAK,yBAAkBD,WAAW,CAACE,EAA9B,GAAoC;AACvCC,QAAAA,MAAM,EAAE;AAD+B,OAApC,CAAL,CAGGC,IAHH,CAGQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHhB,EAIGF,IAJH,CAIQE,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZT,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYI,IAAI,CAACJ,EAAxD;AADF,SAAd;AAGD,OARH;AASD,KAvBgD;AAAA;;AAKjDQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWhB,iBAAX;AACD;;AAEDiB,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWb,YAAvB;AACD;;AAgBDiB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWb,YAAX,CAAwBkB,MAAxB,CAA+BC,GAA/B,CAAmC,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AAC5D,YAAMnB,WAAW,GAAG,KAAKW,KAAL,CAAWb,YAAX,CAAwBsB,IAAxB,CAA6BF,aAA7B,CAApB;AACA,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEC,KAAvB;AAA8B,QAAA,WAAW,EAAEnB,WAA3C;AAAwD,QAAA,OAAO,EAAE,KAAKW,KAAL,CAAWU,OAA5E;AAAqF,QAAA,iBAAiB,EAAE,KAAKtB,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHA,CADH,CADF;AAQD;;AApCgD;;AAwCnD,SAASuB,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAO;AACL5B,IAAAA,iBAAiB,EAAE,MAAM4B,QAAQ,CAAC5B,iBAAiB,EAAlB;AAD5B,GAAP;AAGD;;AAED,SAAS6B,eAAT,CAAyB3B,KAAzB,EAA+B;AAC7B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAArB,GAAP;AACD;;AAED,eAAeJ,OAAO,CAAC8B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6C1B,0BAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport IndexProgression from './IndexProgression'\nimport { connect } from 'react-redux'\nimport { fetchProgressions } from '../actions/progressionActions'\n\nclass IndexProgressionsContainer extends Component {\n  state = {\n    progressions: []\n  }\n\n  componentDidMount(){\n    this.props.fetchProgressions()\n  }\n\n  componentDidUpdate(){\n    console.log(this.props.progressions)\n  }\n\n  deleteProgression = (progression) => {\n    fetch(`/progressions/${progression.id}`, {\n      method: 'DELETE'\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        this.setState({\n          progressions: this.state.progressions.filter(prog => prog.id !== json.id)\n        })\n      })\n  }\n\n\n\n  render(){\n    return (\n      <div className=\"progressions-index-container\">\n        {this.props.progressions.allIds.map((progressionId, index) => {\n          const progression = this.props.progressions.byId[progressionId]\n          return <IndexProgression key={index} progression={progression} history={this.props.history} deleteProgression={this.deleteProgression}/>\n        })}\n      </div>\n    )\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    fetchProgressions: () => dispatch(fetchProgressions())\n  }\n}\n\nfunction mapStateToProps(state){\n  return {progressions: state.progressions}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexProgressionsContainer)\n"]},"metadata":{},"sourceType":"module"}