{"ast":null,"code":"export function signup(teacherData, history) {\n  return dispatch => {\n    dispatch({\n      type: 'CREATING_NEW_TEACHER_REQUEST'\n    });\n    fetch(\"/teachers\", {\n      method: 'POST',\n      body: JSON.stringify(teacherData),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\"\n    }).then(resp => resp.json()).then(teacher => {\n      if (teacher.error) {\n        history.push('/login');\n      } else {\n        dispatch({\n          type: 'CREATE_NEW_TEACHER',\n          teacher\n        });\n        history.push('/classes');\n      }\n    }).catch(console.log);\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/actions/teacherActions.js"],"names":["signup","teacherData","history","dispatch","type","fetch","method","body","JSON","stringify","headers","credentials","then","resp","json","teacher","error","push","catch","console","log"],"mappings":"AAAA,OAAO,SAASA,MAAT,CAAgBC,WAAhB,EAA6BC,OAA7B,EAAqC;AAC1C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACCC,IAAAA,KAAK,cAAc;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAFW;AAGjBS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHQ;AAMjBC,MAAAA,WAAW,EAAE;AANI,KAAd,CAAL,CAQEC,IARF,CAQOC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARf,EASEF,IATF,CASOG,OAAO,IAAI;AACf,UAAIA,OAAO,CAACC,KAAZ,EAAkB;AAChBd,QAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,OAFD,MAEO;AACLd,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,oBAAR;AAA8BW,UAAAA;AAA9B,SAAD,CAAR;AACAb,QAAAA,OAAO,CAACe,IAAR,CAAa,UAAb;AACD;AACF,KAhBF,EAiBEC,KAjBF,CAiBQC,OAAO,CAACC,GAjBhB;AAkBF,GApBD;AAqBD","sourcesContent":["export function signup(teacherData, history){\n  return (dispatch) => {\n    dispatch({ type: 'CREATING_NEW_TEACHER_REQUEST' })\n     fetch(`/teachers`, {\n       method: 'POST',\n       body: JSON.stringify(teacherData),\n       headers: {\n         'Content-Type': 'application/json'\n       },\n       credentials: \"include\"\n    })\n      .then(resp => resp.json())\n      .then(teacher => {\n        if (teacher.error){\n          history.push('/login')\n        } else {\n          dispatch({ type: 'CREATE_NEW_TEACHER', teacher })\n          history.push('/classes')\n        }\n      })\n      .catch(console.log)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}