{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst RenderItem = ({\n  progression,\n  videos,\n  reflections,\n  itemIndex,\n  selectedProgressionId,\n  handleProgressionClick\n}) => {\n  if (progression.items) {\n    return progression.items.map((itemChildId, index) => {\n      let item;\n      const highlighted = selectedProgressionId === \"progression\".concat(progression.id) && index === itemIndex ? \"highlighted\" : selectedProgressionId ? 'unhighlighted' : '';\n\n      if (itemChildId.includes(\"video\")) {\n        if (videos.allIds.length > 0) {\n          const video = videos.byId[itemChildId];\n          item = React.createElement(\"div\", {\n            key: index,\n            onClick: handleProgressionClick ? e => handleProgressionClick(progression, index) : undefined,\n            className: \"student-show-progression-item \".concat(highlighted),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: video.thumbnailUrl,\n            alt: \"learning video\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"student-show-progression-item-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, video.title));\n        } else {\n          item = React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          });\n        }\n      } else if (itemChildId.includes(\"reflection\")) {\n        if (reflections.allIds.length > 0) {\n          const reflection = reflections.byId[itemChildId];\n          item = React.createElement(\"div\", {\n            key: index,\n            onClick: handleProgressionClick ? e => handleProgressionClick(progression, index) : undefined,\n            className: \"student-show-progression-item reflection \".concat(highlighted),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"/paper-pencil.png\",\n            alt: \"learning reflection\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"student-show-progression-item-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, reflection.title));\n        } else {\n          item = React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n        }\n      }\n\n      return item;\n    });\n  } else {\n    debugger;\n  }\n};\n\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  };\n}\n\nexport default connect(mapStateToProps, null)(RenderItem);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/progressions/RenderItem.js"],"names":["React","connect","RenderItem","progression","videos","reflections","itemIndex","selectedProgressionId","handleProgressionClick","items","map","itemChildId","index","item","highlighted","id","includes","allIds","length","video","byId","e","undefined","thumbnailUrl","title","reflection","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nconst RenderItem = ({progression, videos, reflections, itemIndex, selectedProgressionId, handleProgressionClick}) => {\n  if (progression.items){\n    return progression.items.map((itemChildId, index) => {\n      let item\n      const highlighted = selectedProgressionId === `progression${progression.id}` && index === itemIndex ?\n        \"highlighted\" : (selectedProgressionId ? 'unhighlighted' : '')\n      if (itemChildId.includes(\"video\")) {\n        if (videos.allIds.length > 0){\n          const video = videos.byId[itemChildId]\n          item = (\n          <div key={index}\n            onClick={handleProgressionClick ? (e => handleProgressionClick(progression, index)) : undefined}\n            className={`student-show-progression-item ${highlighted}`}>\n            <img src={video.thumbnailUrl} alt=\"learning video\" />\n            <br/>\n            <div className=\"student-show-progression-item-title\">{video.title}</div>\n          </div>\n         )\n        } else {\n          item = (<div key={index}></div>)\n        }\n      } else if (itemChildId.includes(\"reflection\")) {\n        if (reflections.allIds.length > 0){\n          const reflection = reflections.byId[itemChildId]\n          item = (\n          <div\n            key={index}\n            onClick={handleProgressionClick ? (e => handleProgressionClick(progression, index)) : undefined}\n            className={`student-show-progression-item reflection ${highlighted}`}>\n            <img src=\"/paper-pencil.png\" alt=\"learning reflection\" />\n\n            <div className=\"student-show-progression-item-title\">{reflection.title}</div>\n          </div>\n         )\n        } else {\n          item = (<div key={index}></div>)\n        }\n      }\n      return item\n    })\n  } else {\n    debugger\n  }\n\n}\n\nfunction mapStateToProps(state){\n  return {\n    videos: state.videos,\n    reflections: state.reflections\n  }\n}\n\nexport default connect(mapStateToProps, null)(RenderItem)\n"]},"metadata":{},"sourceType":"module"}