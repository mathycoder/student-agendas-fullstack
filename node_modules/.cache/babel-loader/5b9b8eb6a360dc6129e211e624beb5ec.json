{"ast":null,"code":"import _defineProperty from \"/Users/adamsarli/Coding/student-agendas-fullstack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nconst klassReducer = combineReducers({\n  byId: klassesById,\n  allIds: allKlasses\n});\nexport default klassReducer;\n\nfunction klassesById(state = {}, action) {\n  switch (action.type) {\n    case 'START_ADDING_KLASSES_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_KLASSES':\n      const normalizedObject = {};\n      action.klasses.forEach(klass => {\n        normalizedObject[\"klass\".concat(klass.id)] = klass;\n      });\n      return _objectSpread({}, normalizedObject);\n\n    case 'START_ADDING_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'ADD_KLASS':\n      const klassId = \"klass\".concat(action.klass.id);\n      return _objectSpread({}, state, {\n        [klassId]: action.klass\n      });\n\n    case 'START_REMOVING_KLASS_REQUEST':\n      return _objectSpread({}, state);\n\n    case 'REMOVE_KLASS':\n      return state.klasses.filter(kl => kl.id !== action.klassId);\n\n    default:\n      return state;\n  }\n}\n\nfunction allKlasses(state = [], action) {\n  switch (action.type) {\n    case 'ADD_KLASSES':\n      return [...action.klasses.map(klass => \"klass\".concat(klass.id))];\n\n    case 'ADD_KLASS':\n      const klassId = \"klass\".concat(action.klass.id);\n      return [...state, klassId];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/reducers/klassReducer.js"],"names":["combineReducers","klassReducer","byId","klassesById","allIds","allKlasses","state","action","type","normalizedObject","klasses","forEach","klass","id","klassId","filter","kl","map"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAGD,eAAe,CAAC;AACnCE,EAAAA,IAAI,EAAEC,WAD6B;AAEnCC,EAAAA,MAAM,EAAEC;AAF2B,CAAD,CAApC;AAKA,eAAeJ,YAAf;;AAEA,SAASE,WAAT,CAAqBG,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAEvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,8BAAL;AACE,+BACKF,KADL;;AAIF,SAAK,aAAL;AACE,YAAMG,gBAAgB,GAAG,EAAzB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBC,KAAK,IAAI;AAC9BH,QAAAA,gBAAgB,gBAASG,KAAK,CAACC,EAAf,EAAhB,GAAuCD,KAAvC;AACD,OAFD;AAIA,+BACKH,gBADL;;AAIF,SAAK,4BAAL;AACE,+BACKH,KADL;;AAIF,SAAK,WAAL;AACE,YAAMQ,OAAO,kBAAWP,MAAM,CAACK,KAAP,CAAaC,EAAxB,CAAb;AACA,+BACKP,KADL;AAEE,SAACQ,OAAD,GAAWP,MAAM,CAACK;AAFpB;;AAKF,SAAK,8BAAL;AACE,+BACKN,KADL;;AAIF,SAAK,cAAL;AACE,aAAOA,KAAK,CAACI,OAAN,CAAcK,MAAd,CAAqBC,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUN,MAAM,CAACO,OAA5C,CAAP;;AAEF;AACE,aAAOR,KAAP;AArCJ;AAuCD;;AAED,SAASD,UAAT,CAAoBC,KAAK,GAAG,EAA5B,EAAgCC,MAAhC,EAAwC;AAEtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACE,aAAO,CACL,GAAGD,MAAM,CAACG,OAAP,CAAeO,GAAf,CAAmBL,KAAK,mBAAYA,KAAK,CAACC,EAAlB,CAAxB,CADE,CAAP;;AAIF,SAAK,WAAL;AACE,YAAMC,OAAO,kBAAWP,MAAM,CAACK,KAAP,CAAaC,EAAxB,CAAb;AACA,aAAO,CAAC,GAAGP,KAAJ,EAAWQ,OAAX,CAAP;;AAEF;AACE,aAAOR,KAAP;AAXJ;AAaD","sourcesContent":["import { combineReducers } from 'redux'\n\nconst klassReducer = combineReducers({\n  byId: klassesById,\n  allIds: allKlasses\n})\n\nexport default klassReducer\n\nfunction klassesById(state = {}, action) {\n\n  switch(action.type) {\n    case 'START_ADDING_KLASSES_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_KLASSES':\n      const normalizedObject = {}\n      action.klasses.forEach(klass => {\n        normalizedObject[`klass${klass.id}`] = klass\n      })\n\n      return {\n        ...normalizedObject\n      }\n\n    case 'START_ADDING_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'ADD_KLASS':\n      const klassId = `klass${action.klass.id}`\n      return {\n        ...state,\n        [klassId]: action.klass\n      }\n\n    case 'START_REMOVING_KLASS_REQUEST':\n      return {\n        ...state\n      }\n\n    case 'REMOVE_KLASS':\n      return state.klasses.filter(kl => kl.id !== action.klassId)\n\n    default:\n      return state;\n  }\n}\n\nfunction allKlasses(state = [], action) {\n\n  switch(action.type) {\n    case 'ADD_KLASSES':\n      return [\n        ...action.klasses.map(klass => `klass${klass.id}`)\n      ]\n\n    case 'ADD_KLASS':\n      const klassId = `klass${action.klass.id}`\n      return [...state, klassId]\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}