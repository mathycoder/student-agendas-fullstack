{"ast":null,"code":"export function vimeoVideoSearch(query) {\n  return dispatch => {\n    dispatch({\n      type: 'START_VIMEO_SEARCH_REQUEST',\n      query\n    });\n    fetch(\"/videos/getVimeoVideoMetadata/?q=\".concat(query)).then(resp => resp.json()).then(videos => dispatch({\n      type: 'ADD_VIMEO_VIDEOS',\n      videos\n    }));\n  };\n}\nexport function youTubeVideoSearch(query) {\n  return dispatch => {\n    dispatch({\n      type: 'START_YOUTUBE_SEARCH_REQUEST',\n      query\n    });\n    fetch(\"/videos/getYouTubeVideoMetadata/?q=\".concat(query)).then(resp => resp.json()).then(videos => dispatch({\n      type: 'ADD_YOUTUBE_VIDEOS',\n      videos\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/actions/videoSearchActions.js"],"names":["vimeoVideoSearch","query","dispatch","type","fetch","then","resp","json","videos","youTubeVideoSearch"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,4BAAP;AAAqCF,MAAAA;AAArC,KAAD,CAAR;AACAG,IAAAA,KAAK,4CAAqCH,KAArC,EAAL,CACGI,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,MAAM,IAAIN,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,kBAAR;AAA4BK,MAAAA;AAA5B,KAAD,CAF1B;AAGD,GALD;AAMD;AAED,OAAO,SAASC,kBAAT,CAA4BR,KAA5B,EAAmC;AACxC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,8BAAP;AAAuCF,MAAAA;AAAvC,KAAD,CAAR;AACAG,IAAAA,KAAK,8CAAuCH,KAAvC,EAAL,CACGI,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,MAAM,IAAIN,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,oBAAR;AAA8BK,MAAAA;AAA9B,KAAD,CAF1B;AAGD,GALD;AAMD","sourcesContent":["export function vimeoVideoSearch(query) {\n  return (dispatch) => {\n    dispatch({type: 'START_VIMEO_SEARCH_REQUEST', query})\n    fetch(`/videos/getVimeoVideoMetadata/?q=${query}`)\n      .then(resp => resp.json())\n      .then(videos => dispatch({ type: 'ADD_VIMEO_VIDEOS', videos }))\n  }\n}\n\nexport function youTubeVideoSearch(query) {\n  return (dispatch) => {\n    dispatch({type: 'START_YOUTUBE_SEARCH_REQUEST', query})\n    fetch(`/videos/getYouTubeVideoMetadata/?q=${query}`)\n      .then(resp => resp.json())\n      .then(videos => dispatch({ type: 'ADD_YOUTUBE_VIDEOS', videos }))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}