{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/Student.js\";\nimport React, { Component } from 'react';\nimport StudentAgenda from './StudentAgenda';\nimport './student.css';\nimport { connect } from 'react-redux';\nimport { deleteStudentProgression, switchStudentProgression } from '../../actions/studentProgressionActions';\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd';\n\nclass Student extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteProgClick = progression => {\n      const _this$props = this.props,\n            deleteStudentProgression = _this$props.deleteStudentProgression,\n            student = _this$props.student;\n      deleteStudentProgression(student, progression);\n    };\n\n    this.handleDNDDragStart = attributes => {// const {draggableId} = attributes\n      // document.querySelector(`#item-${draggableId}`).classList.add(\"item-dragging\")\n    };\n\n    this.handleDNDDragEnd = result => {\n      // TODO: update the order of progressions in the student agenda\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n      console.log(destination, source);\n      this.props.switchStudentProgression(); // document.querySelector(`#item-${draggableId}`).classList.remove(\"item-dragging\")\n      // if (!destination) {\n      //   return\n      // }\n      //\n      // if (destination.index !== source.index) {\n      //   const testArray = [...this.state.currProgression]\n      //   testArray.splice(source.index, 1)\n      //   testArray.splice(destination.index, 0, this.state.currProgression[source.index])\n      //   this.setState({\n      //     ...this.state,\n      //     currProgression: testArray\n      //   })\n      // }\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          student = _this$props2.student,\n          progressions = _this$props2.progressions,\n          videos = _this$props2.videos,\n          removeStudentFromKlass = _this$props2.removeStudentFromKlass,\n          handleDragOver = _this$props2.handleDragOver,\n          handleDragLeave = _this$props2.handleDragLeave,\n          handleDragDrop = _this$props2.handleDragDrop;\n    return React.createElement(\"div\", {\n      className: \"student-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"student-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"index-progression-x-out\",\n      onClick: event => removeStudentFromKlass(student),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"x\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, student.firstName, \" \", student.lastName)), React.createElement(DragDropContext, {\n      onDragEnd: this.handleDNDDragEnd,\n      onDragStart: this.handleDNDDragStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable-\".concat(student.id),\n      direction: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, provided => React.createElement(StudentAgenda, Object.assign({}, provided.droppableProps, {\n      placeholder: provided.placeholder,\n      innerRef: provided.innerRef,\n      student: student,\n      progressions: progressions,\n      videos: videos,\n      handleDragOver: handleDragOver,\n      handleDragLeave: handleDragLeave,\n      handleDragDrop: handleDragDrop,\n      handleDeleteProgClick: this.handleDeleteProgClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteStudentProgression: (student, progression) => dispatch(deleteStudentProgression(student, progression)),\n    switchStudentProgression: () => dispatch(deleteStudentProgression())\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Student);","map":{"version":3,"sources":["/Users/adamsarli/Coding/student-agendas-fullstack/client/src/components/students/Student.js"],"names":["React","Component","StudentAgenda","connect","deleteStudentProgression","switchStudentProgression","Droppable","DragDropContext","Student","handleDeleteProgClick","progression","props","student","handleDNDDragStart","attributes","handleDNDDragEnd","result","destination","source","draggableId","console","log","render","progressions","videos","removeStudentFromKlass","handleDragOver","handleDragLeave","handleDragDrop","event","firstName","lastName","id","provided","droppableProps","placeholder","innerRef","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport StudentAgenda from './StudentAgenda'\nimport './student.css'\nimport { connect } from 'react-redux'\nimport { deleteStudentProgression, switchStudentProgression } from '../../actions/studentProgressionActions'\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd'\n\nclass Student extends Component {\n\n  handleDeleteProgClick = (progression) => {\n    const { deleteStudentProgression, student } = this.props\n    deleteStudentProgression(student, progression)\n  }\n\n  handleDNDDragStart = attributes => {\n    // const {draggableId} = attributes\n    // document.querySelector(`#item-${draggableId}`).classList.add(\"item-dragging\")\n  }\n\n  handleDNDDragEnd = result => {\n    // TODO: update the order of progressions in the student agenda\n\n    const { destination, source, draggableId } = result\n    console.log(destination, source)\n    this.props.switchStudentProgression()\n    // document.querySelector(`#item-${draggableId}`).classList.remove(\"item-dragging\")\n    // if (!destination) {\n    //   return\n    // }\n    //\n    // if (destination.index !== source.index) {\n    //   const testArray = [...this.state.currProgression]\n    //   testArray.splice(source.index, 1)\n    //   testArray.splice(destination.index, 0, this.state.currProgression[source.index])\n    //   this.setState({\n    //     ...this.state,\n    //     currProgression: testArray\n    //   })\n    // }\n\n  }\n\n  render(){\n    const { student, progressions, videos, removeStudentFromKlass, handleDragOver, handleDragLeave, handleDragDrop } = this.props\n    return (\n      <div className={`student-row`}>\n        <div className=\"student-name\">\n          <div className=\"index-progression-x-out\" onClick={(event) => removeStudentFromKlass(student)}>x</div>\n          <h2>{student.firstName} {student.lastName}</h2>\n        </div>\n        <DragDropContext\n          onDragEnd={this.handleDNDDragEnd}\n          onDragStart={this.handleDNDDragStart}\n          >\n          <Droppable droppableId={`droppable-${student.id}`} direction=\"horizontal\">\n            {(provided) => (\n              <StudentAgenda\n                {...provided.droppableProps}\n                placeholder={provided.placeholder}\n                innerRef={provided.innerRef}\n                student={student}\n                progressions={progressions}\n                videos={videos}\n                handleDragOver={handleDragOver}\n                handleDragLeave={handleDragLeave}\n                handleDragDrop={handleDragDrop}\n                handleDeleteProgClick={this.handleDeleteProgClick}\n                />\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n    deleteStudentProgression: (student, progression) => dispatch(deleteStudentProgression(student, progression)),\n    switchStudentProgression: () => dispatch(deleteStudentProgression())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Student)\n"]},"metadata":{},"sourceType":"module"}